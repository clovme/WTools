<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2025-01-07T16:36:08</timestamp>
        <product version="6.5.3+7f0b0a9d18" user="andr hu">Dotfuscator Community</product>
    </header>
    <mapping>
        <module>
            <name>DriverEasy.exe</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int32(string)</signature>
                        <name>ComputeStringHash</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=92</signature>
                        <name>498D0CA653E929973C4AD45055EB2A3EE81785F1E900DB0EE3BB62D093C51C64</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=92</name>
                <newname>i/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>native int(unsigned int32)</signature>
                        <name>CPUIDSDK_fp_QueryInterface</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DestroyInstance</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSVendor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSVersion</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetBusFrequency</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetChassisManufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetChassisSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetChassisType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDirectXVersion</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetDisplayAdapterBusInfos</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetDisplayAdapterClock</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterCodeName</name>
                    </method>
                    <method>
                        <signature>string(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterCoreFamily</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterCurrentPerformanceLevel</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterFanPWM</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterFanSpeed</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetDisplayAdapterManufacturingProcess</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemoryBusWidth</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemorySize</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemoryType</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterMemoryVendor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterName</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterNumberOfPerformanceLevels</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetDisplayAdapterPCIAddress</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>GetDisplayAdapterPerformanceLevelName</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetDisplayAdapterStockClock</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetDisplayAdapterTemperature</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdaterDriverVersion</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;)</signature>
                        <name>GetDllVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardVendor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetMemoryCASLatency</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetMemoryClockFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryCommandRate</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, string&amp;)</signature>
                        <name>GetMemoryDeviceInfos</name>
                    </method>
                    <method>
                        <signature>bool(int32, string&amp;, string&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMemoryDeviceInfosExt</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string&amp;, string&amp;)</signature>
                        <name>GetMemoryInfosExt</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryMaxCapacity</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryMaxNumberOfDevices</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryNumberOfChannels</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryRASPrecharge</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryRAStoCASDelay</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemorySize</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMemorySlotsConfig</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryTRAS</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryTRC</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryType</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetMonitorGamma</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorID</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetMonitorManufacturingDate</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetMonitorMaxPixelClock</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorName</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMonitorResolution</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorSerial</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetMonitorSize</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorVendor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeVendor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfDisplayAdapter</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfMemoryDevices</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfMonitors</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfProcessors</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfSPDModules</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfStorageDevice</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32&amp;, int32&amp;)</signature>
                        <name>GetProcessorCacheParameters</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorCodeName</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreClockFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreClockMultiplier</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorCoreSetCount</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreSetType</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreTemperature</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreThreadCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorFamily</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32)</signature>
                        <name>GetProcessorID</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorManufacturingProcess</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorMaxCacheLevel</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorName</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorPackage</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorRatedBusFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetProcessorSockets</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorSpecification</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorStepping</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorStockBusFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorStockClockFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorTDP</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32)</signature>
                        <name>GetProcessorThreadAPICID</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorThreadCount</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorVoltageID</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleAMPProfileInfos</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleDRAMManufacturer</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleDataWidth</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleEPPProfileInfos</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleFormat</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleManufacturer</name>
                    </method>
                    <method>
                        <signature>bool(int32, unsigned int8[])</signature>
                        <name>GetSPDModuleManufacturerID</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetSPDModuleManufacturingDate</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleMaxFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRAS</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRC</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRCD</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRP</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfAMPProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleNumberOfBanks</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfEPPProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleNumberOfProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfXMPProfiles</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModulePartNumber</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleProfileInfos</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetSPDModuleRawData</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleSerialNumber</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleSize</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleSpecification</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleTemperature</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleType</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleXMPProfileCLInfos</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleXMPProfileInfos</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetSPDModuleXMPProfileNumberOfCL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeVendor</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDeviceBusType</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32)</signature>
                        <name>GetStorageDeviceFeatureFlag</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStorageDeviceName</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDeviceNumberOfVolumes</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDevicePowerCycleCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDevicePowerOnHours</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStorageDeviceRevision</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDeviceRotationSpeed</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStorageDeviceSerialNumber</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32, int32&amp;, int32&amp;, int32&amp;, int32&amp;, unsigned int8[])</signature>
                        <name>GetStorageDeviceSmartAttribute</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetStorageDeviceTotalCapacity</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetStorageDeviceVolumeAvailableCapacity</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>GetStorageDeviceVolumeLetter</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetStorageDeviceVolumeTotalCapacity</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDriveNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemFamily</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemManufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemProductName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemSKU</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemUUID</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemVersion</name>
                    </method>
                    <method>
                        <signature>bool(float32)</signature>
                        <name>IS_F_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(float64)</signature>
                        <name>IS_F_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int16)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int8)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int16)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int32)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int32, int32&amp;, int32&amp;)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>IsProcessorInstructionSetAvailable</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshInformation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_ATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_ATAPI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_FIBRE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_FILEBACKEDVIRTUAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_IEEE1394</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_ISCSI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_MMC</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_NVME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_RAID</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SAS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SCSI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SPACES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SSA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_USB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_VIRTUAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_DATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_INSTRUCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_TRACE_CACHE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_UNIFIED</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_BATTERY</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_COMPOSITE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_DISPLAY_ADAPTER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_DRIVE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_EVBOT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_HID</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_LPCIO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_MAINBOARD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_MEMORY_MODULE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_NETWORK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_PCI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_PSU</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_SMBUS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_TYPE_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_UNKNOWN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_CHECK_VM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_SCAN_USB_HDD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_SERVER_SAFE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_DRAM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_GRAPHICS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_LPCIO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_STORAGE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_ACPI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_ACPI_TIMER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_CHIPSET</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_DISPLAY_API</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_DMI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_EVERYTHING</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_GRAPHICS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_HWMONITORING</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_LPCIO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_PCI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_SMBUS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_SOFTWARE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_SPD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_STORAGE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_USBXPRESS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_WAKEUP_HDD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_DRIVER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_EVALUATION</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_INVALID_DLL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_LOCKED</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_NO_ERROR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_VM_RUNNING</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_EXT_ERROR_EVAL_1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_EXT_ERROR_EVAL_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_386</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_486</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K14</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K16</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K17</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K8</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_BONNELL_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C7_D</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C7_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_D</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_P2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_P3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_P4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_CELERON_DC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_DUO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_EE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_QUAD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_SOLO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_CELERON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_DUO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_SOLO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CRUSOE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX486</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX5X86</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX6X86</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX6X86L</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX6X86MX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CYRIX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_DMP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EDEN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EDEN_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EDEN_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EFFICEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_FAMILY_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_GOLDMONT_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_GOLDMONT_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_GOLDMONT_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I7E</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HYGON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HYGON_C86</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_IBM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_386</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_486</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_BONNELL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_3_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_5_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_7_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_5_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_7_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_9_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_GOLDMONT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_HASWELL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_ITANIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_ITANIUM_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_MIC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_MOBILE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_NEHALEM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_NETBURST</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_P5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_P6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SALTWELL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SANDY_BRIDGE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SILVERMONT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SKYLAKE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_FX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_TURION_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_TURION_64_ULTRA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A10C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A10R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A10T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A4C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A4R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A4T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A6C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A6R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A6T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A8C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A8R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A8T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_ATHLON_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_ATHLON_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_E2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_FXB</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_FXC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_FXV</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_GX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_RX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A8</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_ATHLON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_E1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_E2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_GX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K5_GEODE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K6_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K6_3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_ATHLON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_ATHLON_MP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_ATHLON_XP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_DURON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_SEMPRON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64_FX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_NEO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_SEMPRON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_TURION_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_TURION_64_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MANUFACTURER_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MEDIAGX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MII</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MODEL_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NANO_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NANO_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I7E</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_2_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_3_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_3_S</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4_EE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4_HT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_D</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_MMX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_PRO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_XE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_QUADCORE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_QUALCOMM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_3_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_5_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_7_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_9_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_ATHLON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_EPYC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_TR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_Z1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_Z1_EXTREME</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SALTWELL_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I7E</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM_X5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM_X7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CELERON_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5X</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7X</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9EX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9X</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_M3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_M5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_M7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_N_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM_GOLD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM_GOLD_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_BRONZE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_GOLD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_GOLD_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_PLATINIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_PLATINUM_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_SILVER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_SILVER_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_TRANSMETA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_UMC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_UNKNOWN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_C3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_C7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_CHA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_NANO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_WINCHIP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_DX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_DX3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_EX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_MX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_SX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_XEON_P2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_XEON_P3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_XEON_P4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_ZHAOXIN_KX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DISPLAY_CLOCK_DOMAIN_GRAPHICS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DISPLAY_CLOCK_DOMAIN_MEMORY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DISPLAY_CLOCK_DOMAIN_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_IS_REMOVABLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_IS_SSD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_SMART</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_TRIM</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>F_UNDEFINED_VALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_AGP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_ISA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_PCI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_PCIE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_VLB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_ATOM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_CORE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_KNIGHTS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_QUARK</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_UNKNOWN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_3DNOW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AMX_BF16</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AMX_INT8</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AMX_TILE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX10</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512BW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512CD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512DQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512F</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512VL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_BF16</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_BITALG</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_FP16</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_IFMA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VBMI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VBMI2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VNNI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VP2INTERSECT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VPOPCNTDQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX_VNNI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_EXTENDED_3DNOW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_EXTENDED_MMX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_FMA3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_FMA4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_HLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_MMX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_NX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_RTM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SHA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SHA256</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SM2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SM3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SM4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE4A</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE4_1</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE4_2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSSE3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_VMX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_X86_64</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_XOP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>I_UNDEFINED_VALUE</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>MAX_FLOAT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MAX_INTEGER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR2_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR2_SDRAM_FB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR3_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR4_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR5_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_EDO_RAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_FPM_RAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR5</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR5X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR6</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR6X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_HBM1</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_HBM2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_LPDDR2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_RDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SDDR4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SDR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SPM_RAM</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>objptr</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szDllFilename</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szDllName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szDllPath</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_Close</name>
                <newname>CPUIDSDK/e</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_CreateInstance</name>
                <newname>CPUIDSDK/b</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_DestroyInstance</name>
                <newname>CPUIDSDK/c</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetBIOSDate</name>
                <newname>CPUIDSDK/a2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetBIOSVendor</name>
                <newname>CPUIDSDK/a0</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetBIOSVersion</name>
                <newname>CPUIDSDK/a1</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetBusFrequency</name>
                <newname>CPUIDSDK/aa</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetChassisManufacturer</name>
                <newname>CPUIDSDK/be</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetChassisSerialNumber</name>
                <newname>CPUIDSDK/bg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetChassisType</name>
                <newname>CPUIDSDK/bf</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDirectXVersion</name>
                <newname>CPUIDSDK/cy</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterBusInfos</name>
                <newname>CPUIDSDK/cz</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterClock</name>
                <newname>CPUIDSDK/cp</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterCodeName</name>
                <newname>CPUIDSDK/cl</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterCoreFamily</name>
                <newname>CPUIDSDK/c1</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterCurrentPerformanceLevel</name>
                <newname>CPUIDSDK/cn</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterDriverVersion</name>
                <newname>CPUIDSDK/c2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterFanPWM</name>
                <newname>CPUIDSDK/ct</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterFanSpeed</name>
                <newname>CPUIDSDK/cs</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterID</name>
                <newname>CPUIDSDK/cj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterManufacturingProcess</name>
                <newname>CPUIDSDK/c0</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterMemoryBusWidth</name>
                <newname>CPUIDSDK/cw</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterMemorySize</name>
                <newname>CPUIDSDK/cv</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterMemoryType</name>
                <newname>CPUIDSDK/cu</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterMemoryVendor</name>
                <newname>CPUIDSDK/cx</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterName</name>
                <newname>CPUIDSDK/ck</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterNumberOfPerformanceLevels</name>
                <newname>CPUIDSDK/cm</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterPCIAddress</name>
                <newname>CPUIDSDK/c3</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterPerformanceLevelName</name>
                <newname>CPUIDSDK/co</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterStockClock</name>
                <newname>CPUIDSDK/cq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDisplayAdapterTemperature</name>
                <newname>CPUIDSDK/cr</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetDllVersion</name>
                <newname>CPUIDSDK/g</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetGraphicBusLinkParameters</name>
                <newname>CPUIDSDK/ay</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMainboardModel</name>
                <newname>CPUIDSDK/a4</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMainboardRevision</name>
                <newname>CPUIDSDK/a5</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMainboardSerialNumber</name>
                <newname>CPUIDSDK/a6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMainboardVendor</name>
                <newname>CPUIDSDK/a3</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryCASLatency</name>
                <newname>CPUIDSDK/am</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryClockFrequency</name>
                <newname>CPUIDSDK/ak</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryCommandRate</name>
                <newname>CPUIDSDK/ar</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryDeviceInfos</name>
                <newname>CPUIDSDK/bj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, native int&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, native int&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, native int&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryDeviceInfosExt</name>
                <newname>CPUIDSDK/bk</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, native int&amp;, native int&amp;, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int&amp;, native int&amp;, int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, native int&amp;, native int&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryInfosExt</name>
                <newname>CPUIDSDK/bh</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, native int&amp;, native int&amp;, native int&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int&amp;, native int&amp;, native int&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, native int&amp;, native int&amp;, native int&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryMaxCapacity</name>
                <newname>CPUIDSDK/bm</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryMaxNumberOfDevices</name>
                <newname>CPUIDSDK/bn</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryNumberOfChannels</name>
                <newname>CPUIDSDK/al</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryRASPrecharge</name>
                <newname>CPUIDSDK/ao</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryRAStoCASDelay</name>
                <newname>CPUIDSDK/an</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemorySize</name>
                <newname>CPUIDSDK/aj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemorySlotsConfig</name>
                <newname>CPUIDSDK/az</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryTRAS</name>
                <newname>CPUIDSDK/ap</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryTRC</name>
                <newname>CPUIDSDK/aq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMemoryType</name>
                <newname>CPUIDSDK/ai</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorGamma</name>
                <newname>CPUIDSDK/dd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorID</name>
                <newname>CPUIDSDK/c7</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorManufacturingDate</name>
                <newname>CPUIDSDK/c9</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorMaxPixelClock</name>
                <newname>CPUIDSDK/dc</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorName</name>
                <newname>CPUIDSDK/c5</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorResolution</name>
                <newname>CPUIDSDK/db</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorSerial</name>
                <newname>CPUIDSDK/c8</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorSize</name>
                <newname>CPUIDSDK/da</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetMonitorVendor</name>
                <newname>CPUIDSDK/c6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNbProcessors</name>
                <newname>CPUIDSDK/h</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNorthBridgeModel</name>
                <newname>CPUIDSDK/at</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNorthBridgeRevision</name>
                <newname>CPUIDSDK/au</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNorthBridgeVendor</name>
                <newname>CPUIDSDK/as</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNumberOfDisplayAdapter</name>
                <newname>CPUIDSDK/ci</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNumberOfMemoryDevices</name>
                <newname>CPUIDSDK/bi</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNumberOfMonitors</name>
                <newname>CPUIDSDK/c4</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNumberOfSPDModules</name>
                <newname>CPUIDSDK/bo</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetNumberOfStorageDevice</name>
                <newname>CPUIDSDK/de</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCacheParameters</name>
                <newname>CPUIDSDK/af</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, int32, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCodeName</name>
                <newname>CPUIDSDK/q</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreClockFrequency</name>
                <newname>CPUIDSDK/x</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreClockMultiplier</name>
                <newname>CPUIDSDK/y</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreCount</name>
                <newname>CPUIDSDK/k</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreSetCount</name>
                <newname>CPUIDSDK/j</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreSetType</name>
                <newname>CPUIDSDK/m</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreTemperature</name>
                <newname>CPUIDSDK/z</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorCoreThreadCount</name>
                <newname>CPUIDSDK/n</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorFamily</name>
                <newname>CPUIDSDK/i</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorID</name>
                <newname>CPUIDSDK/ag</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorManufacturingProcess</name>
                <newname>CPUIDSDK/v</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorMaxCacheLevel</name>
                <newname>CPUIDSDK/ae</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorName</name>
                <newname>CPUIDSDK/p</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorPackage</name>
                <newname>CPUIDSDK/s</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorRatedBusFrequency</name>
                <newname>CPUIDSDK/ab</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorSockets</name>
                <newname>CPUIDSDK/bl</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorSpecification</name>
                <newname>CPUIDSDK/r</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorStepping</name>
                <newname>CPUIDSDK/t</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorStockBusFrequency</name>
                <newname>CPUIDSDK/ad</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorStockClockFrequency</name>
                <newname>CPUIDSDK/ac</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorTDP</name>
                <newname>CPUIDSDK/u</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorThreadAPICID</name>
                <newname>CPUIDSDK/o</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorThreadCount</name>
                <newname>CPUIDSDK/l</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetProcessorVoltageID</name>
                <newname>CPUIDSDK/ah</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleAMPProfileInfos</name>
                <newname>CPUIDSDK/cg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleDRAMManufacturer</name>
                <newname>CPUIDSDK/bu</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleDataWidth</name>
                <newname>CPUIDSDK/b5</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleEPPProfileInfos</name>
                <newname>CPUIDSDK/ca</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleFormat</name>
                <newname>CPUIDSDK/br</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleManufacturer</name>
                <newname>CPUIDSDK/bs</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleManufacturerID</name>
                <newname>CPUIDSDK/bt</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, unsigned int8[], System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, unsigned int8[])</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleManufacturingDate</name>
                <newname>CPUIDSDK/b3</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleMaxFrequency</name>
                <newname>CPUIDSDK/bv</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleMinTRAS</name>
                <newname>CPUIDSDK/b1</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleMinTRC</name>
                <newname>CPUIDSDK/b2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleMinTRCD</name>
                <newname>CPUIDSDK/bz</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleMinTRP</name>
                <newname>CPUIDSDK/b0</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleNumberOfAMPProfiles</name>
                <newname>CPUIDSDK/cf</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleNumberOfBanks</name>
                <newname>CPUIDSDK/b4</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleNumberOfEPPProfiles</name>
                <newname>CPUIDSDK/b9</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleNumberOfProfiles</name>
                <newname>CPUIDSDK/b7</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleNumberOfXMPProfiles</name>
                <newname>CPUIDSDK/cb</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModulePartNumber</name>
                <newname>CPUIDSDK/bx</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleProfileInfos</name>
                <newname>CPUIDSDK/b8</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleRawData</name>
                <newname>CPUIDSDK/ch</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleSerialNumber</name>
                <newname>CPUIDSDK/by</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleSize</name>
                <newname>CPUIDSDK/bq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleSpecification</name>
                <newname>CPUIDSDK/bw</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleTemperature</name>
                <newname>CPUIDSDK/b6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleType</name>
                <newname>CPUIDSDK/bp</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleXMPProfileCLInfos</name>
                <newname>CPUIDSDK/cd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, int32, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleXMPProfileInfos</name>
                <newname>CPUIDSDK/ce</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSPDModuleXMPProfileNumberOfCL</name>
                <newname>CPUIDSDK/cc</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSouthBridgeModel</name>
                <newname>CPUIDSDK/aw</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSouthBridgeRevision</name>
                <newname>CPUIDSDK/ax</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSouthBridgeVendor</name>
                <newname>CPUIDSDK/av</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceBusType</name>
                <newname>CPUIDSDK/dj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceFeatureFlag</name>
                <newname>CPUIDSDK/dl</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceName</name>
                <newname>CPUIDSDK/dg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceNumberOfVolumes</name>
                <newname>CPUIDSDK/dm</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDevicePowerCycleCount</name>
                <newname>CPUIDSDK/dt</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDevicePowerOnHours</name>
                <newname>CPUIDSDK/ds</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceRevision</name>
                <newname>CPUIDSDK/dh</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceRotationSpeed</name>
                <newname>CPUIDSDK/dk</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceSerialNumber</name>
                <newname>CPUIDSDK/di</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceSmartAttribute</name>
                <newname>CPUIDSDK/dr</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32&amp;, int32&amp;, int32&amp;, int32&amp;, unsigned int8[], System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32&amp;, int32&amp;, int32&amp;, int32&amp;, unsigned int8[])</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceTotalCapacity</name>
                <newname>CPUIDSDK/du</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceVolumeAvailableCapacity</name>
                <newname>CPUIDSDK/dq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceVolumeLetter</name>
                <newname>CPUIDSDK/dn</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDeviceVolumeTotalCapacity</name>
                <newname>CPUIDSDK/dp</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetStorageDriveNumber</name>
                <newname>CPUIDSDK/df</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemFamily</name>
                <newname>CPUIDSDK/bd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemManufacturer</name>
                <newname>CPUIDSDK/a7</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemProductName</name>
                <newname>CPUIDSDK/a8</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemSKU</name>
                <newname>CPUIDSDK/bc</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemSerialNumber</name>
                <newname>CPUIDSDK/ba</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemUUID</name>
                <newname>CPUIDSDK/bb</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_GetSystemVersion</name>
                <newname>CPUIDSDK/a9</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_Init</name>
                <newname>CPUIDSDK/d</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, string, string, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, string, string, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_IsProcessorInstructionSetAvailable</name>
                <newname>CPUIDSDK/w</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/CPUIDSDK_fp_RefreshInformation</name>
                <newname>CPUIDSDK/f</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK/PTR</name>
                <newname>CPUIDSDK/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR0</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR10</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR100</name>
                        <newname>cc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR101</name>
                        <newname>cd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR102</name>
                        <newname>ce</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR103</name>
                        <newname>cf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR104</name>
                        <newname>cg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR105</name>
                        <newname>ch</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR106</name>
                        <newname>ci</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR107</name>
                        <newname>cj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR108</name>
                        <newname>ck</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR109</name>
                        <newname>cl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR11</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR110</name>
                        <newname>cm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR111</name>
                        <newname>cn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR112</name>
                        <newname>co</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR113</name>
                        <newname>cp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR114</name>
                        <newname>cq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR115</name>
                        <newname>cr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR116</name>
                        <newname>cs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR117</name>
                        <newname>ct</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR118</name>
                        <newname>cu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR119</name>
                        <newname>cv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR12</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR120</name>
                        <newname>cw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR121</name>
                        <newname>cx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR122</name>
                        <newname>cy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR123</name>
                        <newname>cz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR124</name>
                        <newname>c0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR125</name>
                        <newname>c1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR126</name>
                        <newname>c2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR127</name>
                        <newname>c3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR128</name>
                        <newname>c4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR129</name>
                        <newname>c5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR13</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR130</name>
                        <newname>c6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR131</name>
                        <newname>c7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR132</name>
                        <newname>c8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR133</name>
                        <newname>c9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR134</name>
                        <newname>da</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR135</name>
                        <newname>db</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR136</name>
                        <newname>dc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR137</name>
                        <newname>dd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR138</name>
                        <newname>de</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR139</name>
                        <newname>df</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR14</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR140</name>
                        <newname>dg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR141</name>
                        <newname>dh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR142</name>
                        <newname>di</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR143</name>
                        <newname>dj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR144</name>
                        <newname>dk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR145</name>
                        <newname>dl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR146</name>
                        <newname>dm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR147</name>
                        <newname>dn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR148</name>
                        <newname>dp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR149</name>
                        <newname>dq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR15</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR150</name>
                        <newname>dr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR151</name>
                        <newname>ds</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR152</name>
                        <newname>dt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR153</name>
                        <newname>du</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR154</name>
                        <newname>dv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR155</name>
                        <newname>dw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR156</name>
                        <newname>dx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR157</name>
                        <newname>dy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR158</name>
                        <newname>dz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR159</name>
                        <newname>d0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR16</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR160</name>
                        <newname>d1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR161</name>
                        <newname>d2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR162</name>
                        <newname>d3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR163</name>
                        <newname>d4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR164</name>
                        <newname>d5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR165</name>
                        <newname>d6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR166</name>
                        <newname>d7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR167</name>
                        <newname>d8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR168</name>
                        <newname>d9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR169</name>
                        <newname>ea</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR17</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR170</name>
                        <newname>eb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR171</name>
                        <newname>ec</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR172</name>
                        <newname>ed</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR173</name>
                        <newname>ee</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR174</name>
                        <newname>ef</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR175</name>
                        <newname>eg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR176</name>
                        <newname>eh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR177</name>
                        <newname>ei</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR178</name>
                        <newname>ej</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR179</name>
                        <newname>ek</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR18</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR180</name>
                        <newname>el</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR181</name>
                        <newname>em</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR182</name>
                        <newname>en</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR183</name>
                        <newname>eo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR184</name>
                        <newname>ep</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR185</name>
                        <newname>eq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR186</name>
                        <newname>er</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR187</name>
                        <newname>es</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR188</name>
                        <newname>et</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR189</name>
                        <newname>eu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR19</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR190</name>
                        <newname>ev</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR191</name>
                        <newname>ew</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR192</name>
                        <newname>ex</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR193</name>
                        <newname>ey</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR194</name>
                        <newname>ez</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR195</name>
                        <newname>e0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR196</name>
                        <newname>e1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR197</name>
                        <newname>e2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR198</name>
                        <newname>e3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR199</name>
                        <newname>e4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR20</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR200</name>
                        <newname>e5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR201</name>
                        <newname>e6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR202</name>
                        <newname>e7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR203</name>
                        <newname>e8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR204</name>
                        <newname>e9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR205</name>
                        <newname>fa</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR206</name>
                        <newname>fb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR207</name>
                        <newname>fc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR208</name>
                        <newname>fd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR209</name>
                        <newname>fe</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR21</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR210</name>
                        <newname>ff</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR211</name>
                        <newname>fg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR212</name>
                        <newname>fh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR213</name>
                        <newname>fi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR214</name>
                        <newname>fj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR215</name>
                        <newname>fk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR216</name>
                        <newname>fl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR217</name>
                        <newname>fm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR218</name>
                        <newname>fn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR219</name>
                        <newname>fo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR22</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR220</name>
                        <newname>fp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR221</name>
                        <newname>fq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR222</name>
                        <newname>fr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR223</name>
                        <newname>fs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR224</name>
                        <newname>ft</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR225</name>
                        <newname>fu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR226</name>
                        <newname>fv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR227</name>
                        <newname>fw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR228</name>
                        <newname>fx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR229</name>
                        <newname>fy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR23</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR230</name>
                        <newname>fz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR231</name>
                        <newname>f0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR232</name>
                        <newname>f1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR233</name>
                        <newname>f2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR234</name>
                        <newname>f3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR235</name>
                        <newname>f4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR236</name>
                        <newname>f5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR237</name>
                        <newname>f6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR238</name>
                        <newname>f7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR239</name>
                        <newname>f8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR24</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR240</name>
                        <newname>f9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR241</name>
                        <newname>ga</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR242</name>
                        <newname>gb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR243</name>
                        <newname>gc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR244</name>
                        <newname>gd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR245</name>
                        <newname>ge</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR246</name>
                        <newname>gf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR247</name>
                        <newname>gg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR248</name>
                        <newname>gh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR249</name>
                        <newname>gi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR25</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR250</name>
                        <newname>gj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR251</name>
                        <newname>gk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR252</name>
                        <newname>gl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR253</name>
                        <newname>gm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR254</name>
                        <newname>gn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR255</name>
                        <newname>go</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR256</name>
                        <newname>gp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR257</name>
                        <newname>gq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR258</name>
                        <newname>gr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR259</name>
                        <newname>gs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR26</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR260</name>
                        <newname>gt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR261</name>
                        <newname>gu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR262</name>
                        <newname>gv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR263</name>
                        <newname>gw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR264</name>
                        <newname>gx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR265</name>
                        <newname>gy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR266</name>
                        <newname>gz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR267</name>
                        <newname>g0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR268</name>
                        <newname>g1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR269</name>
                        <newname>g2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR27</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR270</name>
                        <newname>g3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR271</name>
                        <newname>g4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR272</name>
                        <newname>g5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR273</name>
                        <newname>g6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR274</name>
                        <newname>g7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR275</name>
                        <newname>g8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR276</name>
                        <newname>g9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR277</name>
                        <newname>ha</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR278</name>
                        <newname>hb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR279</name>
                        <newname>hc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR28</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR280</name>
                        <newname>hd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR281</name>
                        <newname>he</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR282</name>
                        <newname>hf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR283</name>
                        <newname>hg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR284</name>
                        <newname>hh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR285</name>
                        <newname>hi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR286</name>
                        <newname>hj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR287</name>
                        <newname>hk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR288</name>
                        <newname>hl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR289</name>
                        <newname>hm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR29</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR290</name>
                        <newname>hn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR291</name>
                        <newname>ho</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR292</name>
                        <newname>hp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR293</name>
                        <newname>hq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR294</name>
                        <newname>hr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR295</name>
                        <newname>hs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR296</name>
                        <newname>ht</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR297</name>
                        <newname>hu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR298</name>
                        <newname>hv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR299</name>
                        <newname>hw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR3</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR30</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR300</name>
                        <newname>hx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR301</name>
                        <newname>hy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR302</name>
                        <newname>hz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR303</name>
                        <newname>h0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR304</name>
                        <newname>h1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR305</name>
                        <newname>h2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR306</name>
                        <newname>h3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR307</name>
                        <newname>h4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR308</name>
                        <newname>h5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR309</name>
                        <newname>h6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR31</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR310</name>
                        <newname>h7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR311</name>
                        <newname>h8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR312</name>
                        <newname>h9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR313</name>
                        <newname>ia</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR314</name>
                        <newname>ib</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR315</name>
                        <newname>ic</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR316</name>
                        <newname>id</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR317</name>
                        <newname>ie</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR318</name>
                        <newname>ig</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR319</name>
                        <newname>ih</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR32</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR320</name>
                        <newname>ii</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR321</name>
                        <newname>ij</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR322</name>
                        <newname>ik</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR323</name>
                        <newname>il</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR324</name>
                        <newname>im</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR325</name>
                        <newname>in</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR326</name>
                        <newname>io</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR327</name>
                        <newname>ip</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR328</name>
                        <newname>iq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR329</name>
                        <newname>ir</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR33</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR330</name>
                        <newname>is</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR331</name>
                        <newname>it</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR332</name>
                        <newname>iu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR333</name>
                        <newname>iv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR334</name>
                        <newname>iw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR335</name>
                        <newname>ix</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR336</name>
                        <newname>iy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR337</name>
                        <newname>iz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR338</name>
                        <newname>i0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR339</name>
                        <newname>i1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR34</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR340</name>
                        <newname>i2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR341</name>
                        <newname>i3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR342</name>
                        <newname>i4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR343</name>
                        <newname>i5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR344</name>
                        <newname>i6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR345</name>
                        <newname>i7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR346</name>
                        <newname>i8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR347</name>
                        <newname>i9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR348</name>
                        <newname>ja</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR349</name>
                        <newname>jb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR35</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR350</name>
                        <newname>jc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR351</name>
                        <newname>jd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR352</name>
                        <newname>je</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR353</name>
                        <newname>jf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR354</name>
                        <newname>jg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR355</name>
                        <newname>jh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR356</name>
                        <newname>ji</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR357</name>
                        <newname>jj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR358</name>
                        <newname>jk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR359</name>
                        <newname>jl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR36</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR360</name>
                        <newname>jm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR361</name>
                        <newname>jn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR362</name>
                        <newname>jo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR363</name>
                        <newname>jp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR364</name>
                        <newname>jq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR365</name>
                        <newname>jr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR366</name>
                        <newname>js</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR367</name>
                        <newname>jt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR368</name>
                        <newname>ju</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR369</name>
                        <newname>jv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR37</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR370</name>
                        <newname>jw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR371</name>
                        <newname>jx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR372</name>
                        <newname>jy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR373</name>
                        <newname>jz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR374</name>
                        <newname>j0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR375</name>
                        <newname>j1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR376</name>
                        <newname>j2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR377</name>
                        <newname>j3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR378</name>
                        <newname>j4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR379</name>
                        <newname>j5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR38</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR380</name>
                        <newname>j6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR381</name>
                        <newname>j7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR382</name>
                        <newname>j8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR383</name>
                        <newname>j9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR39</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR4</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR40</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR41</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR42</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR43</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR44</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR45</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR46</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR47</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR48</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR49</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR5</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR50</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR51</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR52</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR53</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR54</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR55</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR56</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR57</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR58</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR59</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR6</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR60</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR61</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR62</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR63</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR64</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR65</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR66</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR67</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR68</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR69</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR7</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR70</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR71</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR72</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR73</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR74</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR75</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR76</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR77</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR78</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR79</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR8</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR80</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR81</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR82</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR83</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR84</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR85</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR86</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR87</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR88</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR89</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR9</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR90</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR91</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR92</name>
                        <newname>b4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR93</name>
                        <newname>b5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR94</name>
                        <newname>b6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR95</name>
                        <newname>b7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR96</name>
                        <newname>b8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR97</name>
                        <newname>b9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR98</name>
                        <newname>ca</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK/PTR</signature>
                        <name>PTR99</name>
                        <newname>cb</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>native int(unsigned int32)</signature>
                        <name>CPUIDSDK_fp_QueryInterface</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DestroyInstance</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSVendor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSVersion</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetBusFrequency</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetChassisManufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetChassisSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetChassisType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDirectXVersion</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetDisplayAdapterBusInfos</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetDisplayAdapterClock</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterCodeName</name>
                    </method>
                    <method>
                        <signature>string(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterCoreFamily</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterCurrentPerformanceLevel</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterFanPWM</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterFanSpeed</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetDisplayAdapterManufacturingProcess</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemoryBusWidth</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemorySize</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemoryType</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterMemoryVendor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterName</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterNumberOfPerformanceLevels</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetDisplayAdapterPCIAddress</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>GetDisplayAdapterPerformanceLevelName</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetDisplayAdapterStockClock</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetDisplayAdapterTemperature</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdaterDriverVersion</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;)</signature>
                        <name>GetDllVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardVendor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetMemoryCASLatency</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetMemoryClockFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryCommandRate</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, string&amp;)</signature>
                        <name>GetMemoryDeviceInfos</name>
                    </method>
                    <method>
                        <signature>bool(int32, string&amp;, string&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMemoryDeviceInfosExt</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string&amp;, string&amp;)</signature>
                        <name>GetMemoryInfosExt</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryMaxCapacity</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryMaxNumberOfDevices</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryNumberOfChannels</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryRASPrecharge</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryRAStoCASDelay</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemorySize</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMemorySlotsConfig</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryTRAS</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryTRC</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryType</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetMonitorGamma</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorID</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetMonitorManufacturingDate</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetMonitorMaxPixelClock</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorName</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMonitorResolution</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorSerial</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetMonitorSize</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetMonitorVendor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeVendor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfDisplayAdapter</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfMemoryDevices</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfMonitors</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfProcessors</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfSPDModules</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfStorageDevice</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32&amp;, int32&amp;)</signature>
                        <name>GetProcessorCacheParameters</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorCodeName</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreClockFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreClockMultiplier</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorCoreSetCount</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreSetType</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreTemperature</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreThreadCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorFamily</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32)</signature>
                        <name>GetProcessorID</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorManufacturingProcess</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorMaxCacheLevel</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorName</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorPackage</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorRatedBusFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetProcessorSockets</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorSpecification</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorStepping</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorStockBusFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorStockClockFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorTDP</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32)</signature>
                        <name>GetProcessorThreadAPICID</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorThreadCount</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorVoltageID</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleAMPProfileInfos</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleDRAMManufacturer</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleDataWidth</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleEPPProfileInfos</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleFormat</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleManufacturer</name>
                    </method>
                    <method>
                        <signature>bool(int32, unsigned int8[])</signature>
                        <name>GetSPDModuleManufacturerID</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetSPDModuleManufacturingDate</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleMaxFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRAS</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRC</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRCD</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRP</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfAMPProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleNumberOfBanks</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfEPPProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleNumberOfProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfXMPProfiles</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModulePartNumber</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleProfileInfos</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetSPDModuleRawData</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleSerialNumber</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleSize</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleSpecification</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleTemperature</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleType</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleXMPProfileCLInfos</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleXMPProfileInfos</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetSPDModuleXMPProfileNumberOfCL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeVendor</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDeviceBusType</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32)</signature>
                        <name>GetStorageDeviceFeatureFlag</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStorageDeviceName</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDeviceNumberOfVolumes</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDevicePowerCycleCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDevicePowerOnHours</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStorageDeviceRevision</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDeviceRotationSpeed</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStorageDeviceSerialNumber</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32, int32&amp;, int32&amp;, int32&amp;, int32&amp;, unsigned int8[])</signature>
                        <name>GetStorageDeviceSmartAttribute</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetStorageDeviceTotalCapacity</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetStorageDeviceVolumeAvailableCapacity</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>GetStorageDeviceVolumeLetter</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetStorageDeviceVolumeTotalCapacity</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetStorageDriveNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemFamily</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemManufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemProductName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemSKU</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemUUID</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemVersion</name>
                    </method>
                    <method>
                        <signature>bool(float32)</signature>
                        <name>IS_F_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(float64)</signature>
                        <name>IS_F_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int16)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int8)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int16)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int32)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int32, int32&amp;, int32&amp;)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>IsProcessorInstructionSetAvailable</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshInformation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_ATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_ATAPI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_FIBRE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_FILEBACKEDVIRTUAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_IEEE1394</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_ISCSI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_MMC</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_NVME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_RAID</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SAS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SCSI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SPACES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_SSA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_USB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUS_TYPE_VIRTUAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_DATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_INSTRUCTION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_TRACE_CACHE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CACHE_TYPE_UNIFIED</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_BATTERY</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_COMPOSITE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_DISPLAY_ADAPTER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_DRIVE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_EVBOT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_HID</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_LPCIO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_MAINBOARD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_MEMORY_MODULE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_NETWORK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_PCI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_PSU</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_SMBUS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_TYPE_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CLASS_DEVICE_UNKNOWN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_CHECK_VM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_SCAN_USB_HDD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_SERVER_SAFE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_DRAM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_GRAPHICS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_LPCIO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_UPDATE_STORAGE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_ACPI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_ACPI_TIMER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_CHIPSET</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_DISPLAY_API</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_DMI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_EVERYTHING</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_GRAPHICS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_HWMONITORING</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_LPCIO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_PCI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_SMBUS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_SOFTWARE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_SPD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_STORAGE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_USE_USBXPRESS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_CONFIG_WAKEUP_HDD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_DRIVER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_EVALUATION</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_INVALID_DLL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_LOCKED</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_NO_ERROR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_ERROR_VM_RUNNING</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_EXT_ERROR_EVAL_1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPUIDSDK_EXT_ERROR_EVAL_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_386</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_486</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K14</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K16</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K17</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_AMD_K8</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_BONNELL_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C7_D</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_C7_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_D</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_P2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_P3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CELERON_P4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_CELERON_DC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_DUO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_EE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_QUAD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_SOLO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_2_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_CELERON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_DUO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CORE_SOLO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CRUSOE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX486</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX5X86</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX6X86</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX6X86L</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CX6X86MX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_CYRIX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_DMP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EDEN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EDEN_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EDEN_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_EFFICEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_FAMILY_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_GOLDMONT_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_GOLDMONT_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_GOLDMONT_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_I7E</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_CORE_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HASWELL_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HYGON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_HYGON_C86</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_IBM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_386</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_486</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_BONNELL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_3_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_5_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_7_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_5_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_7_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_9_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_CORE_ULTRA_GEN15</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_GOLDMONT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_HASWELL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_ITANIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_ITANIUM_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_MIC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_MOBILE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_NEHALEM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_NETBURST</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_P5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_P6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SALTWELL</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SANDY_BRIDGE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SILVERMONT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_INTEL_SKYLAKE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_2_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_ATHLON_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_FX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_II_X6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_PHENOM_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_TURION_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K10_TURION_64_ULTRA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A10C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A10R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A10T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A4C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A4R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A4T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A6C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A6R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A6T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A8C</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A8R</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A8T</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_A9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_ATHLON_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_ATHLON_X4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_E2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_FXB</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_FXC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_FXV</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_GX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_RX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K15_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_A8</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_ATHLON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_E1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_E2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_GX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K16_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K5_GEODE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K6</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K6_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K6_3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_ATHLON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_ATHLON_MP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_ATHLON_XP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_DURON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K7_SEMPRON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64_FX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_64_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_ATHLON_NEO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_OPTERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_SEMPRON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_SEMPRON_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_TURION_64</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_K8_TURION_64_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MANUFACTURER_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MEDIAGX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MII</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_MODEL_MASK</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NANO_X2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NANO_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_CORE_I7E</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_NEHALEM_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_2_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_3_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_3_S</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4_EE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4_HT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_4_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_D</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_MMX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_PRO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_PENTIUM_XE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_QUADCORE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_QUALCOMM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_3_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_5_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_7_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_9_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_ATHLON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_EPYC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_M</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_TR</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_Z1</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_RYZEN_Z1_EXTREME</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SALTWELL_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_CORE_I7E</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SANDY_BRIDGE_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM_X3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM_X5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_ATOM_X7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SILVERMONT_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CELERON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CELERON_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I3_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5X</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I5_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7X</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I7_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9EX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9X</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN11</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_I9_GEN9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_M3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_M5</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_M7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_CORE_N_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM_GOLD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_PENTIUM_GOLD_GEN12</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_BRONZE</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_GOLD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_GOLD_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_PLATINIUM</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_PLATINUM_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_SILVER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_SKYLAKE_XEON_SILVER_GEN10</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_TRANSMETA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_UMC</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_UNKNOWN</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_C3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_C7</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_CHA</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_NANO</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VIA_WINCHIP</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_DX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_DX3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_EX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_MX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_VORTEX86_SX</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_XEON_P2</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_XEON_P3</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_XEON_P4</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CPU_ZHAOXIN_KX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DISPLAY_CLOCK_DOMAIN_GRAPHICS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DISPLAY_CLOCK_DOMAIN_MEMORY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DISPLAY_CLOCK_DOMAIN_PROCESSOR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_IS_REMOVABLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_IS_SSD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_SMART</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DRIVE_FEATURE_TRIM</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>F_UNDEFINED_VALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_AGP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_ISA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_PCI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_PCIE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GRAPHIC_BUS_VLB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_ATOM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_CORE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_KNIGHTS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_QUARK</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HYBRID_CORE_TYPE_UNKNOWN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_3DNOW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AMX_BF16</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AMX_INT8</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AMX_TILE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX10</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512BW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512CD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512DQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512F</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512VL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_BF16</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_BITALG</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_FP16</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_IFMA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VBMI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VBMI2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VNNI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VP2INTERSECT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX512_VPOPCNTDQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_AVX_VNNI</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_EXTENDED_3DNOW</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_EXTENDED_MMX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_FMA3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_FMA4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_HLE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_MMX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_NX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_RTM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SHA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SHA256</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SM2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SM3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SM4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE4A</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE4_1</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSE4_2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_SSSE3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_VMX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_X86_64</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ISET_XOP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>I_UNDEFINED_VALUE</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>MAX_FLOAT</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MAX_INTEGER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR2_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR2_SDRAM_FB</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR3_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR4_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR5_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_DDR_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_EDO_RAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_FPM_RAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR3</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR5</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR5X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR6</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_GDDR6X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_HBM1</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_HBM2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_LPDDR2</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_RDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SDDR4</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SDR</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SDRAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MEMORY_TYPE_SPM_RAM</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>objptr</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szDllFilename</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szDllName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szDllPath</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_Close</name>
                <newname>CPUIDSDK_X86/e</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_CreateInstance</name>
                <newname>CPUIDSDK_X86/b</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_DestroyInstance</name>
                <newname>CPUIDSDK_X86/c</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetBIOSDate</name>
                <newname>CPUIDSDK_X86/a2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetBIOSVendor</name>
                <newname>CPUIDSDK_X86/a0</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetBIOSVersion</name>
                <newname>CPUIDSDK_X86/a1</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetBusFrequency</name>
                <newname>CPUIDSDK_X86/aa</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetChassisManufacturer</name>
                <newname>CPUIDSDK_X86/be</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetChassisSerialNumber</name>
                <newname>CPUIDSDK_X86/bg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetChassisType</name>
                <newname>CPUIDSDK_X86/bf</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDirectXVersion</name>
                <newname>CPUIDSDK_X86/cy</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterBusInfos</name>
                <newname>CPUIDSDK_X86/cz</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterClock</name>
                <newname>CPUIDSDK_X86/cp</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterCodeName</name>
                <newname>CPUIDSDK_X86/cl</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterCoreFamily</name>
                <newname>CPUIDSDK_X86/c1</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterCurrentPerformanceLevel</name>
                <newname>CPUIDSDK_X86/cn</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterDriverVersion</name>
                <newname>CPUIDSDK_X86/c2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterFanPWM</name>
                <newname>CPUIDSDK_X86/ct</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterFanSpeed</name>
                <newname>CPUIDSDK_X86/cs</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterID</name>
                <newname>CPUIDSDK_X86/cj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterManufacturingProcess</name>
                <newname>CPUIDSDK_X86/c0</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterMemoryBusWidth</name>
                <newname>CPUIDSDK_X86/cw</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterMemorySize</name>
                <newname>CPUIDSDK_X86/cv</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterMemoryType</name>
                <newname>CPUIDSDK_X86/cu</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterMemoryVendor</name>
                <newname>CPUIDSDK_X86/cx</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterName</name>
                <newname>CPUIDSDK_X86/ck</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterNumberOfPerformanceLevels</name>
                <newname>CPUIDSDK_X86/cm</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterPCIAddress</name>
                <newname>CPUIDSDK_X86/c3</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterPerformanceLevelName</name>
                <newname>CPUIDSDK_X86/co</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterStockClock</name>
                <newname>CPUIDSDK_X86/cq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDisplayAdapterTemperature</name>
                <newname>CPUIDSDK_X86/cr</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetDllVersion</name>
                <newname>CPUIDSDK_X86/g</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetGraphicBusLinkParameters</name>
                <newname>CPUIDSDK_X86/ay</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMainboardModel</name>
                <newname>CPUIDSDK_X86/a4</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMainboardRevision</name>
                <newname>CPUIDSDK_X86/a5</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMainboardSerialNumber</name>
                <newname>CPUIDSDK_X86/a6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMainboardVendor</name>
                <newname>CPUIDSDK_X86/a3</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryCASLatency</name>
                <newname>CPUIDSDK_X86/am</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryClockFrequency</name>
                <newname>CPUIDSDK_X86/ak</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryCommandRate</name>
                <newname>CPUIDSDK_X86/ar</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryDeviceInfos</name>
                <newname>CPUIDSDK_X86/bj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, native int&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, native int&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, native int&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryDeviceInfosExt</name>
                <newname>CPUIDSDK_X86/bk</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, native int&amp;, native int&amp;, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int&amp;, native int&amp;, int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, native int&amp;, native int&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryInfosExt</name>
                <newname>CPUIDSDK_X86/bh</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, native int&amp;, native int&amp;, native int&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int&amp;, native int&amp;, native int&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, native int&amp;, native int&amp;, native int&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryMaxCapacity</name>
                <newname>CPUIDSDK_X86/bm</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryMaxNumberOfDevices</name>
                <newname>CPUIDSDK_X86/bn</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryNumberOfChannels</name>
                <newname>CPUIDSDK_X86/al</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryRASPrecharge</name>
                <newname>CPUIDSDK_X86/ao</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryRAStoCASDelay</name>
                <newname>CPUIDSDK_X86/an</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemorySize</name>
                <newname>CPUIDSDK_X86/aj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemorySlotsConfig</name>
                <newname>CPUIDSDK_X86/az</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryTRAS</name>
                <newname>CPUIDSDK_X86/ap</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryTRC</name>
                <newname>CPUIDSDK_X86/aq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMemoryType</name>
                <newname>CPUIDSDK_X86/ai</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorGamma</name>
                <newname>CPUIDSDK_X86/dd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorID</name>
                <newname>CPUIDSDK_X86/c7</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorManufacturingDate</name>
                <newname>CPUIDSDK_X86/c9</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorMaxPixelClock</name>
                <newname>CPUIDSDK_X86/dc</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorName</name>
                <newname>CPUIDSDK_X86/c5</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorResolution</name>
                <newname>CPUIDSDK_X86/db</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorSerial</name>
                <newname>CPUIDSDK_X86/c8</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorSize</name>
                <newname>CPUIDSDK_X86/da</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetMonitorVendor</name>
                <newname>CPUIDSDK_X86/c6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNbProcessors</name>
                <newname>CPUIDSDK_X86/h</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNorthBridgeModel</name>
                <newname>CPUIDSDK_X86/at</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNorthBridgeRevision</name>
                <newname>CPUIDSDK_X86/au</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNorthBridgeVendor</name>
                <newname>CPUIDSDK_X86/as</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNumberOfDisplayAdapter</name>
                <newname>CPUIDSDK_X86/ci</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNumberOfMemoryDevices</name>
                <newname>CPUIDSDK_X86/bi</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNumberOfMonitors</name>
                <newname>CPUIDSDK_X86/c4</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNumberOfSPDModules</name>
                <newname>CPUIDSDK_X86/bo</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetNumberOfStorageDevice</name>
                <newname>CPUIDSDK_X86/de</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCacheParameters</name>
                <newname>CPUIDSDK_X86/af</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, int32, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCodeName</name>
                <newname>CPUIDSDK_X86/q</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreClockFrequency</name>
                <newname>CPUIDSDK_X86/x</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreClockMultiplier</name>
                <newname>CPUIDSDK_X86/y</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreCount</name>
                <newname>CPUIDSDK_X86/k</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreSetCount</name>
                <newname>CPUIDSDK_X86/j</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreSetType</name>
                <newname>CPUIDSDK_X86/m</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreTemperature</name>
                <newname>CPUIDSDK_X86/z</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorCoreThreadCount</name>
                <newname>CPUIDSDK_X86/n</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorFamily</name>
                <newname>CPUIDSDK_X86/i</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorID</name>
                <newname>CPUIDSDK_X86/ag</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorManufacturingProcess</name>
                <newname>CPUIDSDK_X86/v</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorMaxCacheLevel</name>
                <newname>CPUIDSDK_X86/ae</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorName</name>
                <newname>CPUIDSDK_X86/p</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorPackage</name>
                <newname>CPUIDSDK_X86/s</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorRatedBusFrequency</name>
                <newname>CPUIDSDK_X86/ab</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorSockets</name>
                <newname>CPUIDSDK_X86/bl</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorSpecification</name>
                <newname>CPUIDSDK_X86/r</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorStepping</name>
                <newname>CPUIDSDK_X86/t</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorStockBusFrequency</name>
                <newname>CPUIDSDK_X86/ad</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorStockClockFrequency</name>
                <newname>CPUIDSDK_X86/ac</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorTDP</name>
                <newname>CPUIDSDK_X86/u</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorThreadAPICID</name>
                <newname>CPUIDSDK_X86/o</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorThreadCount</name>
                <newname>CPUIDSDK_X86/l</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetProcessorVoltageID</name>
                <newname>CPUIDSDK_X86/ah</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleAMPProfileInfos</name>
                <newname>CPUIDSDK_X86/cg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleDRAMManufacturer</name>
                <newname>CPUIDSDK_X86/bu</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleDataWidth</name>
                <newname>CPUIDSDK_X86/b5</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleEPPProfileInfos</name>
                <newname>CPUIDSDK_X86/ca</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleFormat</name>
                <newname>CPUIDSDK_X86/br</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleManufacturer</name>
                <newname>CPUIDSDK_X86/bs</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleManufacturerID</name>
                <newname>CPUIDSDK_X86/bt</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, unsigned int8[], System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, unsigned int8[])</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleManufacturingDate</name>
                <newname>CPUIDSDK_X86/b3</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleMaxFrequency</name>
                <newname>CPUIDSDK_X86/bv</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleMinTRAS</name>
                <newname>CPUIDSDK_X86/b1</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleMinTRC</name>
                <newname>CPUIDSDK_X86/b2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleMinTRCD</name>
                <newname>CPUIDSDK_X86/bz</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleMinTRP</name>
                <newname>CPUIDSDK_X86/b0</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleNumberOfAMPProfiles</name>
                <newname>CPUIDSDK_X86/cf</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleNumberOfBanks</name>
                <newname>CPUIDSDK_X86/b4</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleNumberOfEPPProfiles</name>
                <newname>CPUIDSDK_X86/b9</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleNumberOfProfiles</name>
                <newname>CPUIDSDK_X86/b7</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleNumberOfXMPProfiles</name>
                <newname>CPUIDSDK_X86/cb</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModulePartNumber</name>
                <newname>CPUIDSDK_X86/bx</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleProfileInfos</name>
                <newname>CPUIDSDK_X86/b8</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleRawData</name>
                <newname>CPUIDSDK_X86/ch</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleSerialNumber</name>
                <newname>CPUIDSDK_X86/by</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleSize</name>
                <newname>CPUIDSDK_X86/bq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleSpecification</name>
                <newname>CPUIDSDK_X86/bw</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleTemperature</name>
                <newname>CPUIDSDK_X86/b6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleType</name>
                <newname>CPUIDSDK_X86/bp</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleXMPProfileCLInfos</name>
                <newname>CPUIDSDK_X86/cd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32, float32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, int32, float32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleXMPProfileInfos</name>
                <newname>CPUIDSDK_X86/ce</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSPDModuleXMPProfileNumberOfCL</name>
                <newname>CPUIDSDK_X86/cc</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSouthBridgeModel</name>
                <newname>CPUIDSDK_X86/aw</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSouthBridgeRevision</name>
                <newname>CPUIDSDK_X86/ax</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSouthBridgeVendor</name>
                <newname>CPUIDSDK_X86/av</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceBusType</name>
                <newname>CPUIDSDK_X86/dj</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceFeatureFlag</name>
                <newname>CPUIDSDK_X86/dl</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceName</name>
                <newname>CPUIDSDK_X86/dg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceNumberOfVolumes</name>
                <newname>CPUIDSDK_X86/dm</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDevicePowerCycleCount</name>
                <newname>CPUIDSDK_X86/dt</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDevicePowerOnHours</name>
                <newname>CPUIDSDK_X86/ds</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceRevision</name>
                <newname>CPUIDSDK_X86/dh</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceRotationSpeed</name>
                <newname>CPUIDSDK_X86/dk</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceSerialNumber</name>
                <newname>CPUIDSDK_X86/di</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceSmartAttribute</name>
                <newname>CPUIDSDK_X86/dr</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, int32&amp;, int32&amp;, int32&amp;, int32&amp;, unsigned int8[], System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, int32&amp;, int32&amp;, int32&amp;, int32&amp;, unsigned int8[])</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceTotalCapacity</name>
                <newname>CPUIDSDK_X86/du</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceVolumeAvailableCapacity</name>
                <newname>CPUIDSDK_X86/dq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceVolumeLetter</name>
                <newname>CPUIDSDK_X86/dn</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDeviceVolumeTotalCapacity</name>
                <newname>CPUIDSDK_X86/dp</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>float32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>float32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetStorageDriveNumber</name>
                <newname>CPUIDSDK_X86/df</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemFamily</name>
                <newname>CPUIDSDK_X86/bd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemManufacturer</name>
                <newname>CPUIDSDK_X86/a7</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemProductName</name>
                <newname>CPUIDSDK_X86/a8</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemSKU</name>
                <newname>CPUIDSDK_X86/bc</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemSerialNumber</name>
                <newname>CPUIDSDK_X86/ba</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemUUID</name>
                <newname>CPUIDSDK_X86/bb</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_GetSystemVersion</name>
                <newname>CPUIDSDK_X86/a9</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>native int(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_Init</name>
                <newname>CPUIDSDK_X86/d</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, string, string, int32, int32&amp;, int32&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, string, string, int32, int32&amp;, int32&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_IsProcessorInstructionSetAvailable</name>
                <newname>CPUIDSDK_X86/w</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, int32, int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/CPUIDSDK_fp_RefreshInformation</name>
                <newname>CPUIDSDK_X86/f</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>CPUIDSDK_X86/PTR</name>
                <newname>CPUIDSDK_X86/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR0</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR10</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR100</name>
                        <newname>cc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR101</name>
                        <newname>cd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR102</name>
                        <newname>ce</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR103</name>
                        <newname>cf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR104</name>
                        <newname>cg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR105</name>
                        <newname>ch</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR106</name>
                        <newname>ci</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR107</name>
                        <newname>cj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR108</name>
                        <newname>ck</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR109</name>
                        <newname>cl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR11</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR110</name>
                        <newname>cm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR111</name>
                        <newname>cn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR112</name>
                        <newname>co</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR113</name>
                        <newname>cp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR114</name>
                        <newname>cq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR115</name>
                        <newname>cr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR116</name>
                        <newname>cs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR117</name>
                        <newname>ct</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR118</name>
                        <newname>cu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR119</name>
                        <newname>cv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR12</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR120</name>
                        <newname>cw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR121</name>
                        <newname>cx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR122</name>
                        <newname>cy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR123</name>
                        <newname>cz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR124</name>
                        <newname>c0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR125</name>
                        <newname>c1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR126</name>
                        <newname>c2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR127</name>
                        <newname>c3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR128</name>
                        <newname>c4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR129</name>
                        <newname>c5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR13</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR130</name>
                        <newname>c6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR131</name>
                        <newname>c7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR132</name>
                        <newname>c8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR133</name>
                        <newname>c9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR134</name>
                        <newname>da</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR135</name>
                        <newname>db</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR136</name>
                        <newname>dc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR137</name>
                        <newname>dd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR138</name>
                        <newname>de</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR139</name>
                        <newname>df</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR14</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR140</name>
                        <newname>dg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR141</name>
                        <newname>dh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR142</name>
                        <newname>di</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR143</name>
                        <newname>dj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR144</name>
                        <newname>dk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR145</name>
                        <newname>dl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR146</name>
                        <newname>dm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR147</name>
                        <newname>dn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR148</name>
                        <newname>dp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR149</name>
                        <newname>dq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR15</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR150</name>
                        <newname>dr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR151</name>
                        <newname>ds</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR152</name>
                        <newname>dt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR153</name>
                        <newname>du</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR154</name>
                        <newname>dv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR155</name>
                        <newname>dw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR156</name>
                        <newname>dx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR157</name>
                        <newname>dy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR158</name>
                        <newname>dz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR159</name>
                        <newname>d0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR16</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR160</name>
                        <newname>d1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR161</name>
                        <newname>d2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR162</name>
                        <newname>d3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR163</name>
                        <newname>d4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR164</name>
                        <newname>d5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR165</name>
                        <newname>d6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR166</name>
                        <newname>d7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR167</name>
                        <newname>d8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR168</name>
                        <newname>d9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR169</name>
                        <newname>ea</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR17</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR170</name>
                        <newname>eb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR171</name>
                        <newname>ec</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR172</name>
                        <newname>ed</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR173</name>
                        <newname>ee</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR174</name>
                        <newname>ef</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR175</name>
                        <newname>eg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR176</name>
                        <newname>eh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR177</name>
                        <newname>ei</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR178</name>
                        <newname>ej</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR179</name>
                        <newname>ek</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR18</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR180</name>
                        <newname>el</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR181</name>
                        <newname>em</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR182</name>
                        <newname>en</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR183</name>
                        <newname>eo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR184</name>
                        <newname>ep</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR185</name>
                        <newname>eq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR186</name>
                        <newname>er</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR187</name>
                        <newname>es</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR188</name>
                        <newname>et</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR189</name>
                        <newname>eu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR19</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR190</name>
                        <newname>ev</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR191</name>
                        <newname>ew</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR192</name>
                        <newname>ex</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR193</name>
                        <newname>ey</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR194</name>
                        <newname>ez</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR195</name>
                        <newname>e0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR196</name>
                        <newname>e1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR197</name>
                        <newname>e2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR198</name>
                        <newname>e3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR199</name>
                        <newname>e4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR20</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR200</name>
                        <newname>e5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR201</name>
                        <newname>e6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR202</name>
                        <newname>e7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR203</name>
                        <newname>e8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR204</name>
                        <newname>e9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR205</name>
                        <newname>fa</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR206</name>
                        <newname>fb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR207</name>
                        <newname>fc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR208</name>
                        <newname>fd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR209</name>
                        <newname>fe</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR21</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR210</name>
                        <newname>ff</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR211</name>
                        <newname>fg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR212</name>
                        <newname>fh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR213</name>
                        <newname>fi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR214</name>
                        <newname>fj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR215</name>
                        <newname>fk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR216</name>
                        <newname>fl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR217</name>
                        <newname>fm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR218</name>
                        <newname>fn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR219</name>
                        <newname>fo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR22</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR220</name>
                        <newname>fp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR221</name>
                        <newname>fq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR222</name>
                        <newname>fr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR223</name>
                        <newname>fs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR224</name>
                        <newname>ft</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR225</name>
                        <newname>fu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR226</name>
                        <newname>fv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR227</name>
                        <newname>fw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR228</name>
                        <newname>fx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR229</name>
                        <newname>fy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR23</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR230</name>
                        <newname>fz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR231</name>
                        <newname>f0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR232</name>
                        <newname>f1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR233</name>
                        <newname>f2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR234</name>
                        <newname>f3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR235</name>
                        <newname>f4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR236</name>
                        <newname>f5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR237</name>
                        <newname>f6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR238</name>
                        <newname>f7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR239</name>
                        <newname>f8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR24</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR240</name>
                        <newname>f9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR241</name>
                        <newname>ga</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR242</name>
                        <newname>gb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR243</name>
                        <newname>gc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR244</name>
                        <newname>gd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR245</name>
                        <newname>ge</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR246</name>
                        <newname>gf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR247</name>
                        <newname>gg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR248</name>
                        <newname>gh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR249</name>
                        <newname>gi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR25</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR250</name>
                        <newname>gj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR251</name>
                        <newname>gk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR252</name>
                        <newname>gl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR253</name>
                        <newname>gm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR254</name>
                        <newname>gn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR255</name>
                        <newname>go</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR256</name>
                        <newname>gp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR257</name>
                        <newname>gq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR258</name>
                        <newname>gr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR259</name>
                        <newname>gs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR26</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR260</name>
                        <newname>gt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR261</name>
                        <newname>gu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR262</name>
                        <newname>gv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR263</name>
                        <newname>gw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR264</name>
                        <newname>gx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR265</name>
                        <newname>gy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR266</name>
                        <newname>gz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR267</name>
                        <newname>g0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR268</name>
                        <newname>g1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR269</name>
                        <newname>g2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR27</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR270</name>
                        <newname>g3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR271</name>
                        <newname>g4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR272</name>
                        <newname>g5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR273</name>
                        <newname>g6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR274</name>
                        <newname>g7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR275</name>
                        <newname>g8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR276</name>
                        <newname>g9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR277</name>
                        <newname>ha</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR278</name>
                        <newname>hb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR279</name>
                        <newname>hc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR28</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR280</name>
                        <newname>hd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR281</name>
                        <newname>he</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR282</name>
                        <newname>hf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR283</name>
                        <newname>hg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR284</name>
                        <newname>hh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR285</name>
                        <newname>hi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR286</name>
                        <newname>hj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR287</name>
                        <newname>hk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR288</name>
                        <newname>hl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR289</name>
                        <newname>hm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR29</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR290</name>
                        <newname>hn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR291</name>
                        <newname>ho</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR292</name>
                        <newname>hp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR293</name>
                        <newname>hq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR294</name>
                        <newname>hr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR295</name>
                        <newname>hs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR296</name>
                        <newname>ht</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR297</name>
                        <newname>hu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR298</name>
                        <newname>hv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR299</name>
                        <newname>hw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR3</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR30</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR300</name>
                        <newname>hx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR301</name>
                        <newname>hy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR302</name>
                        <newname>hz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR303</name>
                        <newname>h0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR304</name>
                        <newname>h1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR305</name>
                        <newname>h2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR306</name>
                        <newname>h3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR307</name>
                        <newname>h4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR308</name>
                        <newname>h5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR309</name>
                        <newname>h6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR31</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR310</name>
                        <newname>h7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR311</name>
                        <newname>h8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR312</name>
                        <newname>h9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR313</name>
                        <newname>ia</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR314</name>
                        <newname>ib</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR315</name>
                        <newname>ic</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR316</name>
                        <newname>id</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR317</name>
                        <newname>ie</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR318</name>
                        <newname>ig</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR319</name>
                        <newname>ih</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR32</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR320</name>
                        <newname>ii</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR321</name>
                        <newname>ij</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR322</name>
                        <newname>ik</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR323</name>
                        <newname>il</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR324</name>
                        <newname>im</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR325</name>
                        <newname>in</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR326</name>
                        <newname>io</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR327</name>
                        <newname>ip</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR328</name>
                        <newname>iq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR329</name>
                        <newname>ir</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR33</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR330</name>
                        <newname>is</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR331</name>
                        <newname>it</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR332</name>
                        <newname>iu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR333</name>
                        <newname>iv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR334</name>
                        <newname>iw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR335</name>
                        <newname>ix</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR336</name>
                        <newname>iy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR337</name>
                        <newname>iz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR338</name>
                        <newname>i0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR339</name>
                        <newname>i1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR34</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR340</name>
                        <newname>i2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR341</name>
                        <newname>i3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR342</name>
                        <newname>i4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR343</name>
                        <newname>i5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR344</name>
                        <newname>i6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR345</name>
                        <newname>i7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR346</name>
                        <newname>i8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR347</name>
                        <newname>i9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR348</name>
                        <newname>ja</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR349</name>
                        <newname>jb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR35</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR350</name>
                        <newname>jc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR351</name>
                        <newname>jd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR352</name>
                        <newname>je</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR353</name>
                        <newname>jf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR354</name>
                        <newname>jg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR355</name>
                        <newname>jh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR356</name>
                        <newname>ji</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR357</name>
                        <newname>jj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR358</name>
                        <newname>jk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR359</name>
                        <newname>jl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR36</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR360</name>
                        <newname>jm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR361</name>
                        <newname>jn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR362</name>
                        <newname>jo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR363</name>
                        <newname>jp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR364</name>
                        <newname>jq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR365</name>
                        <newname>jr</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR366</name>
                        <newname>js</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR367</name>
                        <newname>jt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR368</name>
                        <newname>ju</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR369</name>
                        <newname>jv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR37</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR370</name>
                        <newname>jw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR371</name>
                        <newname>jx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR372</name>
                        <newname>jy</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR373</name>
                        <newname>jz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR374</name>
                        <newname>j0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR375</name>
                        <newname>j1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR376</name>
                        <newname>j2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR377</name>
                        <newname>j3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR378</name>
                        <newname>j4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR379</name>
                        <newname>j5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR38</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR380</name>
                        <newname>j6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR381</name>
                        <newname>j7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR382</name>
                        <newname>j8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR383</name>
                        <newname>j9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR39</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR4</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR40</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR41</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR42</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR43</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR44</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR45</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR46</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR47</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR48</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR49</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR5</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR50</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR51</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR52</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR53</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR54</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR55</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR56</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR57</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR58</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR59</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR6</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR60</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR61</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR62</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR63</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR64</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR65</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR66</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR67</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR68</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR69</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR7</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR70</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR71</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR72</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR73</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR74</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR75</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR76</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR77</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR78</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR79</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR8</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR80</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR81</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR82</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR83</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR84</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR85</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR86</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR87</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR88</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR89</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR9</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR90</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR91</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR92</name>
                        <newname>b4</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR93</name>
                        <newname>b5</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR94</name>
                        <newname>b6</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR95</name>
                        <newname>b7</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR96</name>
                        <newname>b8</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR97</name>
                        <newname>b9</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR98</name>
                        <newname>ca</newname>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86/PTR</signature>
                        <name>PTR99</name>
                        <newname>cb</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.App</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ActivateOtherWindow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)</signature>
                        <name>Application_DispatcherUnhandledException</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.StartupEventArgs)</signature>
                        <name>Application_Startup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>native int(native int, bool, string)</signature>
                        <name>CreateMutex</name>
                    </method>
                    <method>
                        <signature>void(object, System.UnhandledExceptionEventArgs)</signature>
                        <name>CurrentDomain_UnhandledException</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>native int(string, string)</signature>
                        <name>FindWindow</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>IsIconic</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>OpenIcon</name>
                    </method>
                    <method>
                        <signature>native int(native int)</signature>
                        <name>SetForegroundWindow</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.StartupEventArgs)</signature>
                        <name>StartWithMutex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Mutex</signature>
                        <name>mutex</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Commands.DelegateCommand</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>CanExecute</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CanExecuteChanged</name>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;object,bool&gt;()</signature>
                        <name>get_CanExecuteFunc</name>
                    </method>
                    <method>
                        <signature>System.Action`1&lt;object&gt;()</signature>
                        <name>get_ExecuteAction</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CanExecuteChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Func`2&lt;object,bool&gt;)</signature>
                        <name>set_CanExecuteFunc</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;object&gt;)</signature>
                        <name>set_ExecuteAction</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;object,bool&gt;</signature>
                        <name>&lt;CanExecuteFunc&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;object&gt;</signature>
                        <name>&lt;ExecuteAction&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CanExecuteChanged</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Func`2&lt;object,bool&gt;()</signature>
                        <name>CanExecuteFunc</name>
                    </property>
                    <property>
                        <signature>System.Action`1&lt;object&gt;()</signature>
                        <name>ExecuteAction</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CanExecuteChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.Commands.DriverFileDownloader</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelDownload</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartDownload</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedEventHandler)</signature>
                        <name>add_Completed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ProgressChangedEventHandler)</signature>
                        <name>add_ProgressChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>downloadMfg_Completed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>download_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>download_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFreeUser</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MfgFirst</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedEventHandler)</signature>
                        <name>remove_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ProgressChangedEventHandler)</signature>
                        <name>remove_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedEventHandler</signature>
                        <name>Completed</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadHelper</signature>
                        <name>_downloader</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverFile</signature>
                        <name>_driverFile</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Commands.DriverInstaller</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.AddLinkLanguageParamConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.AngleToIsLargeConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.AngleToPointConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.AppendStringConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ArcValueConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.BoolToColorConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.BoolToInfoConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.BoolToVisibilityMulitConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.Boolreversalconverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ButtonMarginConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.CircleArcConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.CirclePathConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ColorToSolidColorBrushConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeleteFileConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DescConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DescListConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DescTooltipConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceClasses</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, System.Guid&amp;, unsigned int32)</signature>
                        <name>CM_Enumerate_Classes</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int32, System.Text.StringBuilder, System.Text.StringBuilder, bool&amp;)</signature>
                        <name>EnumerateClasses</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, unsigned int64)</signature>
                        <name>LoadBitmapW</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, unsigned int32, System.Text.StringBuilder, unsigned int32&amp;)</signature>
                        <name>RegQueryValueA</name>
                    </method>
                    <method>
                        <signature>bool(System.Guid&amp;, System.Text.StringBuilder, unsigned int32, unsigned int32&amp;)</signature>
                        <name>SetupDiClassNameFromGuidA</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>SetupDiDestroyDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Graphics, DriverEasyWPF.Converter.DeviceClasses/RECT, int32, int32)</signature>
                        <name>SetupDiDrawMiniIcon</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, DriverEasyWPF.Converter.DeviceClasses/SP_DEVINFO_DATA)</signature>
                        <name>SetupDiEnumDeviceInfo</name>
                    </method>
                    <method>
                        <signature>bool(System.Guid, int32&amp;)</signature>
                        <name>SetupDiGetClassBitmapIndex</name>
                    </method>
                    <method>
                        <signature>native int(System.Guid&amp;, unsigned int32, native int, unsigned int32)</signature>
                        <name>SetupDiGetClassDevsA</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Converter.DeviceClasses/SP_CLASSIMAGELIST_DATA&amp;)</signature>
                        <name>SetupDiGetClassImageList</name>
                    </method>
                    <method>
                        <signature>int32(System.Guid&amp;, native int&amp;, int32&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>native int(System.Guid&amp;, unsigned int32, int32, native int, unsigned int32)</signature>
                        <name>SetupDiOpenClassRegKeyExA</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CR_INVALID_DATA</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_NO_SUCH_VALUE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_SUCCESS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassesGuid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PRESENT</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIOCR_INSTALLER</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DMI_BKCOLOR</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DMI_MASK</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DMI_USERECT</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAXIMUM_ALLOWED</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_SIZE_DEVICE_DESCRIPTION</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceClasses/RECT</name>
                <newname>e/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>bottom</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>left</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>right</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>top</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceClasses/SP_CLASSIMAGELIST_DATA</name>
                <newname>e/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.ImageSource</signature>
                        <name>ImageList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Reserved</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceClasses/SP_DEVINFO_DATA</name>
                <newname>e/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassGuid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DevInst</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Reserved</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceInfo</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int32, string, System.Text.StringBuilder)</signature>
                        <name>EnumerateDevices</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Guid&amp;, unsigned int32, unsigned int32&amp;)</signature>
                        <name>SetupDiClassGuidsFromNameA</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>SetupDiDestroyDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, DriverEasyWPF.Converter.DeviceInfo/SP_DEVINFO_DATA)</signature>
                        <name>SetupDiEnumDeviceInfo</name>
                    </method>
                    <method>
                        <signature>native int(System.Guid&amp;, unsigned int32, native int, unsigned int32)</signature>
                        <name>SetupDiGetClassDevsA</name>
                    </method>
                    <method>
                        <signature>bool(native int, DriverEasyWPF.Converter.DeviceInfo/SP_DEVINFO_DATA, unsigned int32, unsigned int32, System.Text.StringBuilder, unsigned int32, native int)</signature>
                        <name>SetupDiGetDeviceRegistryPropertyA</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PRESENT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_DEV_LEN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPDRP_DEVICEDESC</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPDRP_FRIENDLYNAME</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceInfo/SP_DEVINFO_DATA</name>
                <newname>f/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassGuid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DevInst</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Reserved</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>CM_Free_Res_Des_Handle</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32&amp;, unsigned int32, unsigned int32)</signature>
                        <name>CM_Get_First_Log_Conf</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32&amp;, unsigned int32, unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>CM_Get_Next_Res_Des</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, native int, unsigned int32, unsigned int32)</signature>
                        <name>CM_Get_Res_Des_Data</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32&amp;, unsigned int32, unsigned int32)</signature>
                        <name>CM_Get_Res_Des_Data_Size</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CloseResources</name>
                    </method>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>ExtractResourceInfo</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int32, string, int32)</signature>
                        <name>OpenResources</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Guid&amp;, unsigned int32, unsigned int32&amp;)</signature>
                        <name>SetupDiClassGuidsFromNameA</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>SetupDiDestroyDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, DriverEasyWPF.Converter.DeviceResources/SP_DEVINFO_DATA)</signature>
                        <name>SetupDiEnumDeviceInfo</name>
                    </method>
                    <method>
                        <signature>native int(System.Guid&amp;, unsigned int32, native int, unsigned int32)</signature>
                        <name>SetupDiGetClassDevsA</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CR_BUFFER_SMALL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_INVALID_DATA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_NO_MORE_LOG_CONF</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_NO_SUCH_VALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_SUCCESS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CurrConf</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PRESENT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>FBufForRes</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>FNoResourses</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>FResDeviceInfoSet</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>FResourceOpen</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>FResourceType</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IOA_Local</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_DEV_LEN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PrevResHandle</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ResHandle</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ResType_DMA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ResType_IO</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ResType_IRQ</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ResType_Mem</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPDRP_DEVICEDESC</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SPDRP_FRIENDLYNAME</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fDD_BYTE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fDD_DWORD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fDD_WORD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIOD_IO</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIOD_Memory</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIOD_PortType</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIRQD_Edge</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIRQD_Exclusive</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIRQD_Level</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fIRQD_Share</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_24</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_32</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_32_24</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_CombinedWrite</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_CombinedWriteAllowed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_CombinedWriteDisallowed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_MemoryType</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_PrefetchAllowed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_PrefetchDisallowed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_Prefetchable</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_RAM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_ROM</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_ReadAllowed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_ReadDisallowed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fMD_Readable</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>mDD_Width</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>mIRQD_Edge_Level</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>mIRQD_Share</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sizDMA_HEADER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sizIO_HEADER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sizIRQ_HEADER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sizMEM_HEADER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>sizeResFu</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/DMA_DES</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DD_Alloc_Chan</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DD_Count</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DD_Flags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DD_Type</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/DMA_RANGE</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DR_Flags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DR_Max</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DR_Min</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/IO_DES</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>IOD_Alloc_Base</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>IOD_Alloc_End</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IOD_Count</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IOD_DesFlags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IOD_Type</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/IO_RANGE</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>IOR_Alias</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>IOR_Align</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>IOR_Max</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>IOR_Min</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IOR_RangeFlags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IOR_nPorts</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/IRQ_DES</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQD_Affinity</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQD_Alloc_Num</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQD_Count</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQD_Flags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQD_Type</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/IRQ_RANGE</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQR_Flags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQR_Max</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>IRQR_Min</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/MEM_DES</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>MD_Alloc_Base</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>MD_Alloc_End</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MD_Count</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MD_Flags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MD_Reserved</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MD_Type</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/MEM_RANGE</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>MR_Align</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MR_Flags</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>MR_Max</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>MR_Min</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MR_Reserved</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MR_nBytes</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DeviceResources/SP_DEVINFO_DATA</name>
                <newname>DriverEasyWPF.Converter.DeviceResources/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassGuid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DevInst</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Reserved</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DialogHeightConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DialogWidthConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DialogWindowConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DictionaryConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DoubleConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DoubleDeleteFileConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DoubleDownloadSizeStateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DoubleDownloadSizeStateConverterForAllVersionDrivers</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DoubleValueConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DownloadSizeStateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.DriverDateToNumConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>HeavyPolution</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Light</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Medium</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.EmptyToVisibilityConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.FileDownloadState</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.FileSizeConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.FormatStringConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.GlobalButtonMarginConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.GuidToImgConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Converter.GuidToImgConverter/WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource(System.Drawing.Icon)</signature>
                        <name>ToIcon2ImageSource</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.GuidToImgConverter/WIN_GUID</name>
                <methodlist>
                    <method>
                        <signature>DriverEasyWPF.Converter.GuidToImgConverter/WIN_GUID(System.Guid)</signature>
                        <name>WinGuidFromGuid</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Data1</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data2</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data3</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Data4</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.HalfWidthMultiConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.HalfWidthMultiConverter/&lt;&gt;c</name>
                <newname>DriverEasyWPF.Converter.HalfWidthMultiConverter/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>&lt;Convert&gt;b__0_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Converter.HalfWidthMultiConverter/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;object,bool&gt;</signature>
                        <name>&lt;&gt;9__0_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.HeaderTitleMultiConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.HelpImproveOptionConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ForamtResultWithProductName</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.InverseVisibilityToBoolConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.LanguageConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ForamtResultWithProductName</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.LanguageConverterBindingParameter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ForamtResultWithProductName</name>
                    </method>
                    <method>
                        <signature>string(string, object[])</signature>
                        <name>FormatResultWithVariables</name>
                    </method>
                    <method>
                        <signature>string(string, object[], string)</signature>
                        <name>StringJoinArray</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>get_Resources</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.ResourceDictionary)</signature>
                        <name>set_Resources</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.ResourceDictionary</signature>
                        <name>resources</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>Resources</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.LanguageFormatConverterBindingParameter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ForamtResultWithProductName</name>
                    </method>
                    <method>
                        <signature>string(string, object[], string)</signature>
                        <name>FormatResult</name>
                    </method>
                    <method>
                        <signature>string(string, object[])</signature>
                        <name>FormatResultWithVariables</name>
                    </method>
                    <method>
                        <signature>string(string, object[], string)</signature>
                        <name>FormatResultWithVariables</name>
                    </method>
                    <method>
                        <signature>string(string, object[], string)</signature>
                        <name>StringJoinArray</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>get_Resources</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.ResourceDictionary)</signature>
                        <name>set_Resources</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.ResourceDictionary</signature>
                        <name>resources</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>Resources</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.LanguageStrongConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ForamtResultWithProductName</name>
                    </method>
                    <method>
                        <signature>string(string, object[])</signature>
                        <name>FormatResultWithVariables</name>
                    </method>
                    <method>
                        <signature>string(string, object[], string)</signature>
                        <name>StringJoinArray</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>get_Resources</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.ResourceDictionary)</signature>
                        <name>set_Resources</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.ResourceDictionary</signature>
                        <name>resources</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>Resources</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MarginConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiBoolConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object[])</signature>
                        <name>AllCheck</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>bool(object[])</signature>
                        <name>SingleCheck</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiBoolConverter/&lt;&gt;c</name>
                <newname>DriverEasyWPF.Converter.MultiBoolConverter/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>&lt;AllCheck&gt;b__2_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Converter.MultiBoolConverter/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;object,bool&gt;</signature>
                        <name>&lt;&gt;9__2_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiNumToVisibilityConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiScrollBarStyleConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiSpeedLimitConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(bool)</signature>
                        <name>BoolToVisibility</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiValueConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiValueConverter/DataResult</name>
                <newname>DriverEasyWPF.Converter.MultiValueConverter/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_mainViewModel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_mainWindow</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_mainViewModel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_mainWindow</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;mainViewModel&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;mainWindow&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.MultiplyConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NameToPhotoMaping</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_OtherMaping</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_SettingsMaping</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_ToolsMaping</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>set_OtherMaping</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>set_SettingsMaping</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>set_ToolsMaping</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>otherMaping</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>settingsMaping</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>toolsMaping</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>OtherMaping</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>SettingsMaping</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>ToolsMaping</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NameToPhotoPathConverterHover</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NameToPhotoPathConverterNormal</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NegativeValueConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NullOrEmptyConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NumToPluralConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.NumToVisibilityConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.PathToBitmapConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.PopupConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ProFeaturesThicknessConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.RadiusConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.RectMultiConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.RenewVisibilityConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.RestorePageTypeConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ReverseConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ScanNowMarginConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ScrollViewerOffsetConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.SelectedNumberToBoolConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ShowVerifiedByWHQLStateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.SizeCompareMultiConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.StarLevelConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.StateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.StringDateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.StringEmptyConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.StringToObjectConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.TextBlockFormattedTextWidthConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.TextBlockWrappingConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.TimeConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ToolsOfflineConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.TotalDeviceConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object[], System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object[](object, System.Type[], object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                    <method>
                        <signature>int32(object[], int32)</signature>
                        <name>GetDeviceCount</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.TrimmedTextBlockVisibilityConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.TrimmedTextBlockVisibilityConverterEx</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.UnpluggedDescConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.UpdateButtonStateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.UppercaseConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.VisibilityToBoolConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.WaitingConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.WidthConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.ZeroCompareConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Converter.pbUpdatingConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.InstallPrompt</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ButtonNo_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ButtonYes_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInstallSuccee</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInstallSuccee</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CHECK_FINISH_INTERVAL</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MIN_WAIT_TIME</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Stopwatch</signature>
                        <name>_waitTimer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>btnUserSelect</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_no_install_prompt</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_ok_install_prompt</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>driverVm</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.InstallPromptViewModel</signature>
                        <name>installPromptViewModel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.InstallPrompt</signature>
                        <name>install_prompt_page</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFree</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInstallSuccee</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ProgressBar</signature>
                        <name>pbProgress</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Services.RestorePoint.RestorePointHandler</signature>
                        <name>restorePointHandler</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scrollBar1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txInstalltext</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txRestore</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txResultConfirm</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txdrivername</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInstallSuccee</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Language</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetInfoByKey</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetInfoByKeyDefault</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetInfoByKeyString</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetLanguage</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>UseDefaultLanguage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UseGivingLanguage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurLangName</name>
                    </method>
                    <method>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>get_LangRd</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurLangName</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.ResourceDictionary)</signature>
                        <name>set_LangRd</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurLangName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>instance</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.ResourceDictionary</signature>
                        <name>langRd</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CurLangName</name>
                    </property>
                    <property>
                        <signature>System.Windows.ResourceDictionary()</signature>
                        <name>LangRd</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.MainWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;CheckUpdates&gt;b__24_0</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Restart&gt;b__18_0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Restart&gt;b__18_1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Window_Loaded&gt;b__17_0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Window_Loaded&gt;b__17_1</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;main_menu_Click&gt;b__90_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;versionWorker_RunWorkerCompleted&gt;b__26_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;versionWorker_RunWorkerCompleted&gt;b__26_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ChangeToScanning</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ChangeToScanningNew</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckUpdates</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectItemControlWithScrollView</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.SessionEndingCancelEventArgs)</signature>
                        <name>Current_SessionEnding</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Dak_Completed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoWhenRestart</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DragEventArgs)</signature>
                        <name>FileShowTextBox_PreviewDragEnter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetPermissionForHardwareInfo</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideScanningPage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitWorkDir</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window, System.Windows.Window)</signature>
                        <name>OpenWindowsByDecorator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDriverCountAndSaveFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetCompletedDriverList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetProgressBar</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Restart</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveScanResult</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowScanResult</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowStartupWindow</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartScan</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>begin_scan</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnMin_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_more_main_page_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_scan_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_stop_scanning_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>downloadList_IgnoreListCleared</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel(DriverEasyWPF.ViewModels.DownloadViewModel, int32[])</signature>
                        <name>getSelectedDriverInstall</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel(DriverEasyWPF.ViewModels.UpdateListViewModel, int32[])</signature>
                        <name>getSelectedDriverInstallUpdateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.TranslateTransform()</signature>
                        <name>get_Cur_tt</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel(int32)</signature>
                        <name>get_selected_driver_uninstall</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>go_back_with_animation</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.Controllers.RadioMenuItem)</signature>
                        <name>go_back_with_animation</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>go_back_with_main_animation</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>go_to_scan_page</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>hardwareInfoWorker_DoWork</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>hardwareInfoWorker_RunWorkComplete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>increate_scan_time</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>is_latest_version</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>mainWindow_Activated</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>mainWindow_PreviewKeyDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>main_frame_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>main_menu_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>menu_go_back_with_animation</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>retry_check_new_version</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.Page()</signature>
                        <name>save_file_and_create_update_page</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>save_scan_result_and_reset</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.DetectDeviceFinishEventArgs)</signature>
                        <name>scanManager_DetectDeviceFinished</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs)</signature>
                        <name>scanManager_ScanCompeleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>scanningHandler_ShowProgressCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.TranslateTransform)</signature>
                        <name>set_Cur_tt</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.MenuItem, bool)</signature>
                        <name>set_toggle_button_checked</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>show_update</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>tabHardwareInfo_SelectionChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemAbout_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemDriverUpdateHistory_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemHaredware_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemHelp_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemImproveTranslation_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemReportMissedDrivers_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemRestore_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemSettings_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemSupport_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>tabItemVersionHistory_PreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>tabMain_SelectionChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>tabMenu_SelectionChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>tabTools_SelectionChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>tbtn_menu_Checked</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>tbtn_scan_Checked</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>tbtn_system_info_Checked</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>tbtn_tools_Checked</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>tbtn_update_Checked</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>versionWorker_DoWork</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs, bool)</signature>
                        <name>versionWorker_RunWorkerCompleted</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.TranslateTransform</signature>
                        <name>&lt;Cur_tt&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ClickHardwareInfoCount</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IS_LATEST_VERSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MENU_ICON_WIDTH</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MENU_WIDTH_TIME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PreSelectedIndex</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PreSelectedIndex1</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUBMENU_TRANSFORM_TIME</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUBMENU_WIDTH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ScanServerUrl</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>_mainWindowViewModel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanResult</signature>
                        <name>_scanResult</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close_common</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_get_pro_common</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_min_common</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareToolTip</signature>
                        <name>etp_btn_activate</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareToolTip</signature>
                        <name>etp_menu</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareToolTip</signature>
                        <name>etp_scan</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareToolTip</signature>
                        <name>etp_system_info</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareToolTip</signature>
                        <name>etp_tools</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareToolTip</signature>
                        <name>etp_update</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>gridRoot</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_frame</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgLogo</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>initHasCompleted</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isScanError</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_about</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_help</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_improve_translation</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_report_missed_drivers</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_settings</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_support</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_menu_version_history</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_scan</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info_cpu</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info_graphic</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info_memory</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info_motherboard</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info_overview</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_system_info_spd</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_tools</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_tools_backup</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_tools_offline_scan</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_tools_restore</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_tools_uninstall</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_tools_update_history</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem</signature>
                        <name>item_update</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>left_border</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_activate_pro_now</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Frame</signature>
                        <name>main_frame</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Menu</signature>
                        <name>main_menu</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>main_page</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanManager</signature>
                        <name>scanManager</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>scanTime</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Services.ScanningHandler</signature>
                        <name>scanningHandler</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Animation.Storyboard</signature>
                        <name>scanningStoryBoard</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Menu</signature>
                        <name>sub_menu</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Menu</signature>
                        <name>sub_menu_system_info</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Menu</signature>
                        <name>sub_menu_tools</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>waitCompletedTimer</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.TranslateTransform()</signature>
                        <name>Cur_tt</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.MainWindow/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ResetCompletedDriverList&gt;b__58_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstall&gt;b__20_0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstall&gt;b__20_1</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstall&gt;b__20_2</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstall&gt;b__20_3</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstall&gt;b__20_4</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstall&gt;b__20_5</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstallUpdateList&gt;b__97_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;getSelectedDriverInstallUpdateList&gt;b__97_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.MainWindow/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__20_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__20_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__20_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__20_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__20_4</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__20_5</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__58_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__97_0</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__97_1</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.MainWindow/&lt;&gt;c__DisplayClass32_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;tabMain_SelectionChanged&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Rectangle</signature>
                        <name>rct</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.MainWindowHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.All_Version_Drivers_Type</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>Completed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>HiddenInSettings</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>UpToDate</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>UpdateHistory</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.CertifiedType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifiedType</signature>
                        <name>DE</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifiedType</signature>
                        <name>WHQL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.CertifyLicenseResultType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifyLicenseResultType</signature>
                        <name>ActivatedFailed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifyLicenseResultType</signature>
                        <name>NormalNoActivated</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifyLicenseResultType</signature>
                        <name>TechnicianExpired</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ComboBoxWithCommand</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand, System.Windows.Input.ICommand)</signature>
                        <name>AddCommand</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>CanExecuteChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>CommandChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand, System.Windows.Input.ICommand)</signature>
                        <name>HookUpCommand</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>OnSelectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand, System.Windows.Input.ICommand)</signature>
                        <name>RemoveCommand</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_Command</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CommandParameter</name>
                    </method>
                    <method>
                        <signature>System.Windows.IInputElement()</signature>
                        <name>get_CommandTarget</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand)</signature>
                        <name>set_Command</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_CommandParameter</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.IInputElement)</signature>
                        <name>set_CommandTarget</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandParameterProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandTargetProperty</name>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>canExecuteChangedHandler</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>Command</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>CommandParameter</name>
                    </property>
                    <property>
                        <signature>System.Windows.IInputElement()</signature>
                        <name>CommandTarget</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.CompareType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.CompareType</signature>
                        <name>Equal</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CompareType</signature>
                        <name>GreaterThan</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CompareType</signature>
                        <name>GreaterThanOrEqual</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CompareType</signature>
                        <name>LessThan</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CompareType</signature>
                        <name>LessThanOrEqual</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CompareType</signature>
                        <name>NotEqual</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.CurrentToolsPage</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage</signature>
                        <name>DriverBackup</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage</signature>
                        <name>DriverRestore</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage</signature>
                        <name>DriverUninstall</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage</signature>
                        <name>DriverUpdateHistory</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage</signature>
                        <name>OfflineScan</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.DeviceForDriverInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DealDataForCompletedDevice</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitDeviceInfo</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>InitDeviceInfoWithDriver</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>get_Cur_All_Version_Driver_Type</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentProvider</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DescName</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_Device</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverType</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DriverState()</signature>
                        <name>get_Driver_State</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Install_Date</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Offline</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Support_Update</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewProvider</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SignerInformation</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.All_Version_Drivers_Type)</signature>
                        <name>set_Cur_All_Version_Driver_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentProvider</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentVersion</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DescName</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_Device</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverType</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DriverState)</signature>
                        <name>set_Driver_State</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Install_Date</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Offline</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Support_Update</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewProvider</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewVersion</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SignerInformation</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_device_name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>set_device_name_with_driver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>set_driver_type</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.NewDriver)</signature>
                        <name>set_driver_type</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>set_install_date</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentDate&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentProvider&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentVersion&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DescName&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>&lt;Device&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DriverType&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Install_Date&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Is_Support_Update&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NewDate&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NewName&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NewProvider&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NewVersion&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SignerInformation&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATETIME_FORMATE_PATTERN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATETIME_FORMATE_PATTERN_YMD</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATE_FORMATE_PATTERN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATE_FORMATE_PATTERN_YMD</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>cur_all_version_driver_type</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DriverState</signature>
                        <name>driver_state</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_offline</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>Cur_All_Version_Driver_Type</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentProvider</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DescName</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>Device</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverType</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DriverState()</signature>
                        <name>Driver_State</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Install_Date</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Offline</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Support_Update</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewProvider</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SignerInformation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.DialogWindowResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowRegisterButton</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowRegisterButton</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsShowRegisterButton&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowRegisterButton</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.DialogWindowType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.DialogWindowType</signature>
                        <name>ProFeatures</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DialogWindowType</signature>
                        <name>RegisterNow</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DialogWindowType</signature>
                        <name>Renew</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DialogWindowType</signature>
                        <name>RestorePoint</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DialogWindowType</signature>
                        <name>SmartInstall</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.DownloadAllModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentDriver</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalDriver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.DriverState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.DriverState</signature>
                        <name>Finished</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DriverState</signature>
                        <name>HasBothDriver</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DriverState</signature>
                        <name>Missing</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.Driver_View_Model_Type</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>AllItemsDisplayed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>Completed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>HeaderTitle</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>HeaderTitleDesc</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>Ignored</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>Missing</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>Outdated</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>Unplugged</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>UpToDate</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.EntrancePageType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>ActivateFromMainPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>AutoCreateRestorePoint</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>AutomaticallyInstallDriver</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>CertifyLicense</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>DownloadSpeed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>DriverBackup</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>DriverRestore</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>DriverUninstall</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>LeftProfessionPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>RegisterNowBtn</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>RollbackDriver</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>SaveHardwareInfo</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>SoftwareRenew</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>UpdateAll</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>UpdateDriverHistory</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>UpdateToKeepLatestVersion</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Cpu</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BusSpeed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CodeName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CoreSpeed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CoreVoltage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Cores</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.Cpu_Core_Info&gt;()</signature>
                        <name>get_Cpu_Core_List</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExtFamily</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExtModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Family</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Instructions</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>get_L1Data</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>get_L1Inst</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>get_Level2</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>get_Level3</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MaxTDP</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Model</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Multiplier</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Package</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_QPILink</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Revision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Specification</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Stepping</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Technology</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Threads</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BusSpeed</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CodeName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CoreSpeed</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CoreVoltage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Cores</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.Cpu_Core_Info&gt;)</signature>
                        <name>set_Cpu_Core_List</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExtFamily</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExtModel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Family</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Instructions</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.CpuCache)</signature>
                        <name>set_L1Data</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.CpuCache)</signature>
                        <name>set_L1Inst</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.CpuCache)</signature>
                        <name>set_Level2</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.CpuCache)</signature>
                        <name>set_Level3</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MaxTDP</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Model</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Multiplier</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Package</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_QPILink</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Revision</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Specification</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Stepping</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Technology</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Threads</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_cpu_cores</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_cpu_manufacturer_name</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_cpu_threads</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>busSpeed</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>codeName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>coreSpeed</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>coreVoltage</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cores</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.Cpu_Core_Info&gt;</signature>
                        <name>cpu_core_list</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>extFamily</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>extModel</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>family</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>instructions</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache</signature>
                        <name>l1Data</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache</signature>
                        <name>l1Inst</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache</signature>
                        <name>level2</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache</signature>
                        <name>level3</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>manufacturer_name</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>maxTDP</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>model</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>multiplier</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>package</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qpiLink</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>revision</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>specificatin</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stepping</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>technology</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>threads</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BusSpeed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CodeName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CoreSpeed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CoreVoltage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Cores</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.Cpu_Core_Info&gt;()</signature>
                        <name>Cpu_Core_List</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExtFamily</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExtModel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Family</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Instructions</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>L1Data</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>L1Inst</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>Level2</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.CpuCache()</signature>
                        <name>Level3</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer_Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MaxTDP</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Model</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Multiplier</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Package</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>QPILink</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Revision</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Specification</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Stepping</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Technology</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Threads</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.CpuCache</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Descriptor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UIDesc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Descriptor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Size</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UIDesc</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Descriptor&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UIDesc&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Descriptor</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Size</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UIDesc</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Cpu_Core_Info</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Core_Count</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Core_Type</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Thread_Count</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Core_Count</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Core_Type</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Thread_Count</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>core_count</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>core_type</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>thread_count</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Core_Count</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Core_Type</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Thread_Count</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Graphic</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClockCore</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClockMemory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClockShader</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CodeName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MemoryBusWidth</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MemorySize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MemoryType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Revision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Technology</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClockCore</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClockMemory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClockShader</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CodeName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MemoryBusWidth</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MemorySize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MemoryType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Revision</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Technology</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>clockCore</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>clockMemory</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>clockShader</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>codeName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>manufacturer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>memoryBusWidth</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>memorySize</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>memoryType</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>revision</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>technology</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ClockCore</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ClockMemory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ClockShader</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CodeName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MemoryBusWidth</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MemorySize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MemoryType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Revision</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Technology</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Mainboard</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BiosBrand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BiosDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BiosVersion</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>get_Chipset</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GraphicVersion</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>get_LPCIO</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MaxSupported</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>get_Model</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SideBandAddressing</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>get_Southbridge</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TransferRate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BiosBrand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BiosDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BiosVersion</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.MainboardItem)</signature>
                        <name>set_Chipset</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GraphicVersion</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.MainboardItem)</signature>
                        <name>set_LPCIO</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MaxSupported</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.MainboardItem)</signature>
                        <name>set_Model</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SideBandAddressing</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.MainboardItem)</signature>
                        <name>set_Southbridge</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TransferRate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BiosBrand&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BiosDate&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BiosVersion&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem</signature>
                        <name>&lt;Chipset&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GraphicVersion&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem</signature>
                        <name>&lt;LPCIO&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Manufacturer&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MaxSupported&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem</signature>
                        <name>&lt;Model&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SideBandAddressing&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem</signature>
                        <name>&lt;Southbridge&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TransferRate&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BiosBrand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BiosDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BiosVersion</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>Chipset</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>GraphicVersion</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>LPCIO</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MaxSupported</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>Model</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SideBandAddressing</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.MainboardItem()</signature>
                        <name>Southbridge</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TransferRate</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.MainboardItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Revision</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Revision</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Revision&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Revision</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Memory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BankCycleTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CasLatency</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Channel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CommandRate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CycleTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DcMode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DramFrequency</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DramIdleTimer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FsbDram</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NbFrequency</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RasPrecharge</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RasToCasDelay</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RowRefreshCycleTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RowToColumn</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TotalCas</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BankCycleTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CasLatency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Channel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CommandRate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CycleTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DcMode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DramFrequency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DramIdleTimer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FsbDram</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NbFrequency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RasPrecharge</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RasToCasDelay</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RowRefreshCycleTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RowToColumn</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Size</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TotalCas</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Type</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>bankCycleTime</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>casLatency</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>channel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>commandRate</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cycleTime</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>dcMode</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>dramFrequency</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>dramIdleTimer</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fsbDram</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>nbFrequency</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rasPrecharge</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rasToCasDelay</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rowRefreshCycleTime</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rowToColumn</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>totalCas</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BankCycleTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CasLatency</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Channel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CommandRate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CycleTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DcMode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DramFrequency</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DramIdleTimer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FsbDram</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NbFrequency</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RasPrecharge</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RasToCasDelay</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RowRefreshCycleTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RowToColumn</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Size</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TotalCas</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Overview</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_HardDisks</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Machine</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Memory</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Monitors</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Motherboard</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NetworkCards</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OperationSystem</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Processor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VideoCard</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_HardDisks</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Machine</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Memory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Monitors</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Motherboard</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NetworkCards</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OperationSystem</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Processor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VideoCard</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;HardDisks&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Machine&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Memory&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Monitors&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Motherboard&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NetworkCards&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OperationSystem&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Processor&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VideoCard&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>HardDisks</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Machine</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Memory</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Monitors</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Motherboard</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NetworkCards</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OperationSystem</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Processor</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VideoCard</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.SelectionItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ItemName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ItemValue</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ItemName</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ItemValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ItemName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ItemValue&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ItemName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ItemValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.Spd</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Buffered</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_CasLatency</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_CommandRate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Correction</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_Frequency</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MaxBandWidth</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModuleSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PartNumber</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_Profile</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_RasPrecharge</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_RasToCas</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Registered</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SpdExt</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_TRas</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_TRc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Type</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>get_Voltage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WeekYear</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Buffered</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_CasLatency</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_CommandRate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Correction</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_Frequency</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MaxBandWidth</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ModuleSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PartNumber</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_Profile</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_RasPrecharge</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_RasToCas</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Registered</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SerialNumber</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SpdExt</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_TRas</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_TRc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Type</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.SpdTimeItem)</signature>
                        <name>set_Voltage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WeekYear</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>buffered</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>casLatency</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>commandRate</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>correction</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>frequency</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>manufacturer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>maxBandWidth</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>moduleSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>partNumber</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>profile</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>rasPrecharge</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>rasToCas</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>registered</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>serialNumber</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>spdExt</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>tRas</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>tRc</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</signature>
                        <name>voltage</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>weekYear</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Buffered</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>CasLatency</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>CommandRate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Correction</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>Frequency</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MaxBandWidth</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ModuleSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PartNumber</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>Profile</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>RasPrecharge</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>RasToCas</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Registered</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SerialNumber</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SpdExt</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>TRas</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>TRc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Type</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem()</signature>
                        <name>Voltage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WeekYear</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HardwareInfo.SpdTimeItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Item0</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Item1</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Item2</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Item3</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Item0</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Item1</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Item2</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Item3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Item0&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Item1&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Item2&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Item3&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Item0</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Item1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Item2</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Item3</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.HeaderTitleType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.HeaderTitleType</signature>
                        <name>Completed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HeaderTitleType</signature>
                        <name>Missing</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HeaderTitleType</signature>
                        <name>Outdated</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HeaderTitleType</signature>
                        <name>Unplugged</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HeaderTitleType</signature>
                        <name>UpToDate</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.History_Driver_State</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_State</signature>
                        <name>InstallFailed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_State</signature>
                        <name>InstallSuccess</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_State</signature>
                        <name>RollbackFailed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_State</signature>
                        <name>RollbackSuccess</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.History_Driver_Type</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_Type</signature>
                        <name>AllItemsDisplayed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_Type</signature>
                        <name>HeaderTitle</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_Type</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.Install.ReadyInstall</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ItemPosition</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.ItemPosition</signature>
                        <name>First</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ItemPosition</signature>
                        <name>Last</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.PasswordHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>Attach</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetAttach</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetIsUpdating</name>
                    </method>
                    <method>
                        <signature>string(System.Windows.DependencyObject)</signature>
                        <name>GetPassword</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnPasswordPropertyChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>PasswordChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, bool)</signature>
                        <name>SetAttach</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, bool)</signature>
                        <name>SetIsUpdating</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, string)</signature>
                        <name>SetPassword</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AttachProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsUpdatingProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PasswordProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ProxyResultType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.ProxyResultType</signature>
                        <name>InvalidAddress</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ProxyResultType</signature>
                        <name>InvalidPort</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ProxyResultType</signature>
                        <name>OK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ProxyResultType</signature>
                        <name>ProxyInvalid</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ProxyResultType</signature>
                        <name>TestFailure</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ProxyResultType</signature>
                        <name>TestSuccess</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.RestartType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.RestartType</signature>
                        <name>Rollback</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.RestartType</signature>
                        <name>Update</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.RestorePageType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.RestorePageType</signature>
                        <name>FirstPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.RestorePageType</signature>
                        <name>TreeViewPage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ScanInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastAllNo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastMissNo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastOutdateNo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanStatus</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanTimeDesc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanTimeNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastUnplugedNo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastAllNo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastMissNo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastOutdateNo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanStatus</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanTimeDesc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanTimeNumber</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastUnplugedNo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_lastAllNo</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastMissNo</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastOutdateNo</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanStatus</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanTime</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanTimeDesc</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanTimeNumber</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastUnplugedNo</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>LastAllNo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastMissNo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastOutdateNo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanStatus</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanTimeDesc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanTimeNumber</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastUnplugedNo</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ScanInfoDetail</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_HasNewDriver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Info1</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Info2</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.ScanInfo()</signature>
                        <name>get_ScanInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StatusImgUrl</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_HasNewDriver</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Info1</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Info2</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.ScanInfo)</signature>
                        <name>set_ScanInfo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StatusImgUrl</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>hasNewDriver</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>info1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>info2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ScanInfo</signature>
                        <name>scanInfo</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>statusImgUrl</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>HasNewDriver</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Info1</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Info2</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.ScanInfo()</signature>
                        <name>ScanInfo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StatusImgUrl</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.SelectionItemNotified</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ItemName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ItemValue</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ItemName</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ItemValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>itemName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>itemValue</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ItemName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ItemValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ServerConfig.ServerConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AsyncInit</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.ServerConfig.ServerConfig()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>System.Xml.XmlDocument(string)</signature>
                        <name>GetServerConfigInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument)</signature>
                        <name>ServerConfigParse</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>ServerConfigWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>ServerConfigWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Finished</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowAdvert</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SpeedLimitForFree</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UploadUserDriver</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VariantSpeedLimit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_finished</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ServerConfig.ServerConfig</signature>
                        <name>_instance</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showAdvert</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_speedLimitForFree</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_uploadUserDriver</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_variantSpeedLimit</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Finished</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowAdvert</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SpeedLimitForFree</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UploadUserDriver</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>VariantSpeedLimit</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.SettingsProperties</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>AutoCreateRestorePoint</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>AutoRunWhenStart</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>AutoScanWhenLaunched</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>BackupAutoSelectAll</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>BackupToPath</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>HelpDebug</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>Language</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>ScheduledScan</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>TestProxySuccessfully</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SettingsProperties</signature>
                        <name>UsingDefaultProxy</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.SetupapiComeFromType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.SetupapiComeFromType</signature>
                        <name>ClicSendReportWhenUpdateError</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SetupapiComeFromType</signature>
                        <name>CloseMainWindows</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SetupapiComeFromType</signature>
                        <name>OpenDriverUpdateHistoryPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SetupapiComeFromType</signature>
                        <name>RollbackInUpdatePage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.ToolTipType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.ToolTipType</signature>
                        <name>UseParentContent</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ToolTipType</signature>
                        <name>UseSelfContent</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.UpdateLineManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentDownloadPercent</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.UpdateLineState()</signature>
                        <name>get_CurrentState</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadPercent</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowRestoreNextTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentDownloadPercent</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.UpdateLineState)</signature>
                        <name>set_CurrentState</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadPercent</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowRestoreNextTime</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DownloadPercentProperty</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentDownloadPercent</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineState</signature>
                        <name>currentState</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showRestoreNextTime</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentDownloadPercent</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.UpdateLineState()</signature>
                        <name>CurrentState</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadPercent</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowRestoreNextTime</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.UpdateLineState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineState</signature>
                        <name>CreateRestorePoint</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineState</signature>
                        <name>DownloadDriver</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineState</signature>
                        <name>InstallDriver</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.driver_for_history</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>add_quotes</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>format_hardware_ids_for_export</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Can_Rollback</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Class_Guid</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Compatible_Id_List</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Compatible_Id_String</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.history_detail_driver()</signature>
                        <name>get_Current_Driver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Current_Version</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Driver_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Driver_Provider</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Driver_Type</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Execution_Path</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Hardware_Id_List</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hardware_Id_String</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.History_Driver_State()</signature>
                        <name>get_History_Driver_State</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.History_Driver_Type()</signature>
                        <name>get_History_Driver_Type</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Enable_Export</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Installed_By_Driver_Easy</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Rollback_Error</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Rolled_Back</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lastest_Update</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Location_Of_Reg</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Old_Version</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.history_detail_driver()</signature>
                        <name>get_Previous_Driver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Section_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Updated_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Updated_Date_Time</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.driver_for_history(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>get_instanct</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.driver_for_history(System.Xml.Linq.XElement)</signature>
                        <name>get_instanct</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>optimize_hardware_ids</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Can_Rollback</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Class_Guid</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Compatible_Id_List</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Compatible_Id_String</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.history_detail_driver)</signature>
                        <name>set_Current_Driver</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Current_Version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Driver_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Driver_Provider</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Driver_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Execution_Path</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Hardware_Id_List</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hardware_Id_String</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.History_Driver_State)</signature>
                        <name>set_History_Driver_State</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.History_Driver_Type)</signature>
                        <name>set_History_Driver_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Enable_Export</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Installed_By_Driver_Easy</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Rollback_Error</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Rolled_Back</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lastest_Update</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Location_Of_Reg</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Old_Version</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.history_detail_driver)</signature>
                        <name>set_Previous_Driver</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Section_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Updated_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Updated_Date_Time</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(System.Xml.Linq.XElement)</signature>
                        <name>transform_hardware_id_list</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Class_Guid&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Compatible_Id_List&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Compatible_Id_String&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Current_Version&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Driver_Name&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Driver_Provider&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Driver_Type&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Execution_Path&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Hardware_Id_List&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hardware_Id_String&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_State</signature>
                        <name>&lt;History_Driver_State&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.History_Driver_Type</signature>
                        <name>&lt;History_Driver_Type&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Id&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Lastest_Update&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Location_Of_Reg&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Old_Version&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Section_Name&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Updated_Date&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Updated_Date_Time&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>SPECIAL_SYMBAL_ARRAY</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>can_rollback</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.history_detail_driver</signature>
                        <name>current_driver</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_enable_export</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_installed_by_driver_easy</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_rollback_error</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_rolled_back</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.history_detail_driver</signature>
                        <name>previous_driver</name>
                        <newname>u</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Can_Rollback</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Class_Guid</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>Compatible_Id_List</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Compatible_Id_String</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.history_detail_driver()</signature>
                        <name>Current_Driver</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Current_Version</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Driver_Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Driver_Provider</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Driver_Type</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Execution_Path</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>Hardware_Id_List</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Hardware_Id_String</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.History_Driver_State()</signature>
                        <name>History_Driver_State</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.History_Driver_Type()</signature>
                        <name>History_Driver_Type</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Id</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Enable_Export</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Installed_By_Driver_Easy</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Rollback_Error</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Rolled_Back</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Lastest_Update</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Location_Of_Reg</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Old_Version</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.history_detail_driver()</signature>
                        <name>Previous_Driver</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Section_Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Updated_Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Updated_Date_Time</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.history_detail_driver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Extension_Id</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Provider</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Extension_Id</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Provider</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>date</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>extension_id</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>provider</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Extension_Id</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Provider</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.history_driver_item_data_selector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.DataTemplate(object, System.Windows.DependencyObject)</signature>
                        <name>SelectTemplate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Models.update_driver_item_data_selector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.DataTemplate(object, System.Windows.DependencyObject)</signature>
                        <name>SelectTemplate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Program</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Properties.Resources</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassGuidMap</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.IO.UnmanagedMemoryStream()</signature>
                        <name>get_Update_Complete</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Properties.Settings</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.RestartHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>ParseArgs</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Device_Instance_Path</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverBackupSelected</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDriverBackup</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDriverInstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDriverRestore</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDriverUninstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsHardwareInfo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInstallVersionDriver</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRestart</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRollback</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRollbackInHistory</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsScheduleAction</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsScheduleAutoScan</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsTheFreeFirst</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Open_Activate_Dialog</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Open_Feedback</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Uninstall_Background</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_ItemArray</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Uninstall_Device_Desc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Uninstall_Device_Path</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Uninstall_Number</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Updated_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version_Driver_Desc</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Version_Driver_Index</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>get_Version_Driver_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Device_Instance_Path</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverBackupSelected</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDriverBackup</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDriverInstall</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDriverRestore</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDriverUninstall</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsHardwareInfo</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInstallVersionDriver</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRestart</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRollback</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRollbackInHistory</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsScheduleAction</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsScheduleAutoScan</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsTheFreeFirst</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Open_Activate_Dialog</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Open_Feedback</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Uninstall_Background</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>set_ItemArray</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Uninstall_Device_Desc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Uninstall_Device_Path</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Uninstall_Number</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Updated_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version_Driver_Desc</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Version_Driver_Index</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.All_Version_Drivers_Type)</signature>
                        <name>set_Version_Driver_Type</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DriverBackupSelected&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDriverBackup&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDriverInstall&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDriverRestore&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDriverUninstall&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsHardwareInfo&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsInstallVersionDriver&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRollback&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRollbackInHistory&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsScheduleAction&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isRestart</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isScheduleAutoScan</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isTheFreeFirst</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_open_activate_dialog</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_open_feedback</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_uninstall_background</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>item</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>itemArray</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uninstall_device_desc</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>uninstall_device_path</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>uninstall_number</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version_driver_desc</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>version_driver_index</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>version_driver_type</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Device_Instance_Path</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverBackupSelected</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDriverBackup</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDriverInstall</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDriverRestore</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDriverUninstall</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsHardwareInfo</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInstallVersionDriver</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRestart</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRollback</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRollbackInHistory</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsScheduleAction</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsScheduleAutoScan</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsTheFreeFirst</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Open_Activate_Dialog</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Open_Feedback</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Uninstall_Background</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>int32[]()</signature>
                        <name>ItemArray</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Uninstall_Device_Desc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Uninstall_Device_Path</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Uninstall_Number</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Updated_Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version_Driver_Desc</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Version_Driver_Index</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>Version_Driver_Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.RestartHelper/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>&lt;ParseArgs&gt;b__104_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.RestartHelper/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,int32&gt;</signature>
                        <name>&lt;&gt;9__104_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.BuildDownloadListHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>GetDeviceDescFromDriverFile</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Services.DownloadLists()</signature>
                        <name>GetDownloadListFromLocal</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.DownloadLists</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_CompletedDriverList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_IgnoreDriverlist</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_MissDriverList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_NewDriverList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_UnplugedDriverList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>set_CompletedDriverList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>set_IgnoreDriverlist</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>set_MissDriverList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>set_NewDriverList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>set_UnplugedDriverList</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>&lt;CompletedDriverList&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>&lt;IgnoreDriverlist&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>&lt;MissDriverList&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>&lt;NewDriverList&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>&lt;UnplugedDriverList&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>CompletedDriverList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>IgnoreDriverlist</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>MissDriverList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>NewDriverList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>UnplugedDriverList</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.GetYourLicenseHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OpenRegisterSite2</name>
                    </method>
                    <method>
                        <signature>System.Text.StringBuilder(Easeware.Driver.Core.Register.PartnerConfig)</signature>
                        <name>regGetBuyURL</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.Register.RegisterHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.DialogWindow)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, DriverEasyWPF.Views.CertifyLicenseResultWindow)</signature>
                        <name>ActivateLicense</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ActivateLicense</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.CertifyLicenseResultWindow)</signature>
                        <name>ActivateLicense</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>ActivateLicense</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ActivateLicense</name>
                    </method>
                    <method>
                        <signature>void(string, DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>ActivateLicense</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>BgActivateLicenseForMain_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>BgActivateLicenseForMain_RunWorkerCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>BgActivateLicense_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>BgActivateLicense_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SendInfo</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SendInfoCertify</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SendInfoSingle</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SuccessAndClose</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.CertifyLicenseResultWindow)</signature>
                        <name>SuccessAndClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>SuccessAndClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDownloadServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.CertifyLicenseResultWindow)</signature>
                        <name>UpdateDownloadServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>UpdateDownloadServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitingCompleted</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.CertifyLicenseResultWindow)</signature>
                        <name>WaitingCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>WaitingCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>close_new_activate_window</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ActivateSuccess</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.activate_window()</signature>
                        <name>get_Activate_Window</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.DialogWindow()</signature>
                        <name>get_DialogWindow</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Open_At_Certify</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Open_At_Scan_Page</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKey</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.single_activate_window()</signature>
                        <name>get_Single_Activate_Window</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.WaitingWindowHelper()</signature>
                        <name>get_WaitingHelper</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.WaitingWindow()</signature>
                        <name>get_WaitingWindow</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.DetectDeviceFinishEventArgs)</signature>
                        <name>scanManager_DetectDeviceFinished</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs)</signature>
                        <name>scanManager_ScanCompeleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs, DriverEasyWPF.Views.CertifyLicenseResultWindow)</signature>
                        <name>scanManager_ScanCompeleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs, DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>scanManager_ScanCompeleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ActivateSuccess</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.activate_window)</signature>
                        <name>set_Activate_Window</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.DialogWindow)</signature>
                        <name>set_DialogWindow</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Open_At_Certify</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Open_At_Scan_Page</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseKey</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.single_activate_window)</signature>
                        <name>set_Single_Activate_Window</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.WaitingWindowHelper)</signature>
                        <name>set_WaitingHelper</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.WaitingWindow)</signature>
                        <name>set_WaitingWindow</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ActivateSuccess&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.activate_window</signature>
                        <name>&lt;Activate_Window&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DialogWindow</signature>
                        <name>&lt;DialogWindow&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LicenseKey&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;Main_Window&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.single_activate_window</signature>
                        <name>&lt;Single_Activate_Window&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.WaitingWindowHelper</signature>
                        <name>&lt;WaitingHelper&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>&lt;WaitingWindow&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxRetryCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RegisterServerUrl</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ScanServerUrl</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isActivating</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>_language</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.CertifyResult</signature>
                        <name>certResult</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_open_at_certify</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_open_at_scan_page</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanResult</signature>
                        <name>scanResult</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ActivateSuccess</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.activate_window()</signature>
                        <name>Activate_Window</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.DialogWindow()</signature>
                        <name>DialogWindow</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Open_At_Certify</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Open_At_Scan_Page</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseKey</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.single_activate_window()</signature>
                        <name>Single_Activate_Window</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Utils.WaitingWindowHelper()</signature>
                        <name>WaitingHelper</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.WaitingWindow()</signature>
                        <name>WaitingWindow</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.Register.RegisterHandler/&lt;&gt;c__DisplayClass59_0</name>
                <newname>DriverEasyWPF.Services.Register.RegisterHandler/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs)</signature>
                        <name>&lt;UpdateDownloadServer&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Services.Register.RegisterHandler</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.single_activate_window</signature>
                        <name>single_activate_window</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.Register.RegisterHandler/&lt;&gt;c__DisplayClass66_0</name>
                <newname>DriverEasyWPF.Services.Register.RegisterHandler/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs)</signature>
                        <name>&lt;UpdateDownloadServer&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Services.Register.RegisterHandler</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CertifyLicenseResultWindow</signature>
                        <name>certify_result_window</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.Register.RegisterHandler/RegisterResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.RestorePoint.RestorePointHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CreateRestorePointCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>createRestorePointWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>createRestorePointWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CreateRestorePointCompleted</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CreateRestorePointCompleted</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>createRestorePointWorker</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CreateRestorePointCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.Services.ScanHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>GetAllLocalDeviceList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>GetTheDeviceWithNewDriver</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.ScanInfoDetail()</signature>
                        <name>ShowLastScanInfo</name>
                    </method>
                    <method>
                        <signature>string(string, DriverEasyWPF.Models.ScanInfoDetail)</signature>
                        <name>TranslateLastScanTime</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.ScanHandler/&lt;&gt;c</name>
                <newname>DriverEasyWPF.Services.ScanHandler/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;(Easeware.Driver.Core.Domain.Category)</signature>
                        <name>&lt;GetAllLocalDeviceList&gt;b__2_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Services.ScanHandler/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.Category,System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;&gt;</signature>
                        <name>&lt;&gt;9__2_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Services.ScanningHandler</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel, int32, System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Scanning</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopScanning</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateDeviceDesc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ShowProgressCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>bw_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.ProgressChangedEventArgs)</signature>
                        <name>bw_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>bw_ProgressCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ShowProgressCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>waitCompletedTimer_Tick</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_SCAN_DEVICE_PROGRESS</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MAX_WAIT_TIME</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MAX_WAIT_TIME_WITH_WINDOWS_UPDATE</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MIN_WAIT_TIME</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCAN_DEVICE_INTERVAL</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ShowProgressCompleted</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TOTAL_PROGRESS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WAIT_SCAN_COMPLETED_INTERVAL</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;</signature>
                        <name>_classList</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_deviceCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>_mainWindowViewModel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_scanNewDriverCompleted</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>_scanWorker</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_stepForAccessDB</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_waitAccessDBTime</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Stopwatch</signature>
                        <name>_waitTimer</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isStopScanning</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ShowProgressCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.StartUpWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>dispatcherTimer_Tick</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>initWorker_DoWork</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>initWorker_RunWorkerCompleted</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_finishedInit</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>_language</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>dispatcherTimer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.StartUpWindow</signature>
                        <name>startup_page</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.SupportLanguage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Default</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Items</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>_items</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string[]()</signature>
                        <name>Items</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.AttachedPropertyHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush(System.Windows.DependencyObject)</signature>
                        <name>GetBottomMaskBrush</name>
                    </method>
                    <method>
                        <signature>float64(System.Windows.DependencyObject)</signature>
                        <name>GetBottomMaskHeight</name>
                    </method>
                    <method>
                        <signature>string(System.Windows.DependencyObject)</signature>
                        <name>GetCheckedToolTipText</name>
                    </method>
                    <method>
                        <signature>System.Uri(System.Windows.DependencyObject)</signature>
                        <name>GetImageHoverPath</name>
                    </method>
                    <method>
                        <signature>System.Uri(System.Windows.DependencyObject)</signature>
                        <name>GetImageNormalPath</name>
                    </method>
                    <method>
                        <signature>System.Uri(System.Windows.DependencyObject)</signature>
                        <name>GetImageNotEnabledPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerable(System.Windows.DependencyObject)</signature>
                        <name>GetTopItemSource</name>
                    </method>
                    <method>
                        <signature>string(System.Windows.DependencyObject)</signature>
                        <name>GetUncheckedToolTipText</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.Media.Brush)</signature>
                        <name>SetBottomMaskBrush</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, float64)</signature>
                        <name>SetBottomMaskHeight</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, string)</signature>
                        <name>SetCheckedToolTipText</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Uri)</signature>
                        <name>SetImageHoverPath</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Uri)</signature>
                        <name>SetImageNormalPath</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Uri)</signature>
                        <name>SetImageNotEnabledPath</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Collections.IEnumerable)</signature>
                        <name>SetTopItemSource</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, string)</signature>
                        <name>SetUncheckedToolTipText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BottomMaskBrushProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BottomMaskHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CheckedToolTipTextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageHoverPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageNormalPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageNotEnabledPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TopItemSourceProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>UncheckedToolTipTextProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Bitmap</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Point(System.Windows.Point, System.Windows.Media.Visual, bool)</signature>
                        <name>ApplyVisualTransform</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Point, System.Windows.Point)</signature>
                        <name>AreClose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(float64, float64)</signature>
                        <name>AreClose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Point()</signature>
                        <name>GetPixelOffset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Matrix(System.Windows.Media.Visual)</signature>
                        <name>GetVisualTransform</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size)</signature>
                        <name>MeasureCore</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnLayoutUpdated</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.DrawingContext)</signature>
                        <name>OnRender</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnSourceChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnSourceDownloaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Media.ExceptionEventArgs)</signature>
                        <name>OnSourceFailed</name>
                    </method>
                    <method>
                        <signature>System.Windows.Point(System.Windows.Point, System.Windows.Media.Visual, bool, bool, bool&amp;)</signature>
                        <name>TryApplyVisualTransform</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;System.Windows.Media.ExceptionEventArgs&gt;)</signature>
                        <name>add_BitmapFailed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapSource()</signature>
                        <name>get_Source</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;System.Windows.Media.ExceptionEventArgs&gt;)</signature>
                        <name>remove_BitmapFailed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Imaging.BitmapSource)</signature>
                        <name>set_Source</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler`1&lt;System.Windows.Media.ExceptionEventArgs&gt;</signature>
                        <name>BitmapFailed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SourceProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.Point</signature>
                        <name>_pixelOffset</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>_sourceDownloaded</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;System.Windows.Media.ExceptionEventArgs&gt;</signature>
                        <name>_sourceFailed</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.Imaging.BitmapSource()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.BusyAdorner</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.UIElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size)</signature>
                        <name>ArrangeOverride</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FireCancel</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Visual(int32)</signature>
                        <name>GetVisualChild</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_Cancel</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VisualChildrenCount</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_Cancel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>Cancel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyChrome</signature>
                        <name>chrome</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>VisualChildrenCount</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>Cancel</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.Utils.BusyChrome</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnAllowCancelPropertyChangedCallback</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnApplyTemplate</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cancelButton_Click</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowCancel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowCancel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AllowCancelProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowCancel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.BusyDecorator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;ShowAdorner&gt;b__5_0</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ControlBusyDecorator_Loaded</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideAdorner</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnIsBusyPropertyChangedCallback</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowAdorner</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_Cancel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsBusy</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_Cancel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsBusy</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>Cancel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsBusyProperty</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyAdorner</signature>
                        <name>adorner</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsBusy</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>Cancel</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxDefaultButton, DriverEasyWPF.Utils.CMessageBoxImage, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>RestartShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>RestartShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>RestartShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, string, DriverEasyWPF.Utils.CMessageBoxDefaultButton, DriverEasyWPF.Utils.CMessageBoxImage, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, int32[], bool[], DriverEasyWPF.Models.RestartType, bool, bool)</signature>
                        <name>RestartShowDecoratorWithDesc</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, string, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, int32[], bool[], DriverEasyWPF.Models.RestartType, bool, bool)</signature>
                        <name>RestartShowDecoratorWithDesc</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, string, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, int32[], bool[], DriverEasyWPF.Models.RestartType, bool, bool)</signature>
                        <name>RestartShowDecoratorWithDesc</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, DriverEasyWPF.Utils.CMessageBoxButton)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, System.Windows.Window, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, System.Windows.Window, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, bool, bool)</signature>
                        <name>Show</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, DriverEasyWPF.Utils.CMessageBoxButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, DriverEasyWPF.Utils.CMessageBoxButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, DriverEasyWPF.Utils.CMessageBoxButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, int32[], bool[], bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, int32[], bool[], bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecorator</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, bool, bool)</signature>
                        <name>ShowDecoratorFC</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, bool, bool)</signature>
                        <name>ShowDecoratorWithViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult(string, string, string, DriverEasyWPF.Utils.CMessageBoxButton, DriverEasyWPF.Utils.CMessageBoxImage, DriverEasyWPF.Utils.CMessageBoxDefaultButton, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, System.Action`1&lt;object&gt;, bool, bool)</signature>
                        <name>ShowDecoratorWithViewModel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ACTION_FAILED_IMAGE_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ATTENTION_IMAGE_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONGRATULATION_IMAGE_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DONE_IMAGE_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ERROR_IMAGE_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>INFORMATION_IMAGE_PATH</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass10_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass11_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass12_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass13_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass14_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass15_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass16_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass17_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass18_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass19_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecoratorWithDesc&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecoratorWithDesc&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass20_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecoratorWithDesc&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecoratorWithDesc&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass21_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass22_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass23_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass24_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass25_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass26_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass27_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass28_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecoratorFC&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecoratorFC&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass29_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass30_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass31_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass32_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass33_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecoratorWithDesc&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;RestartShowDecoratorWithDesc&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass34_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass35_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecoratorWithViewModel&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecoratorWithViewModel&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass36_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass37_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass38_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass39_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass40_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass41_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass42_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass43_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecorator&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BaseViewModel</signature>
                        <name>baseViewModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass44_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecoratorWithViewModel&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ShowDecoratorWithViewModel&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>mainWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass6_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass7_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass8_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBox/&lt;&gt;c__DisplayClass9_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Show&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.CMessageBoxWindow</signature>
                        <name>window</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBoxButton</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>ActivateHelpOK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>ContinueAdmCancel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>ContinueAdmNo</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>ContinueNo</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>DownloadHelpOK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>HelpOK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>OK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>OKCancel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>RetryOK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>SendOK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>Upgrade</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>UpgradeCancel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>YesNo</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxButton</signature>
                        <name>YesNoCancel</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBoxDefaultButton</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>Cancel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>Continue</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>FeedbackHelp</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>Help</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>No</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>OK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>RestartNow</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>Send</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>Upgrade</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultButton</signature>
                        <name>Yes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</signature>
                        <name>ActionFailed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</signature>
                        <name>Attention</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</signature>
                        <name>Done</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</signature>
                        <name>Information</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxDefaultTitle</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBoxImage</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>ActionFailed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>Attention</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>Congratulation</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>Done</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>Information</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CMessageBoxResult</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>Cancel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>Help</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>No</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>OK</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>RestartLater</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>RestartNow</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>Retry</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>Upgrade</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>Yes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CPUID.CpuidHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseCpuidSDK</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSVendor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetBIOSVersion</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetBusFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetDisplayAdapterClock</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterCodeName</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetDisplayAdapterManufacturingProcess</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemoryBusWidth</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemorySize</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32&amp;)</signature>
                        <name>GetDisplayAdapterMemoryType</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetDisplayAdapterName</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetDisplayAdapterNumberOfPerformanceLevels</name>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>GetDisplayAdapterPerformanceLevelName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMainboardVendor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetMemoryCASLatency</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetMemoryClockFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryCommandRate</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryRASPrecharge</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryRAStoCASDelay</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemorySize</name>
                    </method>
                    <method>
                        <signature>void(int32&amp;, int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetMemorySlotsConfig</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryTRAS</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryTRC</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetMemoryType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetNorthBridgeVendor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfDisplayAdapter</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfProcessors</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetNumberOfSPDModules</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32&amp;, int32&amp;)</signature>
                        <name>GetProcessorCacheParameters</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorCodeName</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreClockFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32)</signature>
                        <name>GetProcessorCoreClockMultiplier</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreCount</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorCoreSetCount</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorCoreSetType</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorFamily</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorManufacturingProcess</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetProcessorMaxCacheLevel</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorName</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorPackage</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorRatedBusFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetProcessorSockets</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorSpecification</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetProcessorStepping</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorStockBusFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorStockClockFrequency</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorTDP</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetProcessorThreadCount</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetProcessorVoltageID</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleAMPProfileInfos</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleDRAMManufacturer</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleEPPProfileInfos</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleManufacturer</name>
                    </method>
                    <method>
                        <signature>bool(int32, unsigned int8[])</signature>
                        <name>GetSPDModuleManufacturerID</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, int32&amp;)</signature>
                        <name>GetSPDModuleManufacturingDate</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRAS</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRC</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRCD</name>
                    </method>
                    <method>
                        <signature>float32(int32)</signature>
                        <name>GetSPDModuleMinTRP</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfAMPProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfEPPProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleNumberOfProfiles</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetSPDModuleNumberOfXMPProfiles</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModulePartNumber</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleProfileInfos</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetSPDModuleRawData</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleSerialNumber</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleSize</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetSPDModuleSpecification</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSPDModuleType</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, float32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleXMPProfileCLInfos</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, float32&amp;, float32&amp;, float32&amp;, float32&amp;, float32&amp;, int32&amp;, float32&amp;)</signature>
                        <name>GetSPDModuleXMPProfileInfos</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetSPDModuleXMPProfileNumberOfCL</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeRevision</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSouthBridgeVendor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemFamily</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemManufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemProductName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemSKU</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemSerialNumber</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemUUID</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSystemVersion</name>
                    </method>
                    <method>
                        <signature>bool(float32)</signature>
                        <name>IS_F_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(float64)</signature>
                        <name>IS_F_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int16)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int8)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int16)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int32)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>IS_I_DEFINED</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>IsProcessorInstructionSetAvailable</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshInformation</name>
                    </method>
                    <method>
                        <signature>void(bool, int32&amp;, int32&amp;, string, int32&amp;)</signature>
                        <name>Use32BitCPUID</name>
                    </method>
                    <method>
                        <signature>void(bool, int32&amp;, int32&amp;, string, int32&amp;)</signature>
                        <name>Use64BitCPUID</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>CPUIDSDK</signature>
                        <name>pSDK</name>
                    </field>
                    <field>
                        <signature>CPUIDSDK_X86</signature>
                        <name>pSDK_X86</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CommonHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseApplication</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExitApplication</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAdministrator</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FrameworkElement)</signature>
                        <name>UseTheScrollViewerScrolling</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.CommonHelper/&lt;&gt;c__DisplayClass0_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseWheelEventArgs)</signature>
                        <name>&lt;UseTheScrollViewerScrolling&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.FrameworkElement</signature>
                        <name>fElement</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.AxisTransfer</name>
                <methodlist>
                    <method>
                        <signature>float64(float64, int32, float64, float64)</signature>
                        <name>CalculateValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Point(float64, float64)</signature>
                        <name>PolarToCartesian</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Point(float64, float64, int32)</signature>
                        <name>PolarToCartesianHexagon</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>D2R</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.CircleLoopWaiting</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>ellipse</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>rotateTransform</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>rotateTransform2</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.CircleProgressBar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_InsideStroke</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_OutsideStroke</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.PenLineCap()</signature>
                        <name>get_StrokeEndLineCap</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.PenLineCap()</signature>
                        <name>get_StrokeStartLineCap</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_StrokeThickness</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_InsideStroke</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_OutsideStroke</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.PenLineCap)</signature>
                        <name>set_StrokeEndLineCap</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.PenLineCap)</signature>
                        <name>set_StrokeStartLineCap</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_StrokeThickness</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>InsideStrokeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>OutsideStrokeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StrokeEndLineCapProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StrokeStartLineCapProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StrokeThicknessProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>InsideStroke</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>OutsideStroke</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.PenLineCap()</signature>
                        <name>StrokeEndLineCap</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.PenLineCap()</signature>
                        <name>StrokeStartLineCap</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>StrokeThickness</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.CircleWhiteLoopWaiting</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>ellipse</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>rotateTransform</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>rotateTransform2</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.DownloadRadioButton</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnDoneTextChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnTextTitleChanged</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DoneText</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_DoneVisibility</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_ImageSource</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TextTitle</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DoneText</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_DoneVisibility</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_ImageSource</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TextTitle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DoneTextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DoneVisibilityProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageSourceProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextTitleProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DoneText</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>DoneVisibility</name>
                    </property>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>ImageSource</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TextTitle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareImageHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Uri(System.Windows.DependencyObject)</signature>
                        <name>GetImageHoverPath</name>
                    </method>
                    <method>
                        <signature>System.Uri(System.Windows.DependencyObject)</signature>
                        <name>GetImageNormalPath</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Uri)</signature>
                        <name>SetImageHoverPath</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Uri)</signature>
                        <name>SetImageNormalPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageHoverPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageNormalPathProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareNormalButton</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_HoverBackground</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_NormalBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_HoverBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_NormalBackground</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>HoverBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>NormalBackgroundProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>HoverBackground</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>NormalBackground</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareRun</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>ContentChangedCallback</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Content</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnHorizontalChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnVerticalChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_BottomMaskBrush</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_BottomMaskHeight</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_BottomMaskMargin</name>
                    </method>
                    <method>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>get_ButtomMaskCornerRadius</name>
                    </method>
                    <method>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>get_CornerRadius</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasBottomEmptyArea</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_ThumbMouseOverBackground</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_h_offset</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_v_offset</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_BottomMaskBrush</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_BottomMaskHeight</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_BottomMaskMargin</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.CornerRadius)</signature>
                        <name>set_ButtomMaskCornerRadius</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.CornerRadius)</signature>
                        <name>set_CornerRadius</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasBottomEmptyArea</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_ThumbMouseOverBackground</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_h_offset</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_v_offset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BottomMaskBrushProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BottomMaskHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BottomMaskMarginProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ButtomMaskCornerRadiusProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CornerRadiusProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>HasBottomEmptyProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ThumbMouseOverBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>h_offsetProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>v_offsetProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>BottomMaskBrush</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>BottomMaskHeight</name>
                    </property>
                    <property>
                        <signature>System.Windows.Thickness()</signature>
                        <name>BottomMaskMargin</name>
                    </property>
                    <property>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>ButtomMaskCornerRadius</name>
                    </property>
                    <property>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>CornerRadius</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasBottomEmptyArea</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>ThumbMouseOverBackground</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>h_offset</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>v_offset</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareToolTip</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_SecondFontSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_SecondForeground</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SecondText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_ToolTipBackground</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_ToolTipForeground</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_SecondFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_SecondForeground</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SecondText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_ToolTipBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_ToolTipForeground</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SecondFontSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SecondForegroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SecondTextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ToolTipBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ToolTipForegroundProperty</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>SecondFontSize</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>SecondForeground</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SecondText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>ToolTipBackground</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>ToolTipForeground</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareUserControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_Command</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CommandParameter</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand)</signature>
                        <name>set_Command</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_CommandParameter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandParameterProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>Command</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>CommandParameter</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EasewareViewbox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size)</signature>
                        <name>ArrangeOverride</name>
                    </method>
                    <method>
                        <signature>System.Windows.Size(System.Windows.Size)</signature>
                        <name>MeasureOverride</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>scale</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.EventBehaviour</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand(System.Windows.UIElement)</signature>
                        <name>GetMouseLeaveCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand(System.Windows.UIElement)</signature>
                        <name>GetMouseMoveCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand(System.Windows.UIElement)</signature>
                        <name>GetScrollChangedCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>MouseLeaveCommandChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>MouseMoveCommandChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>ScrollChangedCommandChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement, System.Windows.Input.ICommand)</signature>
                        <name>SetMouseLeaveCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement, DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>SetMouseMoveCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement, DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>SetScrollChangedCommand</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>element_MouseLeave</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>element_MouseMove</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.ScrollChangedEventArgs)</signature>
                        <name>element_ScrollChanged</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MouseLeaveCommandProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MouseMoveCommandProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ScrollChangedCommandProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.FocusButton</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>FocusButton_MouseEnter</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ContentMaxHeight</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ContentMaxWidth</name>
                    </method>
                    <method>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>get_CornerRadius</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_DisabledBackground</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Color()</signature>
                        <name>get_EffectColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsClicked</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInTop</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_MouseOverBackground</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ScaleFontSize</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ContentMaxHeight</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ContentMaxWidth</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.CornerRadius)</signature>
                        <name>set_CornerRadius</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_DisabledBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Color)</signature>
                        <name>set_EffectColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsClicked</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInTop</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_MouseOverBackground</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ScaleFontSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentMaxHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentMaxWidthProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CornerRadiusProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DisabledBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EffectColorProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsClickedProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsInTopProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MouseOverBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ScaleFontSizeProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>ContentMaxHeight</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>ContentMaxWidth</name>
                    </property>
                    <property>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>CornerRadius</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>DisabledBackground</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Color()</signature>
                        <name>EffectColor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsClicked</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInTop</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>MouseOverBackground</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>ScaleFontSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ControlName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ControlName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ControlNameProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ControlName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_CheckBoxFill</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_CheckBoxMarkStroke</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_CheckBoxStroke</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_TextMargin</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_CheckBoxFill</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_CheckBoxMarkStroke</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_CheckBoxStroke</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_TextMargin</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CheckBoxFillProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CheckBoxMarkStrokeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CheckBoxStrokeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextMarginProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>CheckBoxFill</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>CheckBoxMarkStroke</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>CheckBoxStroke</name>
                    </property>
                    <property>
                        <signature>System.Windows.Thickness()</signature>
                        <name>TextMargin</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ComboBoxGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_PopupBorderBackground</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_PopupBorderBrush</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_PopupBorderBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_PopupBorderBrush</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PopupBorderBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PopupBorderBrushProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>PopupBorderBackground</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>PopupBorderBrush</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.GoogleAnalyticsHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>save_ga_info_log</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>send_ga_action</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventArgs)</signature>
                        <name>send_ga_screen</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventArgs)</signature>
                        <name>send_ga_screen_for_tabitem</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>COMMON_CONTROL_FLAG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MAIN_PAGE_NAME</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HeaderTitleDescBorder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ISendGAble</name>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.MenuButton</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_ImageHoverPath</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_ImageNormalPath</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_ImageHoverPath</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_ImageNormalPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageHoverPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageNormalPathProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>ImageHoverPath</name>
                    </property>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>ImageNormalPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.MenuItemGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.RadioButtonGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_ContentMargin</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ContentMaxWidth</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EllipseHeight</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_EllipseNormalStroke</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EllipseStrokeThickness</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_EllipseWidth</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_ContentMargin</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ContentMaxWidth</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EllipseHeight</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_EllipseNormalStroke</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EllipseStrokeThickness</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_EllipseWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentMarginProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentMaxWidthProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EllipseHeightProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EllipseNormalStrokeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EllipseStrokeThicknessProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>EllipseWidthProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Thickness()</signature>
                        <name>ContentMargin</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>ContentMaxWidth</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>EllipseHeight</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>EllipseNormalStroke</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>EllipseStrokeThickness</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>EllipseWidth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.RepeatButtonGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.StackPanelScrollViewTop</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.TabItemGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventArgs)</signature>
                        <name>OnSelected</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ToggleButtonGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.WindowGA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CloseWindow</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>MinWindow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RaisePropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_Close_Clicked</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_CloseButtonVisibility</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CloseCommand</name>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_Command</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CommandParameter</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_MinButtonVisibility</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_MinCommand</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_SingleCloseButtonVisibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>get_WindowBackground</name>
                    </method>
                    <method>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>get_WindowCornerRadius</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_WindowShadowMargin</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_Close_Clicked</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_CloseButtonVisibility</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CloseCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand)</signature>
                        <name>set_Command</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_CommandParameter</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_MinButtonVisibility</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_MinCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_SingleCloseButtonVisibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Brush)</signature>
                        <name>set_WindowBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.CornerRadius)</signature>
                        <name>set_WindowCornerRadius</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_WindowShadowMargin</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>show_dialog_with_ga</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>show_with_ga</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CloseButtonVisibilityProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CloseCommandProperty</name>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>Close_Clicked</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandParameterProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CommandProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MinButtonVisibilityProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MinCommandProperty</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SingleCloseButtonVisibilityProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>WindowBackgroundProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>WindowCornerRadiusProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>WindowShadowMarginProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>CloseButtonVisibility</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CloseCommand</name>
                    </property>
                    <property>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>Command</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>CommandParameter</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>MinButtonVisibility</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>MinCommand</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>SingleCloseButtonVisibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Brush()</signature>
                        <name>WindowBackground</name>
                    </property>
                    <property>
                        <signature>System.Windows.CornerRadius()</signature>
                        <name>WindowCornerRadius</name>
                    </property>
                    <property>
                        <signature>System.Windows.Thickness()</signature>
                        <name>WindowShadowMargin</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>Close_Clicked</name>
                    </event>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.ItemsControlWithMinRows</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.IEnumerable, System.Collections.IEnumerable)</signature>
                        <name>OnItemsSourceChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnMinRowsShowCountChanged</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinRowsShowCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinRowsShowCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MinRowsShowCountProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>MinRowsShowCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.NotifyWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>NotifyWindow_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HideCloseButton</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_TitleFontSize</name>
                    </method>
                    <method>
                        <signature>System.Windows.FontWeight()</signature>
                        <name>get_TitleFontWeight</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HideCloseButton</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_TitleFontSize</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.FontWeight)</signature>
                        <name>set_TitleFontWeight</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>HideCloseButtonProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TitleFontSizeProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TitleFontWeightProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>HideCloseButton</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>TitleFontSize</name>
                    </property>
                    <property>
                        <signature>System.Windows.FontWeight()</signature>
                        <name>TitleFontWeight</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnDoneTextChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnTextTitleChanged</name>
                    </method>
                    <method>
                        <signature>System.Windows.Thickness()</signature>
                        <name>get_ContentMargin</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DoneText</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_DoneVisibility</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_ImageSource</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDoneTextUpper</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsTextTitleUpper</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TextTitle</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Thickness)</signature>
                        <name>set_ContentMargin</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DoneText</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_DoneVisibility</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_ImageSource</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDoneTextUpper</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsTextTitleUpper</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TextTitle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentMarginProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DoneTextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DoneVisibilityProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageSourceProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsDoneTextUpperProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsTextTitleUpperProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TextTitleProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Thickness()</signature>
                        <name>ContentMargin</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DoneText</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>DoneVisibility</name>
                    </property>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>ImageSource</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDoneTextUpper</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsTextTitleUpper</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TextTitle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.PieSection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>GeometryGenerator</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_AngleMax</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_AngleMin</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>get_DefiningGeometry</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_RadiusMax</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_RadiusMin</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_AngleMax</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_AngleMin</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_RadiusMax</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_RadiusMin</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AngleMaxProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AngleMinProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>RadiusMaxProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>RadiusMinProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>AngleMax</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>AngleMin</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>DefiningGeometry</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>RadiusMax</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>RadiusMin</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.PieTick</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>GeometryGenerator</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Step</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Step</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StepProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Step</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.RadioMenuItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.Controllers.RadioMenuItem)</signature>
                        <name>&lt;set_unique_checked&gt;b__3_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnClick</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnClick2</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RaiseClickEvent</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowClickAgain</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem()</signature>
                        <name>get_CheckedChildMenuItem</name>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.Menu()</signature>
                        <name>get_ChildMenu</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasChildMenu</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_ImageHoverPath</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_ImageNormalPath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCancelClick</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MenuName</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem()</signature>
                        <name>get_PreviousMenuItem</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleText</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowClickAgain</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.Controllers.RadioMenuItem)</signature>
                        <name>set_CheckedChildMenuItem</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.Menu)</signature>
                        <name>set_ChildMenu</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasChildMenu</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_ImageHoverPath</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_ImageNormalPath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCancelClick</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MenuName</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.Controllers.RadioMenuItem)</signature>
                        <name>set_PreviousMenuItem</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleText</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_unique_checked</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AllowClickAgainProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CheckedChildMenuItemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ChildMenuProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>HasChildMenuProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageHoverPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ImageNormalPathProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsCancelClickProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>MenuNameProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PreviousMenuItemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>TitleTextProperty</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowClickAgain</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem()</signature>
                        <name>CheckedChildMenuItem</name>
                    </property>
                    <property>
                        <signature>System.Windows.Controls.Menu()</signature>
                        <name>ChildMenu</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>GroupName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasChildMenu</name>
                    </property>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>ImageHoverPath</name>
                    </property>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>ImageNormalPath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCancelClick</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MenuName</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Utils.Controllers.RadioMenuItem()</signature>
                        <name>PreviousMenuItem</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TitleText</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.RotateShrinkRing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_logo</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>rt</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.ScaleTransform</signature>
                        <name>st</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.RoundedCornersPolygon</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Point, System.Nullable`1&lt;System.Windows.Point&gt;, System.Nullable`1&lt;System.Windows.Point&gt;)</signature>
                        <name>AddPointToPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.PathFigure)</signature>
                        <name>CloseFigure</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.PathFigure, System.Windows.Point, System.Windows.Point, System.Windows.Point, float64, bool)</signature>
                        <name>ConnectLinePoints</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Point(System.Windows.Point, System.Windows.Point, float64, bool)</signature>
                        <name>GetPointAtDistance</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Point(System.Windows.Point, System.Windows.Point, float64, bool)</signature>
                        <name>GetPointAtDistancePercent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnArcRoundnessChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Points_Changed</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RedrawShape</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ArcRoundness</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ArcRoundness_old</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>get_DefiningGeometry</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsClosed</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.PointCollection()</signature>
                        <name>get_Points</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseRoundnessPercentage</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ArcRoundness</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ArcRoundness_old</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsClosed</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.PointCollection)</signature>
                        <name>set_Points</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseRoundnessPercentage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ArcRoundnessProperty</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_arcRoundness</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isClosed</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Path</signature>
                        <name>_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.PointCollection</signature>
                        <name>_points</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_useRoundnessPercentage</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>ArcRoundness</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>ArcRoundness_old</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Geometry()</signature>
                        <name>DefiningGeometry</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsClosed</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.PointCollection()</signature>
                        <name>Points</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseRoundnessPercentage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.TopParentGrid</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.TopParentStackPanel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Controllers.textblock_behavior</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>DynamicTextChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>FormattedTextChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Windows.DependencyObject)</signature>
                        <name>GetDynamicText</name>
                    </method>
                    <method>
                        <signature>string(System.Windows.DependencyObject)</signature>
                        <name>GetFormattedText</name>
                    </method>
                    <method>
                        <signature>bool(string, string&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetTokenInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, string)</signature>
                        <name>SetDynamicText</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, string)</signature>
                        <name>SetFormattedText</name>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>SplitIntoSections</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Documents.Inline(string)</signature>
                        <name>Traverse</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>DynamicTextProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>FormattedTextProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.DNSCheckUtil</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckDomain</name>
                    </method>
                    <method>
                        <signature>int32(string, unsigned int16, unsigned int32, native int, native int&amp;, native int)</signature>
                        <name>DnsQuery</name>
                    </method>
                    <method>
                        <signature>void(native int, int32)</signature>
                        <name>DnsRecordListFree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>DNS_QUERY_STANDARD</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DNS_TYPE_MX</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.DNSCheckUtil/DnsRecordMx</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Pad</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwReserved</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwTtl</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pNameExchange</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pNext</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>wDataLength</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>wPreference</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>wType</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.DeUrlManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ACTIVATE_HELP_FIX_SCAN_ERROR_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BUY_GUIDEBOOK_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BUY_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DE_SHOP_URL_DEBUG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_EASY_CERTIFIED_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_EASY_FACEBOOK_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_EASY_SETUP_FILE_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_EASY_SETUP_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_EASY_UNINSTALL_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_EASY_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EULA_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FEEDBACK_HOST_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FEEDBACK_LOCAL_HOST_DEBUG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FEEDBACK_SERVICE_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FEEDBACK_TEST_HOST_DEBUG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HELP_FIX_DOWNLOAD_ERROR_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HELP_FIX_FEEDBACK_SERVER_ERROR_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HELP_FIX_SCAN_ERROR_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HELP_IMPROVE_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HELP_OFFLINE_SCAN_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HELP_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MANUALLY_INSTALL_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>POST_UPDATE_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PRIVACY_POLICY_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REGISTER_SERVER_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REPORT_BUG_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>REPORT_MISS_DETECTED_DRIVERS_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESEND_LICENSE_KEY_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SCAN_ALL_VERSION_SERVER_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SCAN_NETWORK_SERVER_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SCAN_SERVER_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SCORE_PHP_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SERVICE_CONFIG_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEVEN_ZIP_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SHARE_PHP_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SPEED_LIMIT_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>START_SEVEN_DAY_TRIAL_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SYSTEM_RESTORE_CONFIGURATION_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UPLOAD_SETUPAPI_LOG_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VERSION_HISTORY_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VERSION_SERVER_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VERSION_SERVER_URL_DEBUG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WRITE_REVIEW_FREE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WRITE_REVIEW_PRO</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.DropBehavior</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand(System.Windows.UIElement)</signature>
                        <name>GetPreviewDropCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>PreviewDropCommandPropertyChangedCallBack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement, System.Windows.Input.ICommand)</signature>
                        <name>SetPreviewDropCommand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>PreviewDropCommandProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.DropBehavior/&lt;&gt;c__DisplayClass3_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DragEventArgs)</signature>
                        <name>&lt;PreviewDropCommandPropertyChangedCallBack&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.UIElement</signature>
                        <name>uiElement</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Functions</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs, DriverEasyWPF.Models.ItemPosition)</signature>
                        <name>DriverViewModelList_CollectionChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs, DriverEasyWPF.Models.ItemPosition)</signature>
                        <name>DriverViewModelList_CollectionChanged_UpdateList</name>
                    </method>
                    <method>
                        <signature>string(float64)</signature>
                        <name>FileSizeUnit</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int64)</signature>
                        <name>SwapEndianness</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs, DriverEasyWPF.Models.ItemPosition, bool, bool)</signature>
                        <name>do_with_collection_changed</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs, DriverEasyWPF.Models.ItemPosition, bool, bool)</signature>
                        <name>do_with_collection_changed_update_list</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_copyright_year</name>
                    </method>
                    <method>
                        <signature>System.DateTime(bool)</signature>
                        <name>get_network_time</name>
                    </method>
                    <method>
                        <signature>string(string, string, string, System.Collections.Specialized.NameValueCollection, int32)</signature>
                        <name>http_post_multpart_request</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, DriverEasyWPF.Models.Driver_View_Model_Type, DriverEasyWPF.Models.ItemPosition)</signature>
                        <name>set_first_item</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>zip_log_file</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Functions/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;do_with_collection_changed&gt;b__1_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>&lt;http_post_multpart_request&gt;b__9_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.Functions/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,unsigned int8[]&gt;</signature>
                        <name>&lt;&gt;9__9_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Functions/&lt;&gt;c__DisplayClass4_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;set_first_item&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.Functions/&lt;&gt;c__DisplayClass9_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;http_post_multpart_request&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NameValueCollection</signature>
                        <name>stringDict</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>stringKeyHeader</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GetChildrenControls</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle(System.Windows.DependencyObject, string)</signature>
                        <name>FindButtonByControlName</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Windows.DependencyObject, string)</signature>
                        <name>FindChildControlByName</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;!!0&gt;(System.Windows.DependencyObject)</signature>
                        <name>FindVisualChild</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GetUacShield</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Imaging.BitmapSource()</signature>
                        <name>GetShieldpath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.Utils.GetUacShield/SHSTOCKICONID, DriverEasyWPF.Utils.GetUacShield/SHGSI, DriverEasyWPF.Utils.GetUacShield/SHSTOCKICONINFO&amp;)</signature>
                        <name>SHGetStockIconInfo</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GetUacShield/SHGSI</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.GetUacShield/SHGSI</signature>
                        <name>SHGSI_ICON</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.GetUacShield/SHGSI</signature>
                        <name>SHGSI_SMALLICON</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GetUacShield/SHSTOCKICONID</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.GetUacShield/SHSTOCKICONID</signature>
                        <name>SIID_SHIELD</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GetUacShield/SHSTOCKICONINFO</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hIcon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iIcon</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iSysIconIndex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szPath</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifAnimation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.MemoryStream)</signature>
                        <name>CreateGifAnimation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextFrame</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>NextFrame</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32)</signature>
                        <name>ParseBlock</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32)</signature>
                        <name>ParseExtensionBlock</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>ParseGif</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32)</signature>
                        <name>ParseGifDataStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32)</signature>
                        <name>ParseGraphicBlock</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32)</signature>
                        <name>ParseGraphicControlExtension</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32)</signature>
                        <name>ParseHeader</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32)</signature>
                        <name>ParseLogicalScreen</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Canvas</signature>
                        <name>canvas</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentLoop</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.GifAnimation/GifFrame</signature>
                        <name>currentParseGifFrame</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frameCounter</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Utils.GifAnimation/GifFrame&gt;</signature>
                        <name>frameList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>frameTimer</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>logicalHeight</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>logicalWidth</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>numberOfFrames</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>numberOfLoops</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifAnimation/GifFrame</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>delayTime</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>disposalMethod</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>left</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>top</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifImage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateFromSourceString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.MemoryStream)</signature>
                        <name>CreateGifAnimation</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateNonGifAnimationImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeletePreviousImage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>GetGifStreamFromHttp</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>GetGifStreamFromPack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnSourceChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnStretchChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnStretchDirectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>RaiseImageFailedEvent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>ReadGifStreamSynch</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>WebReadCallback</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>WebRequestError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.MemoryStream)</signature>
                        <name>WebRequestFinished</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>WebResponseCallback</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.GifImage/ExceptionRoutedEventHandler)</signature>
                        <name>add_ImageFailed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceGifAnim</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.Stretch()</signature>
                        <name>get_Stretch</name>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.StretchDirection()</signature>
                        <name>get_StretchDirection</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.ExceptionRoutedEventArgs)</signature>
                        <name>image_ImageFailed</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.GifImage/ExceptionRoutedEventHandler)</signature>
                        <name>remove_ImageFailed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceGifAnim</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.Stretch)</signature>
                        <name>set_Stretch</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.StretchDirection)</signature>
                        <name>set_StretchDirection</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ForceGifAnimProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEvent</signature>
                        <name>ImageFailedEvent</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SourceProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StretchDirectionProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>StretchProperty</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.GifAnimation</signature>
                        <name>gifAnimation</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Image</signature>
                        <name>image</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ForceGifAnim</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.Stretch()</signature>
                        <name>Stretch</name>
                    </property>
                    <property>
                        <signature>System.Windows.Controls.StretchDirection()</signature>
                        <name>StretchDirection</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>DriverEasyWPF.Utils.GifImage/ExceptionRoutedEventHandler</signature>
                        <name>ImageFailed</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifImage/ExceptionRoutedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, DriverEasyWPF.Utils.GifImageExceptionRoutedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, DriverEasyWPF.Utils.GifImageExceptionRoutedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifImage/WebRequestErrorDelegate</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.Exception, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifImage/WebRequestFinishedDelegate</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.IO.MemoryStream, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IO.MemoryStream)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.GifImageExceptionRoutedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.RoutedEvent, object)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Exception</signature>
                        <name>ErrorException</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.IntegerDecreaseComparer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.ItemsControlHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Windows.DependencyObject)</signature>
                        <name>GetAutoSizeItemCount</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnAutoSizeItemCountChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, int32)</signature>
                        <name>SetAutoSizeItemCount</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ItemsControl)</signature>
                        <name>UpdateSize</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AutoSizeItemCountProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.ItemsControlHelper/&lt;&gt;c__DisplayClass3_0</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.ScrollChangedEventArgs)</signature>
                        <name>&lt;OnAutoSizeItemCountChanged&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.Primitives.ItemsChangedEventArgs)</signature>
                        <name>&lt;OnAutoSizeItemCountChanged&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>item_control</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.LicenseTextBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AppendSubtractByLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckWhetherDelete</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Do</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Do2</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Do3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>EqualsWithSpChar</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>EqualsWithoutSpChar</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>IgnoreInputSubtract</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitData</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.TextChangedEventArgs)</signature>
                        <name>OnTextChanged</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>RegexFormat</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetCaretIndex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BasicLength</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowSpCharFirst</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SpChar</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SumCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BasicLength</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowSpCharFirst</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SpChar</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SumCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;BasicLength&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowSpCharFirst&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SpChar&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SumCount&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDelete</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BasicLength</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowSpCharFirst</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SpChar</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SumCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.LogicUtil</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetFormatTime</name>
                    </method>
                    <method>
                        <signature>System.DateTime(string)</signature>
                        <name>GetGlobalDateTime</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>FORMAT_PATTERN</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.MaskedTextBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteSelectedText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDefaultText</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>InputMask_Changed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(char, DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags&amp;)</signature>
                        <name>IsPlaceholderChar</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsTextValid</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DataObjectPastingEventArgs)</signature>
                        <name>MaskedTextBox_Paste</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MoveBack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MoveForward</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnInitialized</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.KeyEventArgs)</signature>
                        <name>OnPreviewKeyDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.TextCompositionEventArgs)</signature>
                        <name>OnPreviewTextInput</name>
                    </method>
                    <method>
                        <signature>object(System.Windows.DependencyObject, object)</signature>
                        <name>Text_CoerceValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateInputMask</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(char, DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags)</signature>
                        <name>ValidateCharInternal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(char, DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags)</signature>
                        <name>ValidateInputChar</name>
                    </method>
                    <method>
                        <signature>bool(string, string&amp;)</signature>
                        <name>ValidateTextInternal</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InputMask</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUpper</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InputMask</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUpper</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsUpper&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>InputMaskProperty</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_caretIndex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Utils.MaskedTextBox/InputMaskChar&gt;</signature>
                        <name>_maskChars</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>InputMask</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUpper</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.MaskedTextBox/InputMaskChar</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>GetDefaultChar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsLiteral</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>char()</signature>
                        <name>get_Literal</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags()</signature>
                        <name>get_ValidationFlags</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>set_Literal</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags)</signature>
                        <name>set_ValidationFlags</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>_literal</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</signature>
                        <name>_validationFlags</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>char()</signature>
                        <name>Literal</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags()</signature>
                        <name>ValidationFlags</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</signature>
                        <name>AllowAlphabet</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</signature>
                        <name>AllowAlphanumeric</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</signature>
                        <name>AllowDecimal</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</signature>
                        <name>AllowInteger</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.MaskedTextBox/InputMaskValidationFlags</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.MouseOverHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Windows.DependencyObject, object)</signature>
                        <name>CalculateIsMouseDirectlyOverItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetIsMouseDirectlyOverItem</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>OnMouseTransition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>OnUpdateOverItem</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyPropertyKey</signature>
                        <name>IsMouseDirectlyOverItemKey</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsMouseDirectlyOverItemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEvent</signature>
                        <name>UpdateOverItemEvent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>cur_element</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.StackPanelMouseEnterHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Windows.DependencyObject, object)</signature>
                        <name>CalculateIsMouseDirectlyOverItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetIsMouseDirectlyOverItem</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>OnMouseTransition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>OnUpdateOverItem</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyPropertyKey</signature>
                        <name>IsMouseDirectlyOverItemKey</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsMouseDirectlyOverItemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEvent</signature>
                        <name>UpdateOverItemEvent</name>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>cur_element</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.StringDateDecreaseComparer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.StringUtil</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string[], int32, string)</signature>
                        <name>AppendFlagToArrayItem</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string, string, string)</signature>
                        <name>ConvertStringToDictionary</name>
                    </method>
                    <method>
                        <signature>string(string, int32, string)</signature>
                        <name>CutStringWithFlag</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MergeSpace</name>
                    </method>
                    <method>
                        <signature>string[](string, string)</signature>
                        <name>SplitStringByPattern</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToPlural</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToSingular</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassFontInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontSettings()</signature>
                        <name>get_FontSettings</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>is_system_message_font_bold</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFontSettings)</signature>
                        <name>set_FontSettings</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontSettings</signature>
                        <name>&lt;FontSettings&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontSettings()</signature>
                        <name>FontSettings</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassFontSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ByteArraysToLogFonts</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetCharset</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassInit)</signature>
                        <name>LoadFontValuesFromClassInit</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadFontValuesFromFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>LoadFontValuesFromRegistry</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LogFontsToByteArrays</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassInit&amp;)</signature>
                        <name>SaveFontValuesToClassInit</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SaveFontValuesToFile</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SaveFontValuesToRegFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>SaveFontValuesToRegistry</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetCharset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_CHARSET_DEF</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_CAPTIONFONT</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>FONTSETTINGS_FONT_DEF</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_ICONFONT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_MENUFONT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_MESSAGEFONT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_SMCAPTIONFONT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSETTINGS_FONT_STATUSFONT</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baCaptionFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baCaptionFont_Orig</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baDefaultFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baDefaultFont_Orig</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baIconFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baIconFont_Orig</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baMenuFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baMenuFont_Orig</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baMessageFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baMessageFont_Orig</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baSMCaptionFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baSMCaptionFont_Orig</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baStatusFont</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_baStatusFont_Orig</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sCharset</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tCaptionFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tDefaultFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tIconFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tMenuFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tMessageFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tSMCaptionFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassLogFont</signature>
                        <name>m_tStatusFont</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassFormColors</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control)</signature>
                        <name>AddButtonPanel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control)</signature>
                        <name>AddExcludedControl</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control)</signature>
                        <name>AddExcludedControlWithSubcontrols</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;System.Windows.Forms.Control&gt;, bool, bool)</signature>
                        <name>AssignColorsToControlList</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Form)</signature>
                        <name>AssignColorsToForm</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearButtonPanels</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearCustomColors</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearExcludedControls</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFormColors&amp;)</signature>
                        <name>CopyColorsTo</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFormColors&amp;)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors()</signature>
                        <name>CreateCopy</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, System.Collections.Generic.List`1&lt;System.Windows.Forms.Control&gt;, bool)</signature>
                        <name>GetAllSubcontrols</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode()</signature>
                        <name>GetButtonMode</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType)</signature>
                        <name>GetColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType)</signature>
                        <name>GetColorDefault</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(string)</signature>
                        <name>GetCustomColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormColors</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassInit, DriverEasyWPF.Utils.SystemFont.ClassFormColors)</signature>
                        <name>LoadFromClassInit</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetColors</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetDefaultColors</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetDefaultColorsDark</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassInit&amp;)</signature>
                        <name>SaveToClassInit</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Button, System.Drawing.Color, System.Drawing.Color, DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode)</signature>
                        <name>SetButtonColors</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode)</signature>
                        <name>SetButtonMode</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType, System.Drawing.Color)</signature>
                        <name>SetColor</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType, System.Drawing.Color)</signature>
                        <name>SetColorDefault</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Drawing.Color)</signature>
                        <name>SetCustomColor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Form)</signature>
                        <name>SetDefaultColorsFromForm</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetStrictExclude</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_BUTTONFONT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_BUTTONFONT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>CFC_BUTTONMODE_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_BUTTON_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_BUTTON_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CFC_COLORCOUNT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_CONTROLFONT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_CONTROLFONT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_EDITFONT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_EDITFONT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_EDIT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_EDIT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_FORMFONT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_FORMFONT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_FORM_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_FORM_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_MENUFONT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_MENUFONT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_MENU_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_MENU_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_PANEL_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_PANEL_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_TOOLBARFONT_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_TOOLBARFONT_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_TOOLBAR_COLORDARK_DEF</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>CFC_TOOLBAR_COLOR_DEF</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bStrictExclude</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>m_slCutomColorNames</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>m_tButtonMode</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>m_taColorDefaults</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>m_taColors</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.Control&gt;</signature>
                        <name>m_tlButtonPanels</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Color&gt;</signature>
                        <name>m_tlCustomColors</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Windows.Forms.Control&gt;</signature>
                        <name>m_tlExcludedControls</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>FlatStyle</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>FlatStyleCompatibleRenderer</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>FlatStyleNoBorder</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>NoStyleBackgroundColor</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ButtonMode</signature>
                        <name>SystemStyle</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>Button</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>ButtonFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>ControlFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>Edit</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>EditFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>Form</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>FormFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>Menu</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>MenuFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>Panel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>Toolbar</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors/ColorType</signature>
                        <name>ToolbarFont</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassInit</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(bool, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddString</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>DeleteString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>EntryAddBool</name>
                    </method>
                    <method>
                        <signature>void(string, unsigned int8[])</signature>
                        <name>EntryAddByte</name>
                    </method>
                    <method>
                        <signature>void(string, float32)</signature>
                        <name>EntryAddFloat</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>EntryAddInt</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>EntryAddString</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>EntryDeleteString</name>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>EntryGetBool</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string, unsigned int8[])</signature>
                        <name>EntryGetByte</name>
                    </method>
                    <method>
                        <signature>float32(string, float32)</signature>
                        <name>EntryGetFloat</name>
                    </method>
                    <method>
                        <signature>int32(string, int32)</signature>
                        <name>EntryGetInt</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>EntryGetNextBool</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>EntryGetNextInt</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>EntryGetNextString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>EntryGetString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>EntryGetStringEmptyAllowed</name>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>EntrySetBool</name>
                    </method>
                    <method>
                        <signature>bool(string, unsigned int8[])</signature>
                        <name>EntrySetByte</name>
                    </method>
                    <method>
                        <signature>bool(string, float32)</signature>
                        <name>EntrySetFloat</name>
                    </method>
                    <method>
                        <signature>bool(string, int32)</signature>
                        <name>EntrySetInt</name>
                    </method>
                    <method>
                        <signature>bool(string, string, bool)</signature>
                        <name>EntrySetString</name>
                    </method>
                    <method>
                        <signature>string(int32, string)</signature>
                        <name>FindString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32, string, string)</signature>
                        <name>FindSubString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetCharset</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetFileType</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsEntryFound</name>
                    </method>
                    <method>
                        <signature>bool(int32, string, string&amp;)</signature>
                        <name>IsStringFound</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>LoadFromFile</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadFromString</name>
                    </method>
                    <method>
                        <signature>bool(string, bool)</signature>
                        <name>SaveToFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SaveToString</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetCharset</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileType</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>StringToByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(string, float32)</signature>
                        <name>StringToFloat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>StringToInteger</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SubEntryBegin</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SubEntryEnd</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>SubEntryGetBool</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>SubEntryGetInt</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>SubEntryGetNextBool</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>SubEntryGetNextInt</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>SubEntryGetNextString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>SubEntryGetString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CINIT_CHARSET_DEF</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CINIT_DEFAULTTYPE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CINIT_LINEFEED</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CINIT_MAX_SUBENTRIES</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CINIT_TABSPACE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CINIT_XMLHEAD</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bXMLStyle</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_iSearchPos</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_iSubEntryCount</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sCharSet</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sFileType</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sXMLData</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sXMLHead</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sXMLTail</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassLogFont</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>native int(DriverEasyWPF.Utils.SystemFont.ClassLogFontStruct)</signature>
                        <name>CreateFontIndirect</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[])</signature>
                        <name>LoadFromByteArray</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[]&amp;)</signature>
                        <name>SaveToByteArray</name>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Font&amp;, bool, string, string)</signature>
                        <name>SaveToFont</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SaveToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>LF_FACESIZE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LF_TOTALSIZE</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfCharSet</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfClipPrecision</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfEscapement</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lfFaceName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfHeight</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfItalic</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfOrientation</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfOutPrecision</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfPitchAndFamily</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfQuality</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfStrikeOut</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfUnderline</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfWeight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfWidth</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassLogFontStruct</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>LF_FACESIZE</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfCharSet</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfClipPrecision</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfEscapement</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lfFaceName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfHeight</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfItalic</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfOrientation</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfOutPrecision</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfPitchAndFamily</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfQuality</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfStrikeOut</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lfUnderline</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfWeight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lfWidth</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassOptions</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>CalcDPIValue</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>CheckCharset</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font(string, float32, System.Drawing.Font)</signature>
                        <name>CreateFont</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateInfoFile</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>FontHeightToPoints</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetDPIValue</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>InitHomeFolders</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadIniFile</name>
                    </method>
                    <method>
                        <signature>int32(float64, float64, float64)</signature>
                        <name>MulDiv</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>PoinsToFontHeight</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SaveIniFile</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>StartProcess</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ALTERNATE_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_CHARSET_DEF</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>FONTSIZER_DISABLE_INIFILES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_DPI_DEF</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_FILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_FILE_EXTENSION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_FONTPOINTS_DEF</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_FONTPOINTS_MAX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_FONTPOINTS_MIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_FONTWEIGHT_BOLD</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_FONTWEIGHT_NORMAL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO_DATETIME_FORMAT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO_INIFILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO_INSTALLDATE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO_INSTALLDIR</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO_LANGUAGEFILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INFO_VERSION</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INITIALFILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_INITIALFILE_REG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_LICENSE_FILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_LOGOUT_CMD</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_LOGOUT_DEF</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FONTSIZER_MAX_RECENT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_PATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_README_FILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_REG_EXTENSION</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_STORAGE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_STORAGE_EXEPATH</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_STORAGE_VAL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_VERSION</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_VERSION_CHECK</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FONTSIZER_VERSION_CHECK_WEBLINK</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LANGUAGE_DEFAULT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LANGUAGE_FILE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LANGUAGE_FILENAME</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LANGUAGE_INTERNAL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LANGUAGE_NAME</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bConfirmChanges</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bDeactivateRecent</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bNoIniLanguage</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bNoIniLanguageName</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bUseBuildInFont</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bUseFontSettings</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bUserDefStorage</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>m_fFontSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_iDPIValue</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_iSuccessOperation</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sAppDir</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sCharset</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sCharsetInternal</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sFontName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sHomeBase</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sIniFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sInitialFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sInitialFileReg</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sLanguageFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sLanguageName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sLanguagesFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sLicenseFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sLogoutCommand</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sPathSeparator</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>m_sReadMeFile</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>m_saArgs</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>m_saRecentFiles</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Font</signature>
                        <name>m_tFont</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontSettings</signature>
                        <name>m_tFontSettings</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors</signature>
                        <name>m_tFormColors</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFormColors</signature>
                        <name>m_tFormColorsDef</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassRegistry</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteArrayToString</name>
                    </method>
                    <method>
                        <signature>string(string, unsigned int8[])</signature>
                        <name>GetByteArrayAsRegString</name>
                    </method>
                    <method>
                        <signature>string(string, int32)</signature>
                        <name>GetIntAsRegDword</name>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string)</signature>
                        <name>GetKeypathAsString</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetStringAsRegSZ</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string, string)</signature>
                        <name>GetValueAsByteArray</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>GetValueAsByteArrayFromPath</name>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string, string, int32)</signature>
                        <name>GetValueAsInt</name>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string, string)</signature>
                        <name>GetValueAsString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetValueAsStringFromPath</name>
                    </method>
                    <method>
                        <signature>bool(Microsoft.Win32.RegistryKey&amp;, DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string)</signature>
                        <name>OpenRegKey</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string, string, unsigned int8[])</signature>
                        <name>SetValueAsByteArray</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string, string, int32)</signature>
                        <name>SetValueAsInt</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE, string, string, string)</signature>
                        <name>SetValueAsString</name>
                    </method>
                    <method>
                        <signature>bool(string, DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE&amp;, string&amp;, string&amp;)</signature>
                        <name>SplitKey</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CREG_KEYTYPE_CLASSESROOT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREG_KEYTYPE_CURRENTCONFIG</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREG_KEYTYPE_CURRENTUSER</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREG_KEYTYPE_LOCALMACHINE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREG_KEYTYPE_PERFORMANCEDATA</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREG_KEYTYPE_USERS</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREG_SEPARATOR</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</signature>
                        <name>REG_KEYTYPE_CLASSESROOT</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</signature>
                        <name>REG_KEYTYPE_CURRENTCONFIG</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</signature>
                        <name>REG_KEYTYPE_CURRENTUSER</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</signature>
                        <name>REG_KEYTYPE_LOCALMACHINE</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</signature>
                        <name>REG_KEYTYPE_PERFORMANCEDATA</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassRegistry/REG_KEYTYPE</signature>
                        <name>REG_KEYTYPE_USERS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.TextBlockUtils</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.TextBlock)</signature>
                        <name>ComputeAutoTooltip</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetAutoTooltip</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnAutoTooltipPropertyChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, bool)</signature>
                        <name>SetAutoTooltip</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.SizeChangedEventArgs)</signature>
                        <name>TextBlock_SizeChanged</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AutoTooltipProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.TextCaseHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetUppercaseText</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnUppercaseTextChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, bool)</signature>
                        <name>SetUppercaseText</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>TextBlock_Loaded</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>UppercaseTextProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.TopParentGridMouseEnterHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Windows.DependencyObject, object)</signature>
                        <name>CalculateIsMouseDirectlyOverItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetIsMouseDirectlyOverItem</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>OnMouseTransition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>OnUpdateOverItem</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyPropertyKey</signature>
                        <name>IsMouseDirectlyOverItemKey</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsMouseDirectlyOverItemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEvent</signature>
                        <name>UpdateOverItemEvent</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.TopParentGrid</signature>
                        <name>cur_element</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.TopParentStackPanelMouseEnterHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Windows.DependencyObject, object)</signature>
                        <name>CalculateIsMouseDirectlyOverItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetIsMouseDirectlyOverItem</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>OnMouseTransition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>OnUpdateOverItem</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyPropertyKey</signature>
                        <name>IsMouseDirectlyOverItemKey</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsMouseDirectlyOverItemProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEvent</signature>
                        <name>UpdateOverItemEvent</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.TopParentStackPanel</signature>
                        <name>cur_element</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.UIUtil</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Views.SettingsWindow, DriverEasyWPF.Utils.BusyDecorator, string)</signature>
                        <name>AdministratorRestart</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, string)</signature>
                        <name>AdministratorRestart</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, string, DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>AdministratorRestart</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Windows.DependencyObject)</signature>
                        <name>FindAncestor</name>
                    </method>
                    <method>
                        <signature>System.Reflection.AssemblyName()</signature>
                        <name>GetAssemblyName</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>GetEdition</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetFormatVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetFormatVersionForStartup</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProductName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSimpleFormatVersion</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OpenWebPage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PlayPrompt</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.Controllers.RadioMenuItem)</signature>
                        <name>RaiseMenuItemClickEvent</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.TabItem, System.Windows.Controls.Control)</signature>
                        <name>RaiseTabItemSelectedEvent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetAlignment</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetGlobalFontStyle</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ISendGAble(System.Windows.DependencyObject)</signature>
                        <name>find_ISendGAble_logical_parent</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ISendGAble(System.Windows.DependencyObject)</signature>
                        <name>find_ISendGAble_parent</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ISendGAble(System.Windows.DependencyObject)</signature>
                        <name>find_ISendGAble_visual_parent</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(System.Windows.DependencyObject)</signature>
                        <name>find_parent</name>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ISendGAble)</signature>
                        <name>get_ISendGAble_parent_name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_completed_full_version</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_image_path_by_guid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_install_timing_from_registry</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_user_version_info</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>is_ignore_update_version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>open_web_page_with_language</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>save_install_timing_in_registry</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>save_version_in_registry</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>PRODUCT_NAME</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.WaitingWindowHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindows</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Window, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>OpenWaitingWindows</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.Controllers.GoogleAnalytics.WindowGA, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindowsGA</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindowsThreads</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, System.Windows.WindowStartupLocation)</signature>
                        <name>OpenWaitingWindowsThreads</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>OpenWaitingWindowsThreads</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel, System.Windows.WindowStartupLocation)</signature>
                        <name>OpenWaitingWindowsThreads</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindowsThreadsGA</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator, System.Windows.WindowStartupLocation)</signature>
                        <name>OpenWaitingWindowsThreadsGA</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindowsThreadsWithoutCloseBusyr</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>OpenWaitingWindowsThreadsWithoutCloseBusyr</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindowsWithoutThreads</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>OpenWaitingWindowsWithoutThreads</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWaitingWindowsWithoutThreadsGA</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWindowsByDecorator</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window, System.Windows.Window, DriverEasyWPF.ViewModels.BaseViewModel)</signature>
                        <name>OpenWindowsByDecorator</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window, System.Windows.Window, DriverEasyWPF.Utils.BusyDecorator)</signature>
                        <name>OpenWindowsByDecoratorGA</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.DoWorkEventHandler</signature>
                        <name>DoWorkWhenWaiting</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.ProgressChangedEventHandler</signature>
                        <name>ProgressChangedWhenWaiting</name>
                    </field>
                    <field>
                        <signature>System.ComponentModel.RunWorkerCompletedEventHandler</signature>
                        <name>RunWorkCompleted</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.WebReadState</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>buffer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>memoryStream</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>readStream</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Net.WebRequest</signature>
                        <name>webRequest</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.download_header_progressbar_smoother</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(System.Windows.DependencyObject)</signature>
                        <name>GetSmoothValue</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, float64)</signature>
                        <name>SetSmoothValue</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>changing</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SmoothValueProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Utils.progressbar_smoother</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(System.Windows.DependencyObject)</signature>
                        <name>GetSmoothValue</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, float64)</signature>
                        <name>SetSmoothValue</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>changing</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>SmoothValueProperty</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.AboutWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_Click7zPageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickEulaPageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickFaceBookLikeCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickFreeVersionCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHomePageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPrivacyPolicyPageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRenewCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUninstallPageCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright_Year</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullVersion</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_Main_VM</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_Click7zPageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickEulaPageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickFaceBookLikeCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickFreeVersionCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHomePageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickPrivacyPolicyPageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRenewCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUninstallPageCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright_Year</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullVersion</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_Main_VM</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;Click7zPageCommand&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickEulaPageCommand&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickFaceBookLikeCommand&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickFreeVersionCommand&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHomePageCommand&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickPrivacyPolicyPageCommand&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRenewCommand&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSpeedLimitedCommand&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUninstallPageCommand&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>copyright_year</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fullVersion</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>license</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>mainVM</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>Click7zPageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickEulaPageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickFaceBookLikeCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickFreeVersionCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHomePageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPrivacyPolicyPageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRenewCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSpeedLimitedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUninstallPageCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Copyright_Year</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullVersion</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>Main_VM</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;AllVersionDriversWorker_RunWorkerCompleted&gt;b__103_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>AllVersionDriversWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>AllVersionDriversWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUpdateVersionDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>CompletedSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Load_Data</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_All_Database_Driver_Count</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_All_OS_Driver_Count</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Download.AllVersionDriverList()</signature>
                        <name>get_All_Version_Driver_List_Helper</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCloseCommand</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Compatible_Driver_Count</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.AllVersionDriverWindow()</signature>
                        <name>get_Cur_All_Version_Window</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_Cur_Device</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Cur_Device_Location_Of_Reg</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>get_Cur_Driver_View_Model</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Cur_Install_Number</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>get_Cur_Version_Driver_Type</name>
                    </method>
                    <method>
                        <signature>System.Uri()</signature>
                        <name>get_Device_Type_Image_Path</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Driver_Description</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Has_Scanned</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_No_Driver</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Not_Match_Device_Id</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Scanning</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Without_Version_Drivers</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_Main_VM</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Show_Keep_One_Download_Status</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>get_Version_Driver_List</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>is_current_installed_driver</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>reset_compatible_driver_count</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>reset_driver_download_progress</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>reset_driver_installed_status</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_All_Database_Driver_Count</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_All_OS_Driver_Count</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.AllVersionDriverList)</signature>
                        <name>set_All_Version_Driver_List_Helper</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCloseCommand</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Compatible_Driver_Count</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.AllVersionDriverWindow)</signature>
                        <name>set_Cur_All_Version_Window</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_Cur_Device</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Cur_Device_Location_Of_Reg</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>set_Cur_Driver_View_Model</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Cur_Install_Number</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.All_Version_Drivers_Type)</signature>
                        <name>set_Cur_Version_Driver_Type</name>
                    </method>
                    <method>
                        <signature>void(System.Uri)</signature>
                        <name>set_Device_Type_Image_Path</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Driver_Description</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Has_Scanned</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_No_Driver</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Not_Match_Device_Id</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Scanning</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Without_Version_Drivers</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_Main_VM</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Show_Keep_One_Download_Status</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>set_Version_Driver_List</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_device_type_image_path</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_driver_count</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_driver_count_old</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_keep_one_download_status</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>update_local_current_driver_info</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCloseCommand&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DriverManager/SearchResult</signature>
                        <name>_searchResult</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>all_database_driver_count</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>all_os_driver_count</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.AllVersionDriverList</signature>
                        <name>all_version_driver_list_helper</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>compatible_driver_count</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.AllVersionDriverWindow</signature>
                        <name>cur_all_version_window</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>cur_device</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cur_device_location_of_reg</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>cur_driver_view_model</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cur_install_number</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>cur_version_driver_type</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Uri</signature>
                        <name>device_type_image_path</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driver_desction</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>has_scanned</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_no_driver</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_not_match_device_id</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_scanning</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_without_version_drivers</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>license</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>mainVM</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>show_keep_one_download_status</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>version_driver_list</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>All_Database_Driver_Count</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>All_OS_Driver_Count</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Download.AllVersionDriverList()</signature>
                        <name>All_Version_Driver_List_Helper</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCloseCommand</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Compatible_Driver_Count</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.AllVersionDriverWindow()</signature>
                        <name>Cur_All_Version_Window</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>Cur_Device</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Cur_Device_Location_Of_Reg</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>Cur_Driver_View_Model</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Cur_Install_Number</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>Cur_Version_Driver_Type</name>
                    </property>
                    <property>
                        <signature>System.Uri()</signature>
                        <name>Device_Type_Image_Path</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Driver_Description</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Has_Scanned</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_No_Driver</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Not_Match_Device_Id</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Scanning</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Without_Version_Drivers</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>Main_VM</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Show_Keep_One_Download_Status</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>Version_Driver_List</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;set_keep_one_download_status&gt;b__106_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__106_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.AttachmentData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FilePath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.BackupProgressViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriver&gt;&gt;, string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.BackgroundWorker, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>Backup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickOK</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CloseBackupWindowByCancelThread</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CompressFromTemp</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExitBackup</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;(string)</signature>
                        <name>GetSameNameList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetTempZipPath</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsCompressedFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OverrideCloseCommand</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartBackup</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_BackupCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>backupWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.ProgressChangedEventArgs)</signature>
                        <name>backupWorker_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>backupWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BackupProgress</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.BackupProgressWindow()</signature>
                        <name>get_BackupWindow</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickOKCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrMsg</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_IsBackupState</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOpenFolder</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_OpenFolderVisibility</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Prompt</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_BackupCompleted</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BackupProgress</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.BackupProgressWindow)</signature>
                        <name>set_BackupWindow</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickOKCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrMsg</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_IsBackupState</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsOpenFolder</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_OpenFolderVisibility</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Prompt</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.BackupProgressWindow</signature>
                        <name>&lt;BackupWindow&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickOKCommand&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>BackupCompleted</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BackupCompletedNum</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsBackupDirectoryExists</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZipFileName</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BackupState</signature>
                        <name>_state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>backupDest</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriver&gt;&gt;</signature>
                        <name>backupDrivers</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>backupProgress</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>backupRootDir</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>backupWorker</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>errMsg</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>isBackupState</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isOpenFolder</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>openFolderVisibility</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>prompt</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalbackupNum</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BackupProgress</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.BackupProgressWindow()</signature>
                        <name>BackupWindow</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickOKCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrMsg</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>IsBackupState</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOpenFolder</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>OpenFolderVisibility</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Prompt</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>BackupCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.BackupState</name>
                <newname>c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BackupState</signature>
                        <name>Cancel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BackupState</signature>
                        <name>Error</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BackupState</signature>
                        <name>Success</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BackupState</signature>
                        <name>Undefind</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.BaseViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Busyr_Busy</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Second_Busyr_Busy</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Busyr_Busy</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Second_Busyr_Busy</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>is_busyr_busy</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_second_busyr_busy</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Busyr_Busy</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Second_Busyr_Busy</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.CertifyLicenseResultWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickYes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.CertifyLicenseResultType()</signature>
                        <name>get_Certify_Result_Type</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickYesCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Activate_Window_Busy</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_Main_VM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.CertifyLicenseResultType)</signature>
                        <name>set_Certify_Result_Type</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickYesCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Activate_Window_Busy</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_Main_VM</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickYesCommand&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;Main_VM&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifyLicenseResultType</signature>
                        <name>certify_result_type</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_activate_window_busy</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Models.CertifyLicenseResultType()</signature>
                        <name>Certify_Result_Type</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickYesCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Activate_Window_Busy</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>Main_VM</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DeviceListViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BindingDriverSelectedEvent</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>BindingDriverSelectedEvent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SelectCheckBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DeviceCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeviceTitle</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel()</signature>
                        <name>get_DownloadViewModel</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>get_DriverViewModelList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasChildSelected</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_IsSelected</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedShow</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SelectedCheckBoxCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Single_Selected_Num</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel()</signature>
                        <name>get_Update_List_View_Model</name>
                    </method>
                    <method>
                        <signature>void(object, DriverEasyWPF.ViewModels.DriverViewModel/DriverEventArgs)</signature>
                        <name>handle_driver_select_event</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_single_selected_num</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>remove_driver_selected_event</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DeviceCount</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeviceTitle</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DownloadViewModel)</signature>
                        <name>set_DownloadViewModel</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>set_DriverViewModelList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasChildSelected</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_IsSelected</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedShow</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SelectedCheckBoxCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Single_Selected_Num</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.UpdateListViewModel)</signature>
                        <name>set_Update_List_View_Model</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SelectedCheckBoxCommand&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_deviceTitle</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>_driverViewModelList</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>_isSelected</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_needShow</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>deviceCount</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel</signature>
                        <name>downloadViewModel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>hasChildSelected</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>single_selected_num</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel</signature>
                        <name>update_list_view_model</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>DeviceCount</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeviceTitle</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel()</signature>
                        <name>DownloadViewModel</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>DriverViewModelList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasChildSelected</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>IsSelected</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedShow</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SelectedCheckBoxCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Single_Selected_Num</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel()</signature>
                        <name>Update_List_View_Model</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DeviceListViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.DeviceListViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;RefreshDeviceCount&gt;b__46_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__39_0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__39_1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__39_2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__39_3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_single_selected_num&gt;b__47_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__39_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__39_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__39_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__39_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__46_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__47_0</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DialogWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeToRegister</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickGetYourLicense</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickHowToManuallyInstall</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickNoPoint</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickNoSmart</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickRenew</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickRetrievekey</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickYesPoint</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickYesSmart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Register</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetOptions</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeToRegisterCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCreateRestorePointCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickGetYourLicenseCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHowToManuallyInstallCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickNoPointCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickNoSmartCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRenewCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRetrieveKeyCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSureUseSmartInstallCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickYesPointCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickYesSmartCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DialogWindowType()</signature>
                        <name>get_DialogType</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.EntrancePageType()</signature>
                        <name>get_EntrancePageType</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_GoRegisterCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsActivating</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsControlEnabled</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNoCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNoUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRenewAtLanuch</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowNextTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowRegisterButton</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Activate_Window_Busy</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKey</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainViewModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Price</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RenewPrice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RenewUrl</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.UpdateLineManager()</signature>
                        <name>get_UpdateLineManager</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.DialogWindow()</signature>
                        <name>get_dialog_window</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeToRegisterCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCreateRestorePointCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickGetYourLicenseCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHowToManuallyInstallCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickNoPointCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickNoSmartCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRenewCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRetrieveKeyCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSureUseSmartInstallCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickYesPointCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickYesSmartCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DialogWindowType)</signature>
                        <name>set_DialogType</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.EntrancePageType)</signature>
                        <name>set_EntrancePageType</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_GoRegisterCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsActivating</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsControlEnabled</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNoCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNoUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsRenewAtLanuch</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowNextTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowRegisterButton</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Activate_Window_Busy</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseKey</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainViewModel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Price</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RenewPrice</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RenewUrl</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.UpdateLineManager)</signature>
                        <name>set_UpdateLineManager</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.DialogWindow)</signature>
                        <name>set_dialog_window</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeToRegisterCommand&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCreateRestorePointCommand&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickGetYourLicenseCommand&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHowToManuallyInstallCommand&gt;k__BackingField</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickNoPointCommand&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickNoSmartCommand&gt;k__BackingField</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRenewCommand&gt;k__BackingField</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRetrieveKeyCommand&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSureUseSmartInstallCommand&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickYesPointCommand&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickYesSmartCommand&gt;k__BackingField</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;GoRegisterCommand&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsRenewAtLanuch&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DialogWindow</signature>
                        <name>&lt;dialog_window&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ACTIVATE_PAGE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREATE_RESTORE_POINT_GUIDE_PAGE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FREE_VS_PRO_PAGE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MANUALLY_INSTALL_DRIVER_GUIDE_PAGE</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RENEW_PAGE</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DialogWindowType</signature>
                        <name>dialogType</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>entrancePageType</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isActivating</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isControlEnabled</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isCreateRestorePoint</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isNoCreateRestorePoint</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isNoUseSmartInstall</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isShowNextTime</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isShowRegisterButton</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isUseSmartInstall</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_activate_window_busy</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>license</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>licenseKey</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>mainViewModel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>price</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>renewPrice</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>renewUrl</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineManager</signature>
                        <name>updateLineManager</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeToRegisterCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCreateRestorePointCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickGetYourLicenseCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHowToManuallyInstallCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickNoPointCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickNoSmartCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRenewCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRetrieveKeyCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSureUseSmartInstallCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickYesPointCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickYesSmartCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DialogWindowType()</signature>
                        <name>DialogType</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.EntrancePageType()</signature>
                        <name>EntrancePageType</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>GoRegisterCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsActivating</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsControlEnabled</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNoCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNoUseSmartInstall</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRenewAtLanuch</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowNextTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowRegisterButton</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUseSmartInstall</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Activate_Window_Busy</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseKey</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainViewModel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Price</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RenewPrice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RenewUrl</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.UpdateLineManager()</signature>
                        <name>UpdateLineManager</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.DialogWindow()</signature>
                        <name>dialog_window</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadAllViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelAndClose</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateRestorePoint</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>CurrentDownloadItem_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>CurrentDownloadItem_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>FindFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDrivers</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetPermission</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InstallDriver</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsDownloadComplete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextDriver</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Pause</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>PauseForAllVersionDrivers</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFristAndLeftDriverName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartDownloadAll</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartInstall</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateItemList</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window)</signature>
                        <name>UpdateOne</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DownloadAllCompleted</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPauseCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPauseForAllVersionDriversCommand</name>
                    </method>
                    <method>
                        <signature>System.Action()</signature>
                        <name>get_CloseAction</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentDownloadSizeView</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentDriverName</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DoubleTotalProgress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstDriverName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IsNeedRestartCount</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPause</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>get_LeftDriverNameList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedCreateRestorePoint</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Download.CompletedState()</signature>
                        <name>get_State</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TotalDownloadSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalDriver</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalProgress</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UpdateFinish</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_WindowOwner</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_finishProgress</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_proportion</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Install.CompletedEventArgsI)</signature>
                        <name>installDriver_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Install.ProgressChangedEventArgsI)</signature>
                        <name>installDriver_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>pause_update</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DownloadAllCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restorePointHandler_CreateRestorePointCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickPauseCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickPauseForAllVersionDriversCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>set_CloseAction</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentDownloadSizeView</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentDriverName</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_DoubleTotalProgress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FirstDriverName</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IsNeedRestartCount</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPause</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;)</signature>
                        <name>set_LeftDriverNameList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedCreateRestorePoint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TotalDownloadSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalDriver</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalProgress</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UpdateFinish</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_WindowOwner</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>update_local_current_driver_info</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickPauseCommand&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickPauseForAllVersionDriversCommand&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;CloseAction&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;NeedCreateRestorePoint&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;WindowOwner&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DownloadAllCompleted</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>OneManualinstallDriver</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>RefusedAdministrator</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DriverFileDownloader</signature>
                        <name>_download</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedState</signature>
                        <name>_state</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>currentDownload</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentDownloadSizeView</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentDriverName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentItem</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>currentItemDownloadSize</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>doubleTotalProgress</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>downloadCompletedProgress</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>driverViewModelList</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>errorDownloadData</name>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>errorInstallData</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>firstDriverName</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>isNeedRestartCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isOneManualinstall</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPause</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>leftDriverNameList</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>len</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>need_restart_list</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Services.RestorePoint.RestorePointHandler</signature>
                        <name>restorePointHandler</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>totalDownloadSize</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalDriver</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalProgress</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>updateFinish</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPauseCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPauseForAllVersionDriversCommand</name>
                    </property>
                    <property>
                        <signature>System.Action()</signature>
                        <name>CloseAction</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentDownloadSizeView</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentDriverName</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>DoubleTotalProgress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FirstDriverName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>IsNeedRestartCount</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPause</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>LeftDriverNameList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Download.CompletedState()</signature>
                        <name>State</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TotalDownloadSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalDriver</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalProgress</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UpdateFinish</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>WindowOwner</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>finishProgress</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>proportion</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DownloadAllCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, bool, int32&amp;, bool, bool)</signature>
                        <name>AddToDriverViewModelList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ChangeToCongratulation</name>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>CompletedSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DeleteDriverFile</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>DeletePluggedItem</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ItemsControl, DriverEasyWPF.ViewModels.DriverViewModel, System.Windows.Controls.Grid)</signature>
                        <name>DoDropdownAnimation</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DownloadAll</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DriverDetail</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>FormatTheDeviceTitle</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>GetDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>GetDriverItem</name>
                    </method>
                    <method>
                        <signature>string(bool)</signature>
                        <name>GetImageUrl</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>GetUptodateDeviceList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, bool)</signature>
                        <name>HiddenItem</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Install</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadDataFromDriversFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadUptoDateDevcies</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenFileLocation</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>RefreshNeedToShow</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshTotalDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ShowSelectedHiddenDevice</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SkipUpdate</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>SummaryDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>SummaryNeedShow</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, System.Windows.Controls.Grid, float64)</signature>
                        <name>UseTimerToHideDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ViewDetail</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>click_more</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs, System.Windows.Controls.Grid)</signature>
                        <name>dispatcherTimer_Tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDetailCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverNameCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickInstallCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRollbackDriverInHistoryCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUpdateCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_Click_More_Command</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_CompletedDriverViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DeleteDriverFileCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DownloadAllCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_IgnoreDriverViewModel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsScanCongratulation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowCompletedList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsZeroDevice</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainVM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_MissDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_MouseEnterStatusImgCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_NewDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenFileLocationCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_RollbackDriverCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SelectDeviceCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SelectDriverCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Selected_Driver_Num</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ShowSelectedHiddenDeviceCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SkipUpdateCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalDeviceCount</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_UnplugedDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>System.Windows.Data.CompositeCollection()</signature>
                        <name>get_Update_Data_List</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>get_UptoDateDeviceList</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel()</signature>
                        <name>get_UptoDateViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ViewDetailCommand</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_update_data_list</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>refresh_can_uninstall</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_selected_driver_num</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_single_selected_driver_num</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>remove_printer_drivers</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow, DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>restartUpdate</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDetailCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverNameCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickInstallCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRollbackDriverInHistoryCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUpdateCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_Click_More_Command</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_CompletedDriverViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DeleteDriverFileCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DownloadAllCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_IgnoreDriverViewModel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsScanCongratulation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowCompletedList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsZeroDevice</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainVM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_MissDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_MouseEnterStatusImgCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_NewDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenFileLocationCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_RollbackDriverCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SelectDeviceCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SelectDriverCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Selected_Driver_Num</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ShowSelectedHiddenDeviceCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SkipUpdateCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_UnplugedDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Data.CompositeCollection)</signature>
                        <name>set_Update_Data_List</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>set_UptoDateDeviceList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel)</signature>
                        <name>set_UptoDateViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ViewDetailCommand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDetailCommand&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverNameCommand&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickInstallCommand&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRollbackDriverInHistoryCommand&gt;k__BackingField</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUpdateCommand&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;Click_More_Command&gt;k__BackingField</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;DeleteDriverFileCommand&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;DownloadAllCommand&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;MainVM&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;MouseEnterStatusImgCommand&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenFileLocationCommand&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;RollbackDriverCommand&gt;k__BackingField</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SelectDeviceCommand&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SelectDriverCommand&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ShowSelectedHiddenDeviceCommand&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SkipUpdateCommand&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ViewDetailCommand&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NETWORK_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPPRINTER_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PRINTER_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>_missDeviceListViewModel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>_newDeviceListViewModel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>_unplugedDeviceListViewModel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>_uptoDateDeviceList</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>completedDriverViewModel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>dispatcherTimer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>ignoreDriverViewModel</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isScanCongratulation</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isShowCompletedList</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isZeroDevice</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>selected_driver_num</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalDeviceCount</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Data.CompositeCollection</signature>
                        <name>update_data_list</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel</signature>
                        <name>uptoDateViewModel</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDetailCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverNameCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickInstallCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRollbackDriverInHistoryCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUpdateCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>Click_More_Command</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>CompletedDriverViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DeleteDriverFileCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DownloadAllCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>IgnoreDriverViewModel</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsScanCongratulation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowCompletedList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsZeroDevice</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainVM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>MissDeviceListViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>MouseEnterStatusImgCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>NewDeviceListViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenFileLocationCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>RollbackDriverCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SelectDeviceCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SelectDriverCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Selected_Driver_Num</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ShowSelectedHiddenDeviceCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SkipUpdateCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalDeviceCount</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>UnplugedDeviceListViewModel</name>
                    </property>
                    <property>
                        <signature>System.Windows.Data.CompositeCollection()</signature>
                        <name>Update_Data_List</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>UptoDateDeviceList</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel()</signature>
                        <name>UptoDateViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ViewDetailCommand</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.DownloadViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__160_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__160_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__160_4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_1</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_10</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_11</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_12</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_13</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_14</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_15</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_2</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_4</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_5</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_6</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_7</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_8</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__133_9</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ShowSelectedHiddenDevice&gt;b__150_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;SummaryDeviceCount&gt;b__135_0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_selected_driver_num&gt;b__162_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_selected_driver_num&gt;b__162_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_selected_driver_num&gt;b__162_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;remove_printer_drivers&gt;b__134_0</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.DriverFile,int32&gt;</signature>
                        <name>&lt;&gt;9__133_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__133_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__133_10</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__133_11</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__133_12</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__133_13</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__133_14</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__133_15</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__133_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__133_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__133_4</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__133_5</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__133_6</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__133_7</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__133_8</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__133_9</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__134_0</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__135_0</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__150_0</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.Device,string&gt;</signature>
                        <name>&lt;&gt;9__160_0</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.Device,string&gt;</signature>
                        <name>&lt;&gt;9__160_1</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>&lt;&gt;9__160_4</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__162_0</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__162_1</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__162_2</name>
                        <newname>z</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadViewModel/&lt;&gt;c__DisplayClass137_0</name>
                <newname>DriverEasyWPF.ViewModels.DownloadViewModel/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;AddToDriverViewModelList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadViewModel/&lt;&gt;c__DisplayClass153_0</name>
                <newname>DriverEasyWPF.ViewModels.DownloadViewModel/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;UseTimerToHideDriver&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>driverGrid</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadViewModel/&lt;&gt;c__DisplayClass160_0</name>
                <newname>DriverEasyWPF.ViewModels.DownloadViewModel/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>hidArray</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DownloadViewModel/&lt;&gt;c__DisplayClass160_1</name>
                <newname>DriverEasyWPF.ViewModels.DownloadViewModel/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>other_device_guid</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverDetailsViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Tools.Common.ToolsDriver)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource(System.Drawing.Icon)</signature>
                        <name>ToIcon2ImageSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverProvider</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverVersion</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel()</signature>
                        <name>get_Drivers_VM</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>get_ImageIcon</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverProvider</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverVersion</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel)</signature>
                        <name>set_Drivers_VM</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.ImageSource)</signature>
                        <name>set_ImageIcon</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driverDate</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driverProvider</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driverType</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driverVersion</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel</signature>
                        <name>drivers_vm</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.ImageSource</signature>
                        <name>imageIcon</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>main_window</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverProvider</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverVersion</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel()</signature>
                        <name>Drivers_VM</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>ImageIcon</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverInfoSimpleViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetWindowTitleWithKey</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.driver_for_history()</signature>
                        <name>get_Cur_Driver</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>get_Cur_Driver_VM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>get_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Has_New_Driver</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WindowTitle</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>set_Cur_Driver</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>set_Cur_Driver_VM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DeviceForDriverInfo)</signature>
                        <name>set_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Has_New_Driver</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WindowTitle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MIN_ROWS_SHOW_COUNT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SHOW_COPIED_WAIT_TIME</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo</signature>
                        <name>_deviceInfo</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>cur_driver</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>cur_driver_vm</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>has_new_driver</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>main_window</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>windowTitle</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Models.driver_for_history()</signature>
                        <name>Cur_Driver</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>Cur_Driver_VM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>DeviceInfo</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Has_New_Driver</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WindowTitle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverInfoUpdateHistoryViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetWindowTitleWithKey</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>compatible_wait_completed_timer_tick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>copy_driver_hardware_ids</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>copy_hardware_ids</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>get_Compatible_Id_List</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CopyHardwareIdsCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.driver_for_history()</signature>
                        <name>get_Cur_Driver</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>get_Cur_Driver_VM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>get_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>get_Hardware_Id_List</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Has_New_Driver</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Copied_Compatible</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Copied_Hardware</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Copy_Button</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Copy_Button_Compatible</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>get_Show_Copied_Compatible_Timer</name>
                    </method>
                    <method>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>get_Show_Copied_Hardware_Timer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WindowTitle</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>hardware_wait_completed_timer_tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_driver_hardware_id_list</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_hardware_id_list</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;)</signature>
                        <name>set_Compatible_Id_List</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CopyHardwareIdsCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>set_Cur_Driver</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>set_Cur_Driver_VM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DeviceForDriverInfo)</signature>
                        <name>set_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;)</signature>
                        <name>set_Hardware_Id_List</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Has_New_Driver</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Copied_Compatible</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Copied_Hardware</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Copy_Button</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Copy_Button_Compatible</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Threading.DispatcherTimer)</signature>
                        <name>set_Show_Copied_Compatible_Timer</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Threading.DispatcherTimer)</signature>
                        <name>set_Show_Copied_Hardware_Timer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WindowTitle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CopyHardwareIdsCommand&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MIN_ROWS_SHOW_COUNT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SHOW_COPIED_WAIT_TIME</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo</signature>
                        <name>_deviceInfo</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>compatible_id_list</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>cur_driver</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>cur_driver_vm</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>hardware_id_list</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>has_new_driver</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_copied_compatible</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_copied_hardware</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_copy_button</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_copy_button_compatible</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>main_window</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>show_copied_compatible_timer</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>show_copied_hardware_timer</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>windowTitle</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>Compatible_Id_List</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CopyHardwareIdsCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.driver_for_history()</signature>
                        <name>Cur_Driver</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>Cur_Driver_VM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>DeviceInfo</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>Hardware_Id_List</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Has_New_Driver</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Copied_Compatible</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Copied_Hardware</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Copy_Button</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Copy_Button_Compatible</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                    <property>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>Show_Copied_Compatible_Timer</name>
                    </property>
                    <property>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>Show_Copied_Hardware_Timer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WindowTitle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverInfoUpdateHistoryViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.DriverInfoUpdateHistoryViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;init_driver_hardware_id_list&gt;b__67_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;init_driver_hardware_id_list&gt;b__67_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;init_hardware_id_list&gt;b__68_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;init_hardware_id_list&gt;b__68_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverInfoUpdateHistoryViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__67_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__67_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__68_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__68_1</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverInfoViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetWindowTitleWithKey</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>compatible_wait_completed_timer_tick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>copy_hardware_ids</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>get_Compatible_Id_List</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CopyHardwareIdsCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>get_Cur_All_Version_Drivers_Type</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>get_Cur_Driver_VM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>get_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>get_Hardware_Id_List</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Has_New_Driver</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Copied_Compatible</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Copied_Hardware</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Copy_Button</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Copy_Button_Compatible</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>get_Show_Copied_Compatible_Timer</name>
                    </method>
                    <method>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>get_Show_Copied_Hardware_Timer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WindowTitle</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>hardware_wait_completed_timer_tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_hardware_id_list</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;)</signature>
                        <name>set_Compatible_Id_List</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CopyHardwareIdsCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.All_Version_Drivers_Type)</signature>
                        <name>set_Cur_All_Version_Drivers_Type</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>set_Cur_Driver_VM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DeviceForDriverInfo)</signature>
                        <name>set_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;)</signature>
                        <name>set_Hardware_Id_List</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Has_New_Driver</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Copied_Compatible</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Copied_Hardware</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Copy_Button</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Copy_Button_Compatible</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Threading.DispatcherTimer)</signature>
                        <name>set_Show_Copied_Compatible_Timer</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Threading.DispatcherTimer)</signature>
                        <name>set_Show_Copied_Hardware_Timer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WindowTitle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CopyHardwareIdsCommand&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MIN_ROWS_SHOW_COUNT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SHOW_COPIED_WAIT_TIME</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo</signature>
                        <name>_deviceInfo</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>compatible_id_list</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type</signature>
                        <name>cur_all_version_drivers_type</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>cur_driver_vm</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>hardware_id_list</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>has_new_driver</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_copied_compatible</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_copied_hardware</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_copy_button</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_copy_button_compatible</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>main_window</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>show_copied_compatible_timer</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>show_copied_hardware_timer</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>windowTitle</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>Compatible_Id_List</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CopyHardwareIdsCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.All_Version_Drivers_Type()</signature>
                        <name>Cur_All_Version_Drivers_Type</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>Cur_Driver_VM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>DeviceInfo</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>Hardware_Id_List</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Has_New_Driver</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Copied_Compatible</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Copied_Hardware</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Copy_Button</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Copy_Button_Compatible</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                    <property>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>Show_Copied_Compatible_Timer</name>
                    </property>
                    <property>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>Show_Copied_Hardware_Timer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WindowTitle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverInfoViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.DriverInfoViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;init_hardware_id_list&gt;b__68_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;init_hardware_id_list&gt;b__68_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverInfoViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__68_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__68_1</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitInsideDeviceViewModel</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SingleDriverSelected</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel/DriverEventHandler)</signature>
                        <name>add_DriverSelected</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Can_Rollback</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Can_Uninstall</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadSizeView</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.DriverFile()</signature>
                        <name>get_DriverFile</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DriverSelectedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type()</signature>
                        <name>get_Driver_View_Model_Type</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IconUrl</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.InsideDeviceViewModel&gt;()</signature>
                        <name>get_InsideDeviceViewModelList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFirstItem</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSelected</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Current_Installed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Manual_Generate</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Number</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>get_Parent_Driver_View_Model</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StatusUrl</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UpdateSate</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UpdateSatebtn</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel/DriverEventHandler)</signature>
                        <name>remove_DriverSelected</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Can_Rollback</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Can_Uninstall</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadSizeView</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>set_DriverFile</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DriverSelectedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.Driver_View_Model_Type)</signature>
                        <name>set_Driver_View_Model_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IconUrl</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.InsideDeviceViewModel&gt;)</signature>
                        <name>set_InsideDeviceViewModelList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFirstItem</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSelected</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Current_Installed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Manual_Generate</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Number</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>set_Parent_Driver_View_Model</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StatusUrl</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UpdateSate</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UpdateSatebtn</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel/DriverEventHandler</signature>
                        <name>DriverSelected</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverFile</signature>
                        <name>_driverFile</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_iconUrl</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.InsideDeviceViewModel&gt;</signature>
                        <name>_insideDeviceViewModelList</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isSelected</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_statusUrl</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>can_rollback</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>can_uninstall</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadSizeView</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>driverSelectedCommand</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type</signature>
                        <name>driver_view_model_type</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFirstItem</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_current_installed</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_manual_generate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>number</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>parent_driver_view_model</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updateSate</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>updateSatebtn</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Can_Rollback</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Can_Uninstall</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadSizeView</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.DriverFile()</signature>
                        <name>DriverFile</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DriverSelectedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.Driver_View_Model_Type()</signature>
                        <name>Driver_View_Model_Type</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IconUrl</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.InsideDeviceViewModel&gt;()</signature>
                        <name>InsideDeviceViewModelList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFirstItem</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSelected</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Current_Installed</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Manual_Generate</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Number</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>Parent_Driver_View_Model</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StatusUrl</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UpdateSate</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UpdateSatebtn</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel/DriverEventHandler</signature>
                        <name>DriverSelected</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverViewModel/DriverEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSelected</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSelected</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSelected&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSelected</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverViewModel/DriverEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, DriverEasyWPF.ViewModels.DriverViewModel/DriverEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, DriverEasyWPF.ViewModels.DriverViewModel/DriverEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverViewModelHeaderTitle</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>IsCheckedChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContentForMany</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContentForOne</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content_For_Many_Lan_Key</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content_For_One_Lan_Key</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Control_Name</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_Device_For_Up_To_Date</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HeaderTitleCount</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HeaderTitleType()</signature>
                        <name>get_Header_Title_Type</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_IsChecked</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Content_Adapt_Arabic</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_CheckBox</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Unique_Content</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ContentForMany</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ContentForOne</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content_For_Many_Lan_Key</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content_For_One_Lan_Key</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Control_Name</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_Device_For_Up_To_Date</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_HeaderTitleCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HeaderTitleType)</signature>
                        <name>set_Header_Title_Type</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_IsChecked</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Content_Adapt_Arabic</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_CheckBox</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Unique_Content</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckCommand&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCommand&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentForManyProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>ContentForOneProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>HeaderTitleCountProperty</name>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsCheckedProperty</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>content_for_many_lan_key</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>content_for_one_lan_key</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>control_name</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>device_for_up_to_date</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HeaderTitleType</signature>
                        <name>header_title_type</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_content_adapt_arabic</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_checkbox</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_unqiue_content</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ContentForMany</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ContentForOne</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Content_For_Many_Lan_Key</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Content_For_One_Lan_Key</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Control_Name</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>Device_For_Up_To_Date</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>HeaderTitleCount</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HeaderTitleType()</signature>
                        <name>Header_Title_Type</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>IsChecked</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Content_Adapt_Arabic</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_CheckBox</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Unique_Content</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriverViewModelHeaderTitleFull</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriversViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Media.ImageSource, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckParentCheckState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>CreateTreeWithChildre</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;, bool, bool)</signature>
                        <name>SetIsChecked</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>get_DiskIcon</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_IsChecked</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDriver</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExpanded</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSelected</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel()</signature>
                        <name>get_SelectedTreeItem</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;)</signature>
                        <name>set_Children</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Media.ImageSource)</signature>
                        <name>set_DiskIcon</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_IsChecked</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDriver</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsExpanded</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSelected</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel)</signature>
                        <name>set_Parent</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel)</signature>
                        <name>set_SelectedTreeItem</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;</signature>
                        <name>&lt;Children&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Data&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.ImageSource</signature>
                        <name>&lt;DiskIcon&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel</signature>
                        <name>&lt;Parent&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel</signature>
                        <name>&lt;SelectedTreeItem&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SelectedCategoryNumber</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SelectedFirstCategoryNumber1</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SelectedFirstCategoryNumber2</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>_isChecked</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isSelected</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDriver</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isExpanded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>item</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>DiskIcon</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>IsChecked</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDriver</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExpanded</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSelected</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel()</signature>
                        <name>Parent</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel()</signature>
                        <name>SelectedTreeItem</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.DriversViewModel/&lt;&gt;c__DisplayClass41_0</name>
                <newname>DriverEasyWPF.ViewModels.DriversViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel)</signature>
                        <name>&lt;SetIsChecked&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>value</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.FeedbackWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>AddAttachments</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;(Easeware.Driver.Core.Feedback.Feedback)</signature>
                        <name>BuildPostData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckoutHelpPage</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CompletedExportSysInfo</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CompletedSubmitFeedback</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DeleteFile</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidContent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsValidFeedback</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidMailAddress</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidSubject</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsValidUserFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenInformation</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenPopup</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ServerResult(string)</signature>
                        <name>ParseResult</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SendFinished</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SendFinishedDialogWindow</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SendFinishedMainWindow</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartClosingProgress</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartExportSystemInfo</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartSubmitFeedback</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Submit</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SubmitContent</name>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Feedback.Feedback)</signature>
                        <name>SubmitFeedback</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>VerifyVersions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Waiting</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>add_client_id_to_content</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>exportSystemInfo_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>exportSystemInfo_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_AddAttachmentsCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CheckedSysInfo</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckoutHelpPageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHomePageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DeleteFileCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompleted</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOpen</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberofAttachments</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenPopupCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SubmitCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SysInformationOpenCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ValidContent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ValidMailAddress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ValidSubject</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Feedback.UserInfoFile()</signature>
                        <name>get_ValidUserInfoFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.FeedbackWindow()</signature>
                        <name>get_feedbackWindow</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_AddAttachmentsCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CheckedSysInfo</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckoutHelpPageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHomePageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DeleteFileCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCompleted</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsOpen</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NumberofAttachments</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenPopupCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SubmitCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SysInformationOpenCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ValidContent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ValidMailAddress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ValidSubject</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Feedback.UserInfoFile)</signature>
                        <name>set_ValidUserInfoFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.FeedbackWindow)</signature>
                        <name>set_feedbackWindow</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>submitWorker_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>submitWorker_RunWorkerCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timer_Tick</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;AddAttachmentsCommand&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckoutHelpPageCommand&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHomePageCommand&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSpeedLimitedCommand&gt;k__BackingField</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;DeleteFileCommand&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenPopupCommand&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SubmitCommand&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SysInformationOpenCommand&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.FeedbackWindow</signature>
                        <name>&lt;feedbackWindow&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CONTENT_LENGTH_LIMIT</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DEFAULT_DESC</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>EMAIL_LENGTH_LIMIT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>FILE_SIZE_10_MB</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUBJECT_LENGTH_LIMIT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SUBJECT_LENGTH_MINLIMIT</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>checkedSysInfo</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DialogWindow</signature>
                        <name>dialogWindow</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.Feedback</signature>
                        <name>feedback</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/FeedbackResult</signature>
                        <name>feedbackResult</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.FeedbackWindow</signature>
                        <name>feedbackwindow</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isCompleted</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isOpen</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>license</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>mainWindow</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>numberofAttachments</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.single_activate_window</signature>
                        <name>single_activate_window</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Stopwatch</signature>
                        <name>stopwatch</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>timer</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userFile</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>validContent</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>validMailAddress</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>validSubject</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.UserInfoFile</signature>
                        <name>validUserInfoFile</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>wating</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>AddAttachmentsCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CheckedSysInfo</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckoutHelpPageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHomePageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSpeedLimitedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DeleteFileCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCompleted</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOpen</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NumberofAttachments</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenPopupCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SubmitCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SysInformationOpenCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ValidContent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ValidMailAddress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ValidSubject</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Feedback.UserInfoFile()</signature>
                        <name>ValidUserInfoFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.FeedbackWindow()</signature>
                        <name>feedbackWindow</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/FeedbackResult</name>
                <newname>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/c</newname>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Exception</signature>
                        <name>Error</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>ResultType</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</name>
                <newname>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>ExportSysInfoCancell</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>ExportSysInfoError</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>ExportSysInfoSuccess</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>SendFeedbackError</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>SendFeedbackServerError</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>SendFeedbackServerFileTypeError</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ResultType</signature>
                        <name>SendFeedbackSuccess</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/ServerResult</name>
                <newname>DriverEasyWPF.ViewModels.FeedbackWindowViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Code</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Desc</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.GuideBookWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>BuyGuidebook</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Close</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>GetFreeGuidebook</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_BuyGuidebookCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CloseCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_GetFreeGuidebookCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainVM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_BuyGuidebookCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CloseCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_GetFreeGuidebookCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainVM</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;BuyGuidebookCommand&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CloseCommand&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;GetFreeGuidebookCommand&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>mainVM</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>BuyGuidebookCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CloseCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>GetFreeGuidebookCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainVM</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.HardwareInfo.CpuViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeCpuCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Cpu()</signature>
                        <name>get_Cpu</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>get_CpuNumList</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurProcessorIndex</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeCpuCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.Cpu)</signature>
                        <name>set_Cpu</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;)</signature>
                        <name>set_CpuNumList</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurProcessorIndex</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeCpuCommand&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Cpu</signature>
                        <name>cpu</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;</signature>
                        <name>cpuNumList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>curProcessorIndex</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeCpuCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Cpu()</signature>
                        <name>Cpu</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>CpuNumList</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurProcessorIndex</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.HardwareInfo.GraphicViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeGraphicCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangePerfLevelCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurGraphicIndex</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurPerfLevel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Graphic()</signature>
                        <name>get_Graphic</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>get_GraphicNumList</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer_Name</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>get_PerfLevelList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeGraphicCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangePerfLevelCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurGraphicIndex</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurPerfLevel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.Graphic)</signature>
                        <name>set_Graphic</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;)</signature>
                        <name>set_GraphicNumList</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer_Name</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;)</signature>
                        <name>set_PerfLevelList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_gpu_manufacturer_name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeGraphicCommand&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangePerfLevelCommand&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>curGraphicIndex</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>curPerfLevel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Graphic</signature>
                        <name>graphic</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;</signature>
                        <name>graphicNumList</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>manufacturer_name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;</signature>
                        <name>perfLevelList</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeGraphicCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangePerfLevelCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurGraphicIndex</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurPerfLevel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Graphic()</signature>
                        <name>Graphic</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>GraphicNumList</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer_Name</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>PerfLevelList</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeCpu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeGraphic</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangePerfLevel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeSpd</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicMemoryBusWidth</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicMemoryBusWidth_old</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicMemorySize</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicMemorySize_old</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicMemoryType</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicMemoryType_old</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGraphicTechnology</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorBusSpeed</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorCoreSpeed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorInstructions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorInstructions_old</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorMultiplier</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorQPILink</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorTDP</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorTechnology</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProcessorVID</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSpdWeekYear</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCpuidHelper</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitTimer</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshCpuData</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshCpuData_old</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshCpuViewModel</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshGraphicData</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshGraphicViewModel</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshMainboard</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshMainboardData</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshMainboardData_old</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshMemory</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshMemoryData</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshMemoryData_old</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshOverView</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshSpdData</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshSpdData_old</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshSpdViewModel</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetBoardInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetGraphicClocks</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetGraphicClocks_old</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetPerfLevelList</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetPerfLevelList_old</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetProcessorCache</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetProcessorCache_old</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetProcessorClocks</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowSystemInfo</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.CpuViewModel()</signature>
                        <name>get_CpuViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.GraphicViewModel()</signature>
                        <name>get_GraphicViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Mainboard()</signature>
                        <name>get_Mainboard</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Memory()</signature>
                        <name>get_Memory</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Overview()</signature>
                        <name>get_OverView</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.SpdViewModel()</signature>
                        <name>get_SpdViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.HardwareInfo.CpuViewModel)</signature>
                        <name>set_CpuViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.HardwareInfo.GraphicViewModel)</signature>
                        <name>set_GraphicViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.Mainboard)</signature>
                        <name>set_Mainboard</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.Memory)</signature>
                        <name>set_Memory</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.Overview)</signature>
                        <name>set_OverView</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.HardwareInfo.SpdViewModel)</signature>
                        <name>set_SpdViewModel</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timer_Tick</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>core_index</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.CpuViewModel</signature>
                        <name>cpuViewModel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.GraphicViewModel</signature>
                        <name>graphicViewModel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Mainboard</signature>
                        <name>mainboard</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Memory</signature>
                        <name>memory</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Overview</signature>
                        <name>overView</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>proc_index</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.SpdViewModel</signature>
                        <name>spdViewModel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Timers.Timer</signature>
                        <name>timer</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.CpuViewModel()</signature>
                        <name>CpuViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.GraphicViewModel()</signature>
                        <name>GraphicViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Mainboard()</signature>
                        <name>Mainboard</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Memory()</signature>
                        <name>Memory</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Overview()</signature>
                        <name>OverView</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.SpdViewModel()</signature>
                        <name>SpdViewModel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel/&lt;&gt;c__DisplayClass45_0</name>
                <newname>DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.HardwareInfo.SelectionItem)</signature>
                        <name>&lt;SetPerfLevelList_old&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>perf_level_name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.HardwareInfo.SpdViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeSpdCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurSpdIndex</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Spd()</signature>
                        <name>get_Spd</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>get_SpdNumList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeSpdCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurSpdIndex</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.HardwareInfo.Spd)</signature>
                        <name>set_Spd</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;)</signature>
                        <name>set_SpdNumList</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeSpdCommand&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>curSpdIndex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Spd</signature>
                        <name>spd</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;</signature>
                        <name>spdNumList</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeSpdCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurSpdIndex</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.HardwareInfo.Spd()</signature>
                        <name>Spd</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.Models.HardwareInfo.SelectionItem&gt;()</signature>
                        <name>SpdNumList</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.InsideDeviceViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCompletedDeviceDesc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDeviceDesc</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCompletedDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Desc</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>get_Device</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCompletedDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Desc</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DeviceForDriverInfo)</signature>
                        <name>set_Device</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCompletedDeviceDescCommand&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDeviceDescCommand&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_desc</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo</signature>
                        <name>_device</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCompletedDeviceDescCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDeviceDescCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Desc</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>Device</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.InstallPromptViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateRestorePoint</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Install</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Prepare</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInstallComplete</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restorePointHandler_CreateRestorePointCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverName</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInstall</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInstallComplete</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timer_Tick</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MIN_WAIT_TIME</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Stopwatch</signature>
                        <name>_waitTimer</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>driverModel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driverName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isCreateRestorePoint</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFree</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInstall</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInstallComplete</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.ManualInstaller</signature>
                        <name>manualInstaller</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Services.RestorePoint.RestorePointHandler</signature>
                        <name>restorePointHandler</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Stopwatch</signature>
                        <name>stopwatch</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>timer</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DriverName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInstall</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInstallComplete</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;expand_main_menu&gt;b__377_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;loading_DoWork&gt;b__425_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeBackupSettings</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeLanguage</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeToDriverUpdateHistoryItem</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeToSettingsSchedule</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckLicense</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Click7zPage</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickAbout</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickActivateToPro</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCertifiedDesc</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCertifiedLink</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCheckForUpdates</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCpuItem</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCreateRestorePoint</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCreateRestorePoint_old</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDriverBackupItem</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDriverRestoreItem</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDriverUninstallItem</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDriverUpdateHistory</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDriverUpdateHistoryItem</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickFreeVersion</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickGetYourLicense</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickGraphicItem</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickHardwareInfo</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickHelp</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickHelpUsImprove</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickImproveTranslation</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickMemoryItem</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickMotherboardItem</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickOfflineScanItem</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickOverviewItem</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickReportBug</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickReportMissDetectedDrivers</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>ClickRollbackDetermineIsProUser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>ClickSaveAsDetermineIsProUser</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickSettings</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickSpdItem</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickSpeedLimit</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickStartSevenDayTrial</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickStopScanning</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickSureUseSmartInstall</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickTrialTag</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>ClickUpdateAllDetermineIsProUser</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>ClickUpdateDriverHistoryDetermineIsProUser</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>ClickUpdateToLatestVersionDetermineIsProUser</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, System.Windows.Window)</signature>
                        <name>ClickUpdateVersionDriverDetermineIsProUser</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUpgradeNow</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickVersionHistory</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickWriteAReview</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DownloadAll</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DownloadAllUpdateList</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>DownloadAllView_DownloadAllCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ExportHardwareInfo</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>FaceBook</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>FeedBack</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>GetNumbersFromDownloadList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetRollbackDriverDateUpdateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DownloadViewModel, string)</signature>
                        <name>GetRollbackDriverDesc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.UpdateListViewModel, string)</signature>
                        <name>GetRollbackDriverDescUpdateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DownloadViewModel, System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, string&amp;)</signature>
                        <name>GetSelectedDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.UpdateListViewModel, System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, string&amp;)</signature>
                        <name>GetSelectedDriverUpdateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>GoRegsiter</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCommad</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitData</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitLanguage</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>InitSettingWindowData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Install</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>InstallUpdateList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>InstallVersonDriverInSettingsHiddenDevicesList</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ManualCheckLicense</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, int32)</signature>
                        <name>ManualInstallAndWaitSecond</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>More</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenEulaPage</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenHomePage</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenPrivacyPolicyPage</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenProFeatDialog</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>OpenProFeaturesWindow</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenRenewUrl</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow, Easeware.Driver.Core.Register.CertifyResult)</signature>
                        <name>OpenRenewWindow</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>OpenShareWindow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenUninstallPage</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window)</signature>
                        <name>OpenWindowsByDecorator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDriverCountAndSaveFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RefreshLanguage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshLicense</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Register</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestartUpdate</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Rollback</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>RollbackDriver</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>RollbackDriverInHistory</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>RollbackDriverInHistoryUpdateList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>RollbackDriverInHistory_old</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>RollbackDriverUpdateList</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, string)</signature>
                        <name>RollbackHistoryWorker_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs, string, string, string)</signature>
                        <name>RollbackHistoryWorker_RunWorkComplete</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, string)</signature>
                        <name>RollbackWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs, string, string, string)</signature>
                        <name>RollbackWorker_RunWorkComplete</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ScanAgain</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SendInfo</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, System.Windows.Window)</signature>
                        <name>ShowFrontOwner</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window, System.Windows.Window)</signature>
                        <name>ShowWindow</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartDownloadAll</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>UpdateForUpdateList</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>UpdateForUpdateListLikeDownloadAll</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>UpdateInDriverInfo</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>UpdateInDriverInfoUpdateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>UpdateToCompleted</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ViewAllDriverVersions</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>check_for_updates_DoWork</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>check_for_updates_RunWorkComplete</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>check_whether_message_font_bold</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs, DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>completed_dispatcherTimer_Tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>creatRestore_CreateRestorePointCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs, DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>dispatcherTimer_Tick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>expand_main_menu</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>exportPCInfoFormat</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanShowStopButton</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Can_Animate</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.CertifiedType()</signature>
                        <name>get_CertType</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeBackupSettingsCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeToDriverUpdateHistoryItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeToSettingsScheduleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_Click7zPageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickAboutCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickActivateToProCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCertifiedDescCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCertifiedLinkCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCheckForUpdatesCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCpuItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverBackupItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverRestoreItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverUninstallItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverUpdateHistoryCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverUpdateHistoryItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickExportHardwareInfoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickFaceBookCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickFeedBackCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickFreeVersionLinkCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickGraphicItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHardwareInfoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHelpCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHelpUsImproveCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHomeCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickImproveTranslationCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickMemoryItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickMoreCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickMotherboardItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickOfflineScanItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickOpenProFeatCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickOverviewItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPrivacyPolicyCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRegisterCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickReportBugCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickReportMissDetectedDriversCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSendInfoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSettingsCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSpdItemCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickStartSevenDayTrialCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickStopScanningCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickTrialLicenceCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUpdateInDriverInfoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUpgradeNowCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickVersionHistoryCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickWriteAReviewCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright_Year</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurDeviceName</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_CurPersent</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel()</signature>
                        <name>get_Cur_All_Version_Drivers_VM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DialogWindowViewModel()</signature>
                        <name>get_DialogViewModel</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>get_DownloadAllList</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DownloadAllViewModel()</signature>
                        <name>get_DownloadAllView</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel()</signature>
                        <name>get_DownloadViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontInfo()</signature>
                        <name>get_FontInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullVersion</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_GoRegisterCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel()</signature>
                        <name>get_HardwareInfoViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_InstallVersonDriverInSettingsHiddenDevicesListCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDownload</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPro</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSpeedLimited</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_About_Check_License</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Expand_Summary</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Message_Font_Bold</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_On_Sub_Menu</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Resume_Update_When_Close</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Rollback_Successful</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Scanning</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Load_Update_Message</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedCreateRestorePoint</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Need_Show_Renew_Button</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Renew_Url</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>get_Rollback_List</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ScanAgainCommand</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.ScanResult()</signature>
                        <name>get_ScanResult</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.ScanViewModel()</signature>
                        <name>get_ScanViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.ScanningViewModel()</signature>
                        <name>get_ScanningViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel()</signature>
                        <name>get_SettingsViewModel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Simple_Version</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel()</signature>
                        <name>get_ToolsView</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Totalstate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TrialTag</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.update_driver_history_view_model()</signature>
                        <name>get_Update_History_View_Model</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel()</signature>
                        <name>get_Update_List_View_Model</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.WaitingWindow()</signature>
                        <name>get_WaitingWindow</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_windowOwner</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>install_CreateRestorePointCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>install_CreateRestorePointCompletedUpdateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, DriverEasyWPF.MainWindow, DriverEasyWPF.Models.EntrancePageType)</signature>
                        <name>is_pro_or_open_dialog</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Register.License, DriverEasyWPF.ViewModels.DialogWindowViewModel, System.Windows.Window, DriverEasyWPF.Models.EntrancePageType)</signature>
                        <name>is_pro_or_open_dialog</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>licenseWorker_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>licenseWorker_RunWorkerCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, System.Action)</signature>
                        <name>loading_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>loading_RunWorkComplete</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>loading_data</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>manual_check_RunWorkerCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>manual_check_RunWorkerCompleted_bk</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>manual_check_worker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>resume_update</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>resume_update_for_update_list</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, DriverEasyWPF.Models.SetupapiComeFromType, string)</signature>
                        <name>sendWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>sendWorker_RunWorkerCompleted</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.SetupapiComeFromType, string)</signature>
                        <name>send_setupapi_log</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanShowStopButton</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Can_Animate</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.CertifiedType)</signature>
                        <name>set_CertType</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeBackupSettingsCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeToDriverUpdateHistoryItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeToSettingsScheduleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_Click7zPageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickAboutCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickActivateToProCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCertifiedDescCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCertifiedLinkCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCheckForUpdatesCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCpuItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverBackupItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverRestoreItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverUninstallItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverUpdateHistoryCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverUpdateHistoryItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickExportHardwareInfoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickFaceBookCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickFeedBackCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickFreeVersionLinkCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickGraphicItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHardwareInfoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHelpCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHelpUsImproveCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHomeCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickImproveTranslationCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickMemoryItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickMoreCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickMotherboardItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickOfflineScanItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickOpenProFeatCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickOverviewItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickPrivacyPolicyCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRegisterCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickReportBugCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickReportMissDetectedDriversCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSendInfoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSettingsCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSpdItemCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickStartSevenDayTrialCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickStopScanningCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickTrialLicenceCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUpdateInDriverInfoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUpgradeNowCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickVersionHistoryCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickWriteAReviewCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright_Year</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurDeviceName</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_CurPersent</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel)</signature>
                        <name>set_Cur_All_Version_Drivers_VM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DialogWindowViewModel)</signature>
                        <name>set_DialogViewModel</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>set_DownloadAllList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DownloadAllViewModel)</signature>
                        <name>set_DownloadAllView</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DownloadViewModel)</signature>
                        <name>set_DownloadViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.SystemFont.ClassFontInfo)</signature>
                        <name>set_FontInfo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullVersion</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_GoRegisterCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel)</signature>
                        <name>set_HardwareInfoViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_InstallVersonDriverInSettingsHiddenDevicesListCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDownload</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPro</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSpeedLimited</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_About_Check_License</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Expand_Summary</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Message_Font_Bold</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_On_Sub_Menu</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Resume_Update_When_Close</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Rollback_Successful</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Scanning</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Load_Update_Message</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedCreateRestorePoint</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Need_Show_Renew_Button</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Renew_Url</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;)</signature>
                        <name>set_Rollback_List</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ScanAgainCommand</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanResult)</signature>
                        <name>set_ScanResult</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.ScanViewModel)</signature>
                        <name>set_ScanViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.ScanningViewModel)</signature>
                        <name>set_ScanningViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.SettingsWindowViewModel)</signature>
                        <name>set_SettingsViewModel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Simple_Version</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.ToolsViewModel)</signature>
                        <name>set_ToolsView</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Totalstate</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.update_driver_history_view_model)</signature>
                        <name>set_Update_History_View_Model</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.UpdateListViewModel)</signature>
                        <name>set_Update_List_View_Model</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.WaitingWindow)</signature>
                        <name>set_WaitingWindow</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_scanning_state</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_summary_default_expand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_windowOwner</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window, System.Windows.Window)</signature>
                        <name>show_with_result</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeBackupSettingsCommand&gt;k__BackingField</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeToDriverUpdateHistoryItemCommand&gt;k__BackingField</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeToSettingsScheduleCommand&gt;k__BackingField</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;Click7zPageCommand&gt;k__BackingField</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickAboutCommand&gt;k__BackingField</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickActivateToProCommand&gt;k__BackingField</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCertifiedDescCommand&gt;k__BackingField</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCertifiedLinkCommand&gt;k__BackingField</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCheckForUpdatesCommand&gt;k__BackingField</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCpuItemCommand&gt;k__BackingField</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverBackupItemCommand&gt;k__BackingField</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverRestoreItemCommand&gt;k__BackingField</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverUninstallItemCommand&gt;k__BackingField</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverUpdateHistoryCommand&gt;k__BackingField</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverUpdateHistoryItemCommand&gt;k__BackingField</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickExportHardwareInfoCommand&gt;k__BackingField</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickFaceBookCommand&gt;k__BackingField</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickFeedBackCommand&gt;k__BackingField</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickFreeVersionLinkCommand&gt;k__BackingField</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickGraphicItemCommand&gt;k__BackingField</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHardwareInfoCommand&gt;k__BackingField</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHelpCommand&gt;k__BackingField</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHelpUsImproveCommand&gt;k__BackingField</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHomeCommand&gt;k__BackingField</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickImproveTranslationCommand&gt;k__BackingField</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickMemoryItemCommand&gt;k__BackingField</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickMoreCommand&gt;k__BackingField</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickMotherboardItemCommand&gt;k__BackingField</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickOfflineScanItemCommand&gt;k__BackingField</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickOpenProFeatCommand&gt;k__BackingField</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickOverviewItemCommand&gt;k__BackingField</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickPrivacyPolicyCommand&gt;k__BackingField</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRegisterCommand&gt;k__BackingField</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickReportBugCommand&gt;k__BackingField</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickReportMissDetectedDriversCommand&gt;k__BackingField</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSendInfoCommand&gt;k__BackingField</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSettingsCommand&gt;k__BackingField</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSpdItemCommand&gt;k__BackingField</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSpeedLimitedCommand&gt;k__BackingField</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickStartSevenDayTrialCommand&gt;k__BackingField</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickStopScanningCommand&gt;k__BackingField</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickTrialLicenceCommand&gt;k__BackingField</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUpdateInDriverInfoCommand&gt;k__BackingField</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUpgradeNowCommand&gt;k__BackingField</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickVersionHistoryCommand&gt;k__BackingField</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickWriteAReviewCommand&gt;k__BackingField</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontInfo</signature>
                        <name>&lt;FontInfo&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;GoRegisterCommand&gt;k__BackingField</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;InstallVersonDriverInSettingsHiddenDevicesListCommand&gt;k__BackingField</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Is_Rollback_Successful&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;NeedCreateRestorePoint&gt;k__BackingField</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ScanAgainCommand&gt;k__BackingField</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>&lt;WaitingWindow&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;windowOwner&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NETWORK_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SETUPAPI_FILE_KEY</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SETUPAPI_FILE_PATH</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel</signature>
                        <name>_downloadViewModel</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isPro</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ScanViewModel</signature>
                        <name>_scanViewModel</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ScanningViewModel</signature>
                        <name>_scanningViewModel</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_simple_version</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_version</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>canShowStopButton</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>can_animate</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CertifiedType</signature>
                        <name>certType</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>copyright_year</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>curDeviceName</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>curPersent</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel</signature>
                        <name>cur_all_version_drivers_vm</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DialogWindowViewModel</signature>
                        <name>dialogViewModel</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>downloadAllList</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DownloadAllViewModel</signature>
                        <name>downloadAllView</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fullVersion</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel</signature>
                        <name>hardwareInfoViewModel</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDownload</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isSpeedLimited</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_about_check_license</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_expand_summary</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_message_font_bold</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_on_sub_menu</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_resume_update_when_close</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_scanning</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>license</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>load_update_message</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>need_show_renew_button</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>renew_url</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>rollback_list</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanResult</signature>
                        <name>scanResult</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel</signature>
                        <name>settingsViewModel</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel</signature>
                        <name>toolsView</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>totalstate</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.UpdateOne</signature>
                        <name>updateOne</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.update_driver_history_view_model</signature>
                        <name>update_history_view_model</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel</signature>
                        <name>update_list_view_model</name>
                        <newname>ac</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CanShowStopButton</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Can_Animate</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.CertifiedType()</signature>
                        <name>CertType</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeBackupSettingsCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeToDriverUpdateHistoryItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeToSettingsScheduleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>Click7zPageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickAboutCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickActivateToProCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCertifiedDescCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCertifiedLinkCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCheckForUpdatesCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCpuItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverBackupItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverRestoreItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverUninstallItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverUpdateHistoryCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverUpdateHistoryItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickExportHardwareInfoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickFaceBookCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickFeedBackCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickFreeVersionLinkCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickGraphicItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHardwareInfoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHelpCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHelpUsImproveCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHomeCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickImproveTranslationCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickMemoryItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickMoreCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickMotherboardItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickOfflineScanItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickOpenProFeatCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickOverviewItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPrivacyPolicyCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRegisterCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickReportBugCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickReportMissDetectedDriversCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSendInfoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSettingsCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSpdItemCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSpeedLimitedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickStartSevenDayTrialCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickStopScanningCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickTrialLicenceCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUpdateInDriverInfoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUpgradeNowCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickVersionHistoryCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickWriteAReviewCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Copyright_Year</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurDeviceName</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>CurPersent</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.AllVersionDriverWindowViewModel()</signature>
                        <name>Cur_All_Version_Drivers_VM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DialogWindowViewModel()</signature>
                        <name>DialogViewModel</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>DownloadAllList</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DownloadAllViewModel()</signature>
                        <name>DownloadAllView</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DownloadViewModel()</signature>
                        <name>DownloadViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Utils.SystemFont.ClassFontInfo()</signature>
                        <name>FontInfo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullVersion</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>GoRegisterCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.HardwareInfo.HardwareInfoViewModel()</signature>
                        <name>HardwareInfoViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>InstallVersonDriverInSettingsHiddenDevicesListCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDownload</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPro</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSpeedLimited</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_About_Check_License</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Expand_Summary</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Message_Font_Bold</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_On_Sub_Menu</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Resume_Update_When_Close</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Rollback_Successful</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Scanning</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Load_Update_Message</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Need_Show_Renew_Button</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Renew_Url</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;()</signature>
                        <name>Rollback_List</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ScanAgainCommand</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Scan.ScanResult()</signature>
                        <name>ScanResult</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.ScanViewModel()</signature>
                        <name>ScanViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.ScanningViewModel()</signature>
                        <name>ScanningViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel()</signature>
                        <name>SettingsViewModel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Simple_Version</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel()</signature>
                        <name>ToolsView</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Totalstate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TrialTag</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.update_driver_history_view_model()</signature>
                        <name>Update_History_View_Model</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel()</signature>
                        <name>Update_List_View_Model</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.WaitingWindow()</signature>
                        <name>WaitingWindow</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>windowOwner</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetNumbersFromDownloadList&gt;b__472_0</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetRollbackDriverDescUpdateList&gt;b__498_1</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_0</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_1</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_10</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_11</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_12</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_13</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_14</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_15</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_16</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_17</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_2</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_3</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_4</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_5</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_6</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_7</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_8</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriver&gt;b__470_9</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_0</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_1</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_10</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_11</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_12</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_13</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_14</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_15</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_16</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_17</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_2</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_3</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_4</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_5</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_6</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_7</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_8</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetSelectedDriverUpdateList&gt;b__502_9</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;Install&gt;b__473_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;InstallUpdateList&gt;b__505_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;dispatcherTimer_Tick&gt;b__482_1</name>
                        <newname>t</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_10</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__470_11</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_12</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_13</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__470_14</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_15</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_16</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__470_17</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__470_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_4</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__470_5</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_6</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_7</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__470_8</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__470_9</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__472_0</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>&lt;&gt;9__473_0</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__482_1</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__498_1</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_0</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_1</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_10</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__502_11</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_12</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_13</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__502_14</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_15</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_16</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__502_17</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__502_2</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_3</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_4</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__502_5</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_6</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_7</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__502_8</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__502_9</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>&lt;&gt;9__505_0</name>
                        <newname>ap</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass392_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;send_setupapi_log&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.SetupapiComeFromType</signature>
                        <name>come_from</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rollback_reason</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass424_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;loading_data&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>loading_action</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass434_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ViewAllDriverVersions&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ViewAllDriverVersions&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ViewAllDriverVersions&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ViewAllDriverVersions&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>location_of_reg</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass445_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ChangeToSettingsSchedule&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow</signature>
                        <name>settingsWindow</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass446_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;InstallVersonDriverInSettingsHiddenDevicesList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow</signature>
                        <name>settingsWindow</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass453_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;RollbackDriverInHistory&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;RollbackDriverInHistory&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_desc</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass456_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;RollbackDriver&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;RollbackDriver&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_desc</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass471_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetRollbackDriverDesc&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetRollbackDriverDesc&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetRollbackDriverDesc&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetRollbackDriverDesc&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetRollbackDriverDesc&gt;b__4</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass481_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;UpdateToCompleted&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>driverVM</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass482_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;dispatcherTimer_Tick&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass498_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;GetRollbackDriverDescUpdateList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass499_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;GetRollbackDriverDateUpdateList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass500_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;RollbackDriverUpdateList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;RollbackDriverUpdateList&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_desc</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass503_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/o</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;RollbackDriverInHistoryUpdateList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;RollbackDriverInHistoryUpdateList&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_desc</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.MainWindowViewModel/&lt;&gt;c__DisplayClass504_0</name>
                <newname>DriverEasyWPF.ViewModels.MainWindowViewModel/p</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;completed_dispatcherTimer_Tick&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.NotificationObject</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RaisePropertyChanged</name>
                    </method>
                    <method>
                        <signature>System.Windows.Data.BindingExpressionBase(System.Windows.DependencyProperty, System.Windows.Data.BindingBase)</signature>
                        <name>SetBinding</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ProgressPrompt</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Description</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Prompt</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.RestoreUninstallResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>IsDisplay</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsSucceed</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>NeedRestart</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.RollbackReasonWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckDeviceNotWork</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckOtherReason</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckPreviousVersionReliable</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickAgree</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickYes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckDeviceNotWorkCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckOtherReasonCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckPreviousVersionReliableCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickAgreeCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickYesCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DevicePath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Check_Agree_Send_Log</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Check_Device_Not_Work</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Check_Other_Reason</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Check_Previous_Version_Reliable</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_Main_VM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckDeviceNotWorkCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckOtherReasonCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckPreviousVersionReliableCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickAgreeCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickYesCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DevicePath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Check_Agree_Send_Log</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Check_Device_Not_Work</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Check_Other_Reason</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Check_Previous_Version_Reliable</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_Main_VM</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckDeviceNotWorkCommand&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckOtherReasonCommand&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckPreviousVersionReliableCommand&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickAgreeCommand&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickYesCommand&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DRIVER_NOT_WORK_FOR_DEVICE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OTHER_REASON</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PREVIOUS_VERSION_IS_MORE_RELIABLE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>device_path</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_check_agree_send_log</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_check_device_not_work</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_check_other_reason</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_check_previous_version_reliable</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>main_vm</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckDeviceNotWorkCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckOtherReasonCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckPreviousVersionReliableCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickAgreeCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickYesCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DevicePath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Check_Agree_Send_Log</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Check_Device_Not_Work</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Check_Other_Reason</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Check_Previous_Version_Reliable</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>Main_VM</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ScanViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetScanInfo</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ScanNow</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickScanNowCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.ScanInfoDetail()</signature>
                        <name>get_ScanInfoDetail</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickScanNowCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.ScanInfoDetail)</signature>
                        <name>set_ScanInfoDetail</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickScanNowCommand&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.ScanInfoDetail</signature>
                        <name>_scanInfoDetail</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickScanNowCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.ScanInfoDetail()</signature>
                        <name>ScanInfoDetail</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ScanningViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Scanning</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeviceDesc</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProgressValue</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ScanningCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeviceDesc</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProgressValue</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ScanningCommand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ScanningCommand&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_deviceDesc</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_progressValue</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DeviceDesc</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ProgressValue</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ScanningCommand</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SettingsWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;save_proxy&gt;b__272_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>BackToScanPage</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>BackupBrowse</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeHelpImproveOption</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeHelpImproveOption_bk</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ChangeLanguage</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.ProxyResultType(DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>CheckAddressAndPort</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.ProxyResultType()</signature>
                        <name>CheckAddressAndPortResult</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckAutoRunWhenStart</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckAutoScanWhenLaunched</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckHelpImprove</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckScheduledScan</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckUsingDefaultProxy</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckUsingProxy</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickSchedule</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickSystemRestoreConfiguration</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickTestProxy</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUndo</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClicksAutoCreateRestorePoint</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClicksAutoCreateRestorePoint_old</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CloseUpdatingTip</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateScheduledScan</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteScheduledScan</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>EditScheduledScan</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetSaveFileName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitHelpImproveOptions</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitLanguageOptions</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAddressValid</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsPortValid</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>LicensePropertyChangedCallBack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenSystemRestore</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshHelpImproveOptions</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshIgnoreDeviceList</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RefreshLanguage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshSettings</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>RegisterInStartup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllSettingToUI</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Settings)</signature>
                        <name>ResetSettingToUI</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ResetSettings</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ResetSettingsConnection</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ResumeTimer</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Save</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.SettingsProperties)</signature>
                        <name>SaveSettings</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.SettingsProperties, bool)</signature>
                        <name>SaveWithCheckProxy</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>SaveWithCheckProxy_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs, DriverEasyWPF.Views.WaitingWindow, DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>SaveWithCheckProxy_RunWorkComplete</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>Save_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs, DriverEasyWPF.Views.WaitingWindow, DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>Save_RunWorkComplete</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetCurrentHelpImproveOptionNo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetCurrentLanguage</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ShowHiddenDevice</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>StopTimer</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>TestConnection</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs, DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>Test_DoWork</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs, DriverEasyWPF.Views.WaitingWindow, DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>Test_RunWorkComplete</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateSettingValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>check_backup_to_path_valid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>format_schedule_task_name</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_BackToScanPageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_BackupBrowseCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BackupToPath</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeHelpImproveOptionCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ChangeLanguageCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckAutoRunWhenStartCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckAutoScanWhenLaunchedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckHelpImproveCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckUsingDefaultProxyCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckUsingProxyCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickScheduleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSystemRestoreConfigurationCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickTestProxyCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUndoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClicksAutoCreateRestorePointCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CloseUpdatingTipCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentHelpImproveOptionNo</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentHelpImproveOptionSelectedNo</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentLanguageNo</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_EditScheduleCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnableScheduleScan</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnableShowHiddenDevice</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_GetDriverFromWindowsUpdate</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.SelectionItemNotified&gt;()</signature>
                        <name>get_HelpImproveOptionList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>get_IgnoreDeviceList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAutoCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAutoRunWhenStart</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAutoScanWhenLaunched</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsBackupAutoSelectAll</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsHelpDebug</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPlaySound</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUsingProxy</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Updating_Tip</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Time_To_Show_Undo_And_Close</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Updating_Settings</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Globalization.CultureInfo&gt;()</signature>
                        <name>get_LangList</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>get_Last_Settings</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenSystemRestoreCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyAddress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyPassword</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyPort</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyUserName</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ResetSettingsCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ResetSettingsConnectionCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ResumeTimerCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SaveCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Schedule_Task_Trigger_Name</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>get_Settings</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_SettingsLicense</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Stack`1&lt;Easeware.Driver.Core.Domain.Settings&gt;()</signature>
                        <name>get_Settings_History</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.SettingsWindow()</signature>
                        <name>get_Settings_Window</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ShowHiddenDeviceCommand</name>
                    </method>
                    <method>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>get_Show_Updating_Settings_Timer</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_StopTimerCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Updating_Message</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Updating_Message_Width</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>get_scheduled_name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>is_already_using_proxy</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.SettingsProperties, bool)</signature>
                        <name>save_proxy</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>save_settings_for_backup</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_BackToScanPageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_BackupBrowseCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BackupToPath</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeHelpImproveOptionCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ChangeLanguageCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckAutoRunWhenStartCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckAutoScanWhenLaunchedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckHelpImproveCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckUsingDefaultProxyCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckUsingProxyCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickScheduleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSpeedLimitedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSystemRestoreConfigurationCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickTestProxyCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUndoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClicksAutoCreateRestorePointCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CloseUpdatingTipCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurrentHelpImproveOptionNo</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurrentHelpImproveOptionSelectedNo</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CurrentLanguageNo</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_EditScheduleCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnableScheduleScan</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnableShowHiddenDevice</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_GetDriverFromWindowsUpdate</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.SelectionItemNotified&gt;)</signature>
                        <name>set_HelpImproveOptionList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>set_IgnoreDeviceList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAutoCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAutoRunWhenStart</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAutoScanWhenLaunched</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsBackupAutoSelectAll</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsHelpDebug</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPlaySound</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUsingProxy</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Updating_Tip</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Time_To_Show_Undo_And_Close</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Updating_Settings</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Globalization.CultureInfo&gt;)</signature>
                        <name>set_LangList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Settings)</signature>
                        <name>set_Last_Settings</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenSystemRestoreCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyAddress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyPassword</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyPort</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyUserName</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ResetSettingsCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ResetSettingsConnectionCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ResumeTimerCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SaveCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Schedule_Task_Trigger_Name</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Settings)</signature>
                        <name>set_Settings</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_SettingsLicense</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Stack`1&lt;Easeware.Driver.Core.Domain.Settings&gt;)</signature>
                        <name>set_Settings_History</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.SettingsWindow)</signature>
                        <name>set_Settings_Window</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ShowHiddenDeviceCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Threading.DispatcherTimer)</signature>
                        <name>set_Show_Updating_Settings_Timer</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_StopTimerCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Updating_Message</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Updating_Message_Width</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_updating_message</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>stop_updating_settings_timer</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>undo_settings</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.SettingsProperties, Easeware.Driver.Core.Domain.Settings)</signature>
                        <name>update_settings</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>updating_settings_wait_completed_timer_tick</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>updating_settings_wait_completed_timer_tick_seconds</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;BackToScanPageCommand&gt;k__BackingField</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;BackupBrowseCommand&gt;k__BackingField</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeHelpImproveOptionCommand&gt;k__BackingField</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ChangeLanguageCommand&gt;k__BackingField</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckAutoRunWhenStartCommand&gt;k__BackingField</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckAutoScanWhenLaunchedCommand&gt;k__BackingField</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckHelpImproveCommand&gt;k__BackingField</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckUsingDefaultProxyCommand&gt;k__BackingField</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckUsingProxyCommand&gt;k__BackingField</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickScheduleCommand&gt;k__BackingField</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSpeedLimitedCommand&gt;k__BackingField</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSystemRestoreConfigurationCommand&gt;k__BackingField</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickTestProxyCommand&gt;k__BackingField</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUndoCommand&gt;k__BackingField</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClicksAutoCreateRestorePointCommand&gt;k__BackingField</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CloseUpdatingTipCommand&gt;k__BackingField</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;EditScheduleCommand&gt;k__BackingField</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenSystemRestoreCommand&gt;k__BackingField</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ResetSettingsCommand&gt;k__BackingField</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ResetSettingsConnectionCommand&gt;k__BackingField</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ResumeTimerCommand&gt;k__BackingField</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SaveCommand&gt;k__BackingField</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ShowHiddenDeviceCommand&gt;k__BackingField</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;StopTimerCommand&gt;k__BackingField</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHECK_SCHEDULE_FILE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREATE_SCHEDULE_ARGUMENT</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DELETE_SCHEDULE_ARGUMENT</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>LicenseProperty</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SCHEDULED_SCAN_TASK_NAME</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SHOW_UPDATING_SETTINGS_TIME</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>backupToPath</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentHelpImproveOptionNo</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentHelpImproveOptionSelectedNo</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentLanguageNo</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>enableScheduleScan</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>enableShowHiddenDevice</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>getDriverFromWindowsUpdate</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.SelectionItemNotified&gt;</signature>
                        <name>helpImproveOptionList</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>ignoreDeviceList</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isAutoCreateRestorePoint</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isAutoRunWhenStart</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isAutoScanWhenLaunched</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isBackupAutoSelectAll</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isHelpDebug</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPlaySound</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isUsingProxy</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_check_proxy_after_save</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_updating_tip</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_time_to_show_undo_and_close</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_updating_settings</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Globalization.CultureInfo&gt;</signature>
                        <name>langList</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Settings</signature>
                        <name>last_settings</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>mainViewModel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>proxyAddress</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>proxyPassword</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>proxyPort</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>proxyUserName</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.FolderBrowserDialog</signature>
                        <name>saveFileDialog</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>schedule_task_trigger_name</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>seconds_elapsed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Settings</signature>
                        <name>settings</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>settingsLicense</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;Easeware.Driver.Core.Domain.Settings&gt;</signature>
                        <name>settings_history</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow</signature>
                        <name>settings_window</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>show_updating_settings_timer</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updating_message</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>updating_message_width</name>
                        <newname>am</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>BackToScanPageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>BackupBrowseCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BackupToPath</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeHelpImproveOptionCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ChangeLanguageCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckAutoRunWhenStartCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckAutoScanWhenLaunchedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckHelpImproveCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckUsingDefaultProxyCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckUsingProxyCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickScheduleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSpeedLimitedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSystemRestoreConfigurationCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickTestProxyCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUndoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClicksAutoCreateRestorePointCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CloseUpdatingTipCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentHelpImproveOptionNo</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentHelpImproveOptionSelectedNo</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentLanguageNo</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>EditScheduleCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EnableScheduleScan</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EnableShowHiddenDevice</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>GetDriverFromWindowsUpdate</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.SelectionItemNotified&gt;()</signature>
                        <name>HelpImproveOptionList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>IgnoreDeviceList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAutoCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAutoRunWhenStart</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAutoScanWhenLaunched</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsBackupAutoSelectAll</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsHelpDebug</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPlaySound</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUsingProxy</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Updating_Tip</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Time_To_Show_Undo_And_Close</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Updating_Settings</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;System.Globalization.CultureInfo&gt;()</signature>
                        <name>LangList</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>Last_Settings</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenSystemRestoreCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyAddress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyPassword</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyPort</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyUserName</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ResetSettingsCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ResetSettingsConnectionCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ResumeTimerCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SaveCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Schedule_Task_Trigger_Name</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>Settings</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>SettingsLicense</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Stack`1&lt;Easeware.Driver.Core.Domain.Settings&gt;()</signature>
                        <name>Settings_History</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.SettingsWindow()</signature>
                        <name>Settings_Window</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ShowHiddenDeviceCommand</name>
                    </property>
                    <property>
                        <signature>System.Windows.Threading.DispatcherTimer()</signature>
                        <name>Show_Updating_Settings_Timer</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>StopTimerCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Updating_Message</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Updating_Message_Width</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.SettingsWindowViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo(string)</signature>
                        <name>&lt;InitLanguageOptions&gt;b__288_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,System.Globalization.CultureInfo&gt;</signature>
                        <name>&lt;&gt;9__288_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c__DisplayClass250_0</name>
                <newname>DriverEasyWPF.ViewModels.SettingsWindowViewModel/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;ClickTestProxy&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;ClickTestProxy&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow</signature>
                        <name>settingWindow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>waitingWindow</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c__DisplayClass272_0</name>
                <newname>DriverEasyWPF.ViewModels.SettingsWindowViewModel/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;save_proxy&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>waitingWindow</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c__DisplayClass275_0</name>
                <newname>DriverEasyWPF.ViewModels.SettingsWindowViewModel/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>&lt;Save&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow</signature>
                        <name>settingsWindow</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c__DisplayClass275_1</name>
                <newname>DriverEasyWPF.ViewModels.SettingsWindowViewModel/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>&lt;Save&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SettingsWindowViewModel/&lt;&gt;c__DisplayClass275_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>waitingWindow</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ShareWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(bool, DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickShare</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickStar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenGuideBookWindow</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenWebsite</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickShareCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickStarCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowNextTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUpdatedSussessful</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainVM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenGuideBookWindowCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenWebsiteCommand</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>get_Settings</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StarLevel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickShareCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickStarCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowNextTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUpdatedSussessful</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainVM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenGuideBookWindowCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenWebsiteCommand</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Settings)</signature>
                        <name>set_Settings</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StarLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickShareCommand&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickStarCommand&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenGuideBookWindowCommand&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenWebsiteCommand&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isShowNextTime</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isUpdatedSussessful</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>mainVM</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Settings</signature>
                        <name>settings</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>starLevel</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickShareCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickStarCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowNextTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUpdatedSussessful</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainVM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenGuideBookWindowCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenWebsiteCommand</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>Settings</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StarLevel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.SystemUpdateWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;ClickUpdateNow&gt;b__53_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCancel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUpdateNow</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartDownload</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DownloadCompletedHandler</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>download_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>download_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCancelCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUpdateNowCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadSpeed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Has_Click_Update_Now</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_Main_VM</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewVersion</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SystemProgress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SystemUpdateName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WhatsNewBody</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.SystemUpdateWindow()</signature>
                        <name>get_systemUpdateWindow</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DownloadCompletedHandler</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCancelCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUpdateNowCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadSpeed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Has_Click_Update_Now</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_Main_VM</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewVersion</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SystemProgress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SystemUpdateName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WhatsNewBody</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.SystemUpdateWindow)</signature>
                        <name>set_systemUpdateWindow</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCancelCommand&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUpdateNowCommand&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SystemUpdateWindow</signature>
                        <name>&lt;systemUpdateWindow&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DownloadCompletedHandler</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadHelper</signature>
                        <name>_download</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>downloadCompleted</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadSpeed</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driver_easy_setup_file_url</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>has_click_update_now</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>localFilePath</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>main_vm</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>newVersion</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>systemUpdateName</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>systemprogress</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>whatsNewBody</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCancelCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUpdateNowCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadSpeed</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Has_Click_Update_Now</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>Main_VM</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewVersion</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SystemProgress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SystemUpdateName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WhatsNewBody</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.SystemUpdateWindow()</signature>
                        <name>systemUpdateWindow</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DownloadCompletedHandler</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ToolsViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;DownloadAll&gt;b__244_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Back</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BackupDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Browse</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckFileValid</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckFileValid_old</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckSelectedFileOrFolder</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickBackup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickPrevious</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickRestoreBrowse</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickRestoreContinue</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickrdoSacn</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickrdoUpload</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CompletedGetData</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Continue</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Continue_old</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoBackup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DoRestore</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Download</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DownloadAll</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs, DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>DownloadAllV_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetNetworkCardDriver</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetNetworkFileData</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetOpenFileName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetRestoreList</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetSaveFileName</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetTempUnzipPath</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Help</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Info</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>InitRestoreData</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Pause</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>PreviewDrop</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDeviceCount</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDriverCountAndSaveFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;(string)</signature>
                        <name>ReloadBackupDrivers</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;(string[])</signature>
                        <name>ReloadDriverTree</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestartUninstall</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreDriver</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>RestoreListWorker_DoWork</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>RestoreListWorker_RunWorkComplete</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Scan</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SelectCheckBox</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource(System.Drawing.Icon)</signature>
                        <name>ToIcon2ImageSource</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Uninstall</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UninstallComplete</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UninstallDriver</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>UninstallWorker_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>UninstallWorker_RunWorkerCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;)</signature>
                        <name>UpdateDevice</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;)</signature>
                        <name>UpdateRestoreDeviceTree</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;)</signature>
                        <name>UpdateTree</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Upload</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DownloadAllCompleted</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>binding_offline_selected_event</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>detectDeviceWorker_DoWork</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>detectDeviceWorker_RunWorkerCompleted</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>download_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>download_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs, DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>download_all_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs, DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>download_all_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>download_next</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickBackCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickBackupCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickBrowseCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickContinueCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDownloadAllCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDownloadCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHelpCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickInfoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPauseCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPreviousCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRestoreBrowseCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRestoreContinueCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickScanCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUninstallBackgroundCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUninstallCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUploadCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickrdoSacnCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickrdoUploadScanCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentPage</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.RestorePageType()</signature>
                        <name>get_CurrentRestorePage</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage()</signature>
                        <name>get_Current_Tools_Page</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DeviceCount</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DialogWindowViewModel()</signature>
                        <name>get_DialogViewModel</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>get_DriverFileList</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;()</signature>
                        <name>get_DriverTrees</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDownloadCompleted</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDriverBackup</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Offline_Download</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Offline_Scan_Succeed</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_Is_Offline_Selected_All</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>get_License</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainVM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainViewModel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NotDownloadbtn</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Offline_Scan_File_Name</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Offline_Selected_Count</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_PreviewDropCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RdoGetScanResult</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RdoUploadScanResult</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RestoreFilePath</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;()</signature>
                        <name>get_RestoreTrees</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SaveTo</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SelectedCheckBoxCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TxtUploadFrom</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_device_id_path</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>get_driver_view_model_for_uninstall</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriver()</signature>
                        <name>get_tools_driver_for_uninstall</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_uninstall_device_desc</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_uninstall_number</name>
                    </method>
                    <method>
                        <signature>void(object, DriverEasyWPF.ViewModels.DriverViewModel/DriverEventArgs)</signature>
                        <name>handle_driver_select_event</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>init_offline_dir</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>officeLineScan_DoWork</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>officeLineScan_RunWorkerCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_single_selected_num</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DownloadAllCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>restoreWorker_DoWork</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>restoreWorker_RunWorkerCompleted</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickBackCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickBackupCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickBrowseCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickContinueCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDownloadAllCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDownloadCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHelpCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickInfoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickPauseCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickPreviousCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRestoreBrowseCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRestoreContinueCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickScanCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUninstallBackgroundCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUninstallCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUploadCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickrdoSacnCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickrdoUploadScanCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentPage</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.RestorePageType)</signature>
                        <name>set_CurrentRestorePage</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.CurrentToolsPage)</signature>
                        <name>set_Current_Tools_Page</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DeviceCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DialogWindowViewModel)</signature>
                        <name>set_DialogViewModel</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>set_DriverFileList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;)</signature>
                        <name>set_DriverTrees</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDownloadCompleted</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDriverBackup</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Offline_Download</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Offline_Scan_Succeed</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_Is_Offline_Selected_All</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License)</signature>
                        <name>set_License</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainVM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainViewModel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NotDownloadbtn</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Offline_Scan_File_Name</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Offline_Selected_Count</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_PreviewDropCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RdoGetScanResult</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RdoUploadScanResult</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RestoreFilePath</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;)</signature>
                        <name>set_RestoreTrees</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SaveTo</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SelectedCheckBoxCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TxtUploadFrom</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_device_id_path</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>set_driver_view_model_for_uninstall</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Tools.Common.ToolsDriver)</signature>
                        <name>set_tools_driver_for_uninstall</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_uninstall_device_desc</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_uninstall_number</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>uninstall_background</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>uninstall_background_completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>uninstall_background_work</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>uninstall_complete</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>uninstall_driver_background</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickBackCommand&gt;k__BackingField</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickBackupCommand&gt;k__BackingField</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickBrowseCommand&gt;k__BackingField</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickContinueCommand&gt;k__BackingField</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDownloadAllCommand&gt;k__BackingField</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDownloadCommand&gt;k__BackingField</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHelpCommand&gt;k__BackingField</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickInfoCommand&gt;k__BackingField</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickPauseCommand&gt;k__BackingField</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickPreviousCommand&gt;k__BackingField</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRestoreBrowseCommand&gt;k__BackingField</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRestoreContinueCommand&gt;k__BackingField</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickScanCommand&gt;k__BackingField</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUninstallBackgroundCommand&gt;k__BackingField</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUninstallCommand&gt;k__BackingField</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUploadCommand&gt;k__BackingField</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickrdoSacnCommand&gt;k__BackingField</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickrdoUploadScanCommand&gt;k__BackingField</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;MainVM&gt;k__BackingField</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;MainViewModel&gt;k__BackingField</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;PreviewDropCommand&gt;k__BackingField</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RestoreFilePath&gt;k__BackingField</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SelectedCheckBoxCommand&gt;k__BackingField</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;device_id_path&gt;k__BackingField</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>&lt;driver_view_model_for_uninstall&gt;k__BackingField</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriver</signature>
                        <name>&lt;tools_driver_for_uninstall&gt;k__BackingField</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;uninstall_device_desc&gt;k__BackingField</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;uninstall_number&gt;k__BackingField</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DownloadAllCompleted</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>NeedRestart</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OFFLINE_SCAN_DEFUALT_SAVE_DIR</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OFFLINE_SCAN_EXT</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OFFLINE_SCAN_FILE_NAME</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ScanServerUrl</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ZipFileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_backupRootDir</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cur_download_count</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriver</signature>
                        <name>currentDriver</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentInterface</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentPage</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.RestorePageType</signature>
                        <name>currentRestorePage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage</signature>
                        <name>current_tools_page</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriversViewModel</signature>
                        <name>currentlySelectedItem</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>deviceCount</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DialogWindowViewModel</signature>
                        <name>dialogViewModel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DriverFileDownloader</signature>
                        <name>download</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>driverFileList</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>driverFiles</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>driverModer</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;</signature>
                        <name>driverTrees</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>driver_vm_list</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDownloadCompleted</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDriverBackup</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_offline_download</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_offline_scan_succeed</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>is_offline_selected_all</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>license</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>mainWindow</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>notDownloadbtn</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>offline_scan_file_name</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>offline_selected_count</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.OpenFileDialog</signature>
                        <name>openFileDialog</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>rdoGetScanResult</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>rdoUploadScanResult</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;</signature>
                        <name>restoreClasses</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.RestoreUninstallResult</signature>
                        <name>restoreResult</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;</signature>
                        <name>restoreTrees</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.SaveFileDialog</signature>
                        <name>saveFileDialog</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>saveRootPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>saveTo</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>txtUploadFrom</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>uninstallSucceed</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>waitingWindow</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.WaitingWindow</signature>
                        <name>wating</name>
                        <newname>ay</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickBackCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickBackupCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickBrowseCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickContinueCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDownloadAllCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDownloadCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHelpCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickInfoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPauseCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPreviousCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRestoreBrowseCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRestoreContinueCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickScanCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUninstallBackgroundCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUninstallCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUploadCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickrdoSacnCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickrdoUploadScanCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentPage</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.RestorePageType()</signature>
                        <name>CurrentRestorePage</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.CurrentToolsPage()</signature>
                        <name>Current_Tools_Page</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DeviceCount</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DialogWindowViewModel()</signature>
                        <name>DialogViewModel</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>DriverFileList</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;()</signature>
                        <name>DriverTrees</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDownloadCompleted</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDriverBackup</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Offline_Download</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Offline_Scan_Succeed</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>Is_Offline_Selected_All</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>License</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainVM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainViewModel</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NotDownloadbtn</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Offline_Scan_File_Name</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Offline_Selected_Count</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>PreviewDropCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RdoGetScanResult</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RdoUploadScanResult</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RestoreFilePath</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriversViewModel&gt;()</signature>
                        <name>RestoreTrees</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SaveTo</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SelectedCheckBoxCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TxtUploadFrom</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>device_id_path</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>driver_view_model_for_uninstall</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriver()</signature>
                        <name>tools_driver_for_uninstall</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>uninstall_device_desc</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>uninstall_number</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DownloadAllCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ToolsViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.ToolsViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;CompletedGetData&gt;b__235_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;DownloadAll&gt;b__244_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__88_0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__88_1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__88_2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__88_3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_single_selected_num&gt;b__91_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__235_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__244_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__88_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__88_1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__88_2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__88_3</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__91_0</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ToolsViewModel/&lt;&gt;c__DisplayClass246_0</name>
                <newname>DriverEasyWPF.ViewModels.ToolsViewModel/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>&lt;download_next&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>&lt;download_next&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>driverVM</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.ToolsViewModel/OperateStep</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel/OperateStep</signature>
                        <name>DownloadPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel/OperateStep</signature>
                        <name>FirstPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel/OperateStep</signature>
                        <name>ScanPage</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ToolsViewModel/OperateStep</signature>
                        <name>UploadPage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.TrialLicenceViewModel</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>&lt;get_ClickStartSubscriptionCommand&gt;b__3_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.TrialLicenceViewModel(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Timer_Tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickPricingPlansCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickStartSubscriptionCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUnsubscribeCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUserManualCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DayLeft</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_Main_VM</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TimeLeftHour</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TimeLeftMin</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TimeLeftSecond</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TrialTitleType</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refreshContent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DayLeft</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_Main_VM</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TimeLeftHour</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TimeLeftMin</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TimeLeftSecond</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TrialTitleType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;Main_VM&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dayLeft</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.TrialLicenceViewModel</signature>
                        <name>instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timeLeftHour</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timeLeftMin</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timeLeftSecond</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>timer</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>trialTitleType</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickPricingPlansCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickStartSubscriptionCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUnsubscribeCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUserManualCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DayLeft</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>Main_VM</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TimeLeftHour</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TimeLeftMin</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TimeLeftSecond</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TrialTitleType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.TrialLicenceViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.TrialLicenceViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>&lt;get_ClickPricingPlansCommand&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>&lt;get_ClickUnsubscribeCommand&gt;b__7_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>&lt;get_ClickUserManualCommand&gt;b__5_0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.TrialLicenceViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;object&gt;</signature>
                        <name>&lt;&gt;9__5_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;object&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;object&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, bool, int32&amp;, DriverEasyWPF.Models.Driver_View_Model_Type)</signature>
                        <name>AddToDriverViewModelList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, bool, int32&amp;, bool, bool)</signature>
                        <name>AddToDriverViewModelList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.DriverFile&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;, bool, int32&amp;, DriverEasyWPF.Models.Driver_View_Model_Type)</signature>
                        <name>AddToDriverViewModelList_bk_20240602</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BindingDriverSelectedEvent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ChangeToCongratulation</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckMissingHeaderTitle</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckOutdatedHeaderTitle</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CheckUnpluggedHeaderTitle</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCompletedHeaderTitle</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickCompletedHeaderTitle_bk</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDeviceDesc</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickMissingHeaderTitle</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickMissingHeaderTitle_bk</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickOutdatedHeaderTitle</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickOutdatedHeaderTitle_bk</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUnpluggedHeaderTitle</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUnpluggedHeaderTitle_bk</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUpToDateHeaderTitle</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickUpToDateHeaderTitle_bk</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>CompletedSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DeleteDriverFile</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DeleteDriverFileForce</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>DeletePluggedItem</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ItemsControl, DriverEasyWPF.ViewModels.DriverViewModel, System.Windows.Controls.Grid)</signature>
                        <name>DoDropdownAnimation</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DownloadAll</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DriverDetail</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>FormatTheDeviceTitle</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>GetDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel()</signature>
                        <name>GetDriverItem</name>
                    </method>
                    <method>
                        <signature>string(bool)</signature>
                        <name>GetImageUrl</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>GetUptodateDeviceList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, bool)</signature>
                        <name>HiddenItem</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Install</name>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>LoadDataFromDriversFile</name>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>LoadDataFromDriversFileTest</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadUptoDateDevcies</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>LoadUptoDateDevciesToUpdateList</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenFileLocation</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>RefreshNeedToShow</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshTotalDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ScrollChangedAction</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ShowSelectedHiddenDevice</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SkipUpdate</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>SummaryDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>SummaryNeedShow</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>Update_Data_List_CollectionChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, System.Windows.Controls.Grid, float64)</signature>
                        <name>UseTimerToHideDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ViewDetail</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>add_all_items_displayed_desc</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>add_completed_header_title</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>add_up_to_date_header_title</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>click_more</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>contract_completed_list</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ScrollViewer, DriverEasyWPF.Views.Pages.UpdatePage, bool)</signature>
                        <name>deal_with_viewport_scrolling</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ScrollViewer, System.Windows.Controls.ScrollChangedEventArgs, bool)</signature>
                        <name>deal_with_viewport_scrolling_bk</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ScrollViewer, System.Windows.Controls.ScrollChangedEventArgs, bool)</signature>
                        <name>deal_with_viewport_scrolling_stackpanel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ScrollViewer, System.Windows.Controls.ScrollChangedEventArgs, DriverEasyWPF.Views.Pages.UpdatePage, bool)</signature>
                        <name>deal_with_viewport_scrolling_test</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs, System.Windows.Controls.Grid)</signature>
                        <name>dispatcherTimer_Tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckMissingHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckOutdatedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CheckUnpluggedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickCompletedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDetailCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverNameCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickInstallCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickMissingHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickOutdatedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRollbackDriverInHistoryCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUnpluggedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUpToDateHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickUpdateCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_Click_More_Command</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_CompletedDriverViewModel</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Completed_Count</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Completed_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DeleteDriverFileCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DeleteDriverFileForceCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_DownloadAllCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_IgnoreDriverViewModel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsScanCongratulation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowCompletedList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsZeroDevice</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Click_Header_Title</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_Is_Missing_Checked</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_Is_Outdated_Checked</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_Is_Unplugged_Checked</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainVM</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_MissDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Missing_Count</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Missing_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_MouseEnterStatusImgCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_NewDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenFileLocationCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Outdated_Count</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Outdated_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_RollbackDriverCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ScrollChangedCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SelectDeviceCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SelectDriverCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Selected_Driver_Num</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ShowSelectedHiddenDeviceCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Show_Completed_Header</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Show_Missing_Header</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Show_Outdated_Header</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Show_Unplugged_Header</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Show_Up_To_Date_Header</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_SkipUpdateCommand</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalDeviceCount</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>get_UnplugedDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Unplugged_Count</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Unplugged_Desc_Height</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Unplugged_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Up_To_Date_Count</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Up_To_Date_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>get_Update_Data_List</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.Pages.UpdatePage()</signature>
                        <name>get_Update_Page</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>get_UptoDateDeviceList</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel()</signature>
                        <name>get_UptoDateViewModel</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ViewAllDriverVersionsCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ViewDetailCommand</name>
                    </method>
                    <method>
                        <signature>float64(System.Windows.FrameworkElement, System.Windows.Controls.ScrollViewer)</signature>
                        <name>get_vertial_offset_in_scroll</name>
                    </method>
                    <method>
                        <signature>void(object, DriverEasyWPF.ViewModels.DriverViewModel/DriverEventArgs)</signature>
                        <name>handle_driver_select_event</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_commands</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>refresh_can_uninstall</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>refresh_can_uninstall_update_list</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_driver_num</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_selected_driver_num</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_single_selected_driver_num</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>refresh_update_data_list</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>remove_driver_selected_event</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>remove_printer_drivers</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow, DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>restartUpdate</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckMissingHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckOutdatedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CheckUnpluggedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickCompletedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDetailCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverNameCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickInstallCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickMissingHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickOutdatedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRollbackDriverInHistoryCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUnpluggedHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUpToDateHeaderTitleCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickUpdateCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_Click_More_Command</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_CompletedDriverViewModel</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Completed_Count</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Completed_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DeleteDriverFileCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DeleteDriverFileForceCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_DownloadAllCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_IgnoreDriverViewModel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsScanCongratulation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowCompletedList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsZeroDevice</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Click_Header_Title</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_Is_Missing_Checked</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_Is_Outdated_Checked</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_Is_Unplugged_Checked</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainVM</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_MissDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Missing_Count</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Missing_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_MouseEnterStatusImgCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_NewDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenFileLocationCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Outdated_Count</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Outdated_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_RollbackDriverCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ScrollChangedCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SelectDeviceCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SelectDriverCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Selected_Driver_Num</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ShowSelectedHiddenDeviceCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Show_Completed_Header</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Show_Missing_Header</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Show_Outdated_Header</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Show_Unplugged_Header</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Show_Up_To_Date_Header</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_SkipUpdateCommand</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalDeviceCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DeviceListViewModel)</signature>
                        <name>set_UnplugedDeviceListViewModel</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Unplugged_Count</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Unplugged_Desc_Height</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Unplugged_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Up_To_Date_Count</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Up_To_Date_Header_Vertial_Offset</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;)</signature>
                        <name>set_Update_Data_List</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.Pages.UpdatePage)</signature>
                        <name>set_Update_Page</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>set_UptoDateDeviceList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel)</signature>
                        <name>set_UptoDateViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ViewAllDriverVersionsCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ViewDetailCommand</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckMissingHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckOutdatedHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CheckUnpluggedHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickCompletedHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDetailCommand&gt;k__BackingField</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDeviceDescCommand&gt;k__BackingField</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverNameCommand&gt;k__BackingField</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickInstallCommand&gt;k__BackingField</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickMissingHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickOutdatedHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRollbackDriverInHistoryCommand&gt;k__BackingField</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUnpluggedHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUpToDateHeaderTitleCommand&gt;k__BackingField</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickUpdateCommand&gt;k__BackingField</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;Click_More_Command&gt;k__BackingField</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;DeleteDriverFileCommand&gt;k__BackingField</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;DeleteDriverFileForceCommand&gt;k__BackingField</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;DownloadAllCommand&gt;k__BackingField</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;MainVM&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;MouseEnterStatusImgCommand&gt;k__BackingField</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenFileLocationCommand&gt;k__BackingField</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;RollbackDriverCommand&gt;k__BackingField</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ScrollChangedCommand&gt;k__BackingField</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SelectDeviceCommand&gt;k__BackingField</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SelectDriverCommand&gt;k__BackingField</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ShowSelectedHiddenDeviceCommand&gt;k__BackingField</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;SkipUpdateCommand&gt;k__BackingField</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ViewAllDriverVersionsCommand&gt;k__BackingField</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ViewDetailCommand&gt;k__BackingField</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONTROL_NAME_COMPLETED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONTROL_NAME_MISSING</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONTROL_NAME_OUTDATED</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONTROL_NAME_UNPLUGGED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CONTROL_NAME_UP_TO_DATE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>DRIVER_ITEM_BOTTOM_HEIGHT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>DRIVER_ITEM_HEIGHT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NETWORK_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPPRINTER_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PRINTER_CLASS_GUID</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>_missDeviceListViewModel</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>_newDeviceListViewModel</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>_unplugedDeviceListViewModel</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>_uptoDateDeviceList</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Panel</signature>
                        <name>btn3_orgin_parent</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>completedDriverViewModel</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>completed_count</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>completed_header_vertial_offset</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>dispatcherTimer</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel</signature>
                        <name>ignoreDriverViewModel</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isScanCongratulation</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isShowCompletedList</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isZeroDevice</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_click_header_title</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>is_missing_checked</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>is_outdated_checked</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>is_unplugged_checked</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>missing_count</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>missing_header_vertial_offset</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>outdated_count</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>outdated_header_vertial_offset</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>previousVerticalOffset</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>selected_driver_num</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>show_completed_header</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>show_missing_header</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>show_outdated_header</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>show_unplugged_header</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>show_up_to_date_header</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>totalDeviceCount</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>unplugged_count</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>unplugged_desc_height</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>unplugged_header_vertial_offset</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>up_to_date_count</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>up_to_date_header_vertial_offset</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;</signature>
                        <name>update_data_list</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>update_list_header_button_default_height</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.Pages.UpdatePage</signature>
                        <name>update_page</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel</signature>
                        <name>uptoDateViewModel</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckMissingHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckOutdatedHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CheckUnpluggedHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickCompletedHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDetailCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDeviceDescCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverNameCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickInstallCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickMissingHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickOutdatedHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRollbackDriverInHistoryCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUnpluggedHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUpToDateHeaderTitleCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickUpdateCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>Click_More_Command</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>CompletedDriverViewModel</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Completed_Count</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Completed_Header_Vertial_Offset</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DeleteDriverFileCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DeleteDriverFileForceCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>DownloadAllCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>IgnoreDriverViewModel</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsScanCongratulation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowCompletedList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsZeroDevice</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Click_Header_Title</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>Is_Missing_Checked</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>Is_Outdated_Checked</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>Is_Unplugged_Checked</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainVM</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>MissDeviceListViewModel</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Missing_Count</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Missing_Header_Vertial_Offset</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>MouseEnterStatusImgCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>NewDeviceListViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenFileLocationCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Outdated_Count</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Outdated_Header_Vertial_Offset</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>RollbackDriverCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ScrollChangedCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SelectDeviceCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SelectDriverCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Selected_Driver_Num</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ShowSelectedHiddenDeviceCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Show_Completed_Header</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Show_Missing_Header</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Show_Outdated_Header</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Show_Unplugged_Header</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Show_Up_To_Date_Header</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>SkipUpdateCommand</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalDeviceCount</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.DeviceListViewModel()</signature>
                        <name>UnplugedDeviceListViewModel</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Unplugged_Count</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Unplugged_Desc_Height</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Unplugged_Header_Vertial_Offset</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Up_To_Date_Count</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Up_To_Date_Header_Vertial_Offset</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.ViewModels.DriverViewModel&gt;()</signature>
                        <name>Update_Data_List</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.Pages.UpdatePage()</signature>
                        <name>Update_Page</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>UptoDateDeviceList</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel()</signature>
                        <name>UptoDateViewModel</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ViewAllDriverVersionsCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ViewDetailCommand</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;BindingDriverSelectedEvent&gt;b__303_0</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__338_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__338_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__338_4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_1</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_2</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_3</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_4</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_5</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_6</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_7</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFile&gt;b__300_8</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>int32(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_1</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_11</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_2</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_3</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_4</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_5</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_6</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_7</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_8</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadDataFromDriversFileTest&gt;b__301_9</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;LoadUptoDateDevciesToUpdateList&gt;b__299_0</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;RefreshTotalDeviceCount&gt;b__294_0</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;ShowSelectedHiddenDevice&gt;b__327_0</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;SummaryDeviceCount&gt;b__306_0</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;get_Completed_Count&gt;b__59_0</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;get_Missing_Count&gt;b__63_0</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;get_Outdated_Count&gt;b__67_0</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;get_Unplugged_Count&gt;b__71_0</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;get_Up_To_Date_Count&gt;b__75_0</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__304_1</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__304_3</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__304_5</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__304_7</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_can_uninstall_update_list&gt;b__336_0</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_driver_num&gt;b__340_0</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_driver_num&gt;b__340_1</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_driver_num&gt;b__340_2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_driver_num&gt;b__340_3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_driver_num&gt;b__340_4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;refresh_selected_driver_num&gt;b__341_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;remove_printer_drivers&gt;b__305_0</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;set_Is_Missing_Checked&gt;b__148_0</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;set_Is_Outdated_Checked&gt;b__152_0</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;set_Is_Unplugged_Checked&gt;b__156_0</name>
                        <newname>ai</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__148_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__152_0</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__156_0</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__294_0</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__299_0</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.DriverFile,int32&gt;</signature>
                        <name>&lt;&gt;9__300_0</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__300_1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__300_2</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__300_3</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__300_4</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__300_5</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__300_6</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__300_7</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__300_8</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.DriverFile,int32&gt;</signature>
                        <name>&lt;&gt;9__301_0</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__301_1</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.NotifyCollectionChangedEventHandler</signature>
                        <name>&lt;&gt;9__301_10</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__301_11</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__301_2</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__301_3</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__301_4</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__301_5</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__301_6</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__301_7</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__301_8</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,string&gt;</signature>
                        <name>&lt;&gt;9__301_9</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__303_0</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__304_1</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__304_3</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__304_5</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__304_7</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__305_0</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,int32&gt;</signature>
                        <name>&lt;&gt;9__306_0</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__327_0</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__336_0</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.Device,string&gt;</signature>
                        <name>&lt;&gt;9__338_0</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Easeware.Driver.Core.Domain.Device,string&gt;</signature>
                        <name>&lt;&gt;9__338_1</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>&lt;&gt;9__338_4</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__340_0</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__340_1</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__340_2</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__340_3</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__340_4</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__341_0</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__59_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__63_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__67_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__71_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__75_0</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass291_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle)</signature>
                        <name>&lt;deal_with_viewport_scrolling_stackpanel&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle)</signature>
                        <name>&lt;deal_with_viewport_scrolling_stackpanel&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</signature>
                        <name>btn3</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass304_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;handle_driver_select_event&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>temp_driver_vm</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass308_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;AddToDriverViewModelList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass309_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;AddToDriverViewModelList&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass310_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;AddToDriverViewModelList_bk_20240602&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass330_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>&lt;UseTimerToHideDriver&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateListViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>driverGrid</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass332_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;HiddenItem&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cur_key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass338_0</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>hidArray</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateListViewModel/&lt;&gt;c__DisplayClass338_1</name>
                <newname>DriverEasyWPF.ViewModels.UpdateListViewModel/j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>&lt;GetUptodateDeviceList&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>other_device_guid</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateOneModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AfterRegisterSuccess</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AnalyzeInstallFile</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelAndClose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickContinue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickHowToManuallyInstall</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickNoPoint</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickNoSmart</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickYesPoint</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickYesSmart</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CloseWindow</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>FindFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetPermission</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetUpdateProgress</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetUpdateProgress_bk</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InstallDriver</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsExecutableFileInstaller</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>IsExecutableFileInstaller_bk</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>OpenUpgrade</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>SetCurrentDownloadPercent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetDriverNameList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartDownload</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_RegisterCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_UpdateOneCompleted</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>do_page_slider_animation</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>download_Completed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>download_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickContinueCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickHowToManuallyInstallCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickNoPointCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickNoSmartCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickYesPointCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickYesSmartCommand</name>
                    </method>
                    <method>
                        <signature>System.Action()</signature>
                        <name>get_CloseAction</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CloseWindowCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.UpdateLineState()</signature>
                        <name>get_Cur_Page_State</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentState</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Currentprogress</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>get_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DoubleCurrentProgress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadPercent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadSpeed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_DriverNameList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNoCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNoUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsShowNextTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>get_MainViewModel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedCloseUpdateOne</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedRestart</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_OpenUpgradeCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TotalDownloadSize</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.UpdateLineManager()</signature>
                        <name>get_UpdateLineManager</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_WindowOwner</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Views.UpdateOne()</signature>
                        <name>get_updateOne</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>initialize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>is_file_download_completed</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_RegisterCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_UpdateOneCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restorePointHandler_CreateRestorePointCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickContinueCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickHowToManuallyInstallCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickNoPointCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickNoSmartCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickYesPointCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickYesSmartCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>set_CloseAction</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CloseWindowCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.UpdateLineState)</signature>
                        <name>set_Cur_Page_State</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentState</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Currentprogress</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DeviceForDriverInfo)</signature>
                        <name>set_DeviceInfo</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_DoubleCurrentProgress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadPercent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadSpeed</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverName</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_DriverNameList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNoCreateRestorePoint</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNoUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsShowNextTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUseSmartInstall</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>set_MainViewModel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedCloseUpdateOne</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedRestart</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_OpenUpgradeCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TotalDownloadSize</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.UpdateLineManager)</signature>
                        <name>set_UpdateLineManager</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_WindowOwner</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Views.UpdateOne)</signature>
                        <name>set_updateOne</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>show_create_restore_point_page</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>show_install_page</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickContinueCommand&gt;k__BackingField</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickHowToManuallyInstallCommand&gt;k__BackingField</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickNoPointCommand&gt;k__BackingField</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickNoSmartCommand&gt;k__BackingField</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickYesPointCommand&gt;k__BackingField</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickYesSmartCommand&gt;k__BackingField</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>&lt;CloseAction&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CloseWindowCommand&gt;k__BackingField</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel</signature>
                        <name>&lt;MainViewModel&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;NeedCloseUpdateOne&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;OpenUpgradeCommand&gt;k__BackingField</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;WindowOwner&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.UpdateOne</signature>
                        <name>&lt;updateOne&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>RegisterCompleted</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>UpdateOneCompleted</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CreatingRestorePointWindow</signature>
                        <name>creatingRestorePointWindow</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineState</signature>
                        <name>cur_page_state</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>currentState</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentprogress</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo</signature>
                        <name>deviceInfo</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>doubleCurrentProgress</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DriverFileDownloader</signature>
                        <name>download</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadPercent</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadSpeed</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>driverName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>driverNameList</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>drivermodel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>freeNeedShowRestorePoint</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>installSucceed</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isCreateRestorePoint</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isNoCreateRestorePoint</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isNoUseSmartInstall</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isShowNextTime</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isUseSmartInstall</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>item</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>len</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needRestart</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Services.RestorePoint.RestorePointHandler</signature>
                        <name>restorePointHandler</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedState</signature>
                        <name>state</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>totalDownloadSize</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.UpdateLineManager</signature>
                        <name>updateLineManager</name>
                        <newname>ab</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickContinueCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickHowToManuallyInstallCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickNoPointCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickNoSmartCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickYesPointCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickYesSmartCommand</name>
                    </property>
                    <property>
                        <signature>System.Action()</signature>
                        <name>CloseAction</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CloseWindowCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.UpdateLineState()</signature>
                        <name>Cur_Page_State</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentState</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Currentprogress</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.DeviceForDriverInfo()</signature>
                        <name>DeviceInfo</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>DoubleCurrentProgress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadPercent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadSpeed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>DriverNameList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNoCreateRestorePoint</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNoUseSmartInstall</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsShowNextTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUseSmartInstall</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.MainWindowViewModel()</signature>
                        <name>MainViewModel</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedCloseUpdateOne</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedRestart</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>OpenUpgradeCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TotalDownloadSize</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.UpdateLineManager()</signature>
                        <name>UpdateLineManager</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>WindowOwner</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Views.UpdateOne()</signature>
                        <name>updateOne</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>RegisterCompleted</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>UpdateOneCompleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UpdateSate</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>Download</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>ErrorDownload</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>ErrorInstall</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>FirstInAllVersions</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>Installing</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>UpdateOne</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>UpdateSueecss</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>Waiting</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateSate</signature>
                        <name>installpackage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.UptoDateDeviceListViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDeviceDesc</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeviceTitle</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedShow</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>get_UptoDateDeviceList</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDeviceDescCommand</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeviceTitle</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedShow</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>set_UptoDateDeviceList</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDeviceDescCommand&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_deviceTitle</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_needShow</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>uptoDateDeviceList</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDeviceDescCommand</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeviceTitle</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedShow</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>UptoDateDeviceList</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.WaitingWindowViewModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>content</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Content</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.single_activate_window_view_model</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickRetrievekey</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Register</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickRetrieveKeyCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Models.EntrancePageType()</signature>
                        <name>get_EntrancePageType</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_GoRegisterCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsActivating</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LicenseKey</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickRetrieveKeyCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.EntrancePageType)</signature>
                        <name>set_EntrancePageType</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_GoRegisterCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsActivating</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LicenseKey</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickRetrieveKeyCommand&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;GoRegisterCommand&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>&lt;Main_Window&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Models.EntrancePageType</signature>
                        <name>entrancePageType</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isActivating</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>licenseKey</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickRetrieveKeyCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Models.EntrancePageType()</signature>
                        <name>EntrancePageType</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>GoRegisterCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsActivating</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LicenseKey</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>ClickDriverName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CloseWindow</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNodeDiInstall</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNodeDiInstall_bk_all</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNodeRollback</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNodeRollback_bk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNode_bk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchCurrentCreatedDriverNode_extension_bk</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDeviceClassGuid</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDeviceClassGuidDiInstall</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDeviceClassGuidRollback</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDeviceInstancePath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDeviceInstancePathDiInstall</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDriverDescriptionDiInstall</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchDriverNameDiInstall</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchEndDateTime</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchExecute</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>MatchExecuteAndDevicePathDiInstall</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchExecuteDiInstall</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>MatchNewCompatibleIds</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>MatchNewCompatibleIdsRollback</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchNewCreatedDriverNode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchNewCreatedDriverNodeDiInstall</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchNewCreatedDriverNodeRollback</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchNewCreatedDriverNodeRollback_bk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchNewCreatedDriverNode_bk</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchNewCreatedDriverNode_bk_20240430</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>MatchNewHardwareIds</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>MatchNewHardwareIdsRollback</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchNewProvider</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;(string)</signature>
                        <name>MatchOutrankedCreatedDriverNodeDiInstall</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>MatchStartDateTime</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>add_driver</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>add_driver_list</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>enable_latest_items_export</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>enable_latest_items_export_log</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>export_history</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>export_history_list</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickDriverNameCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_CloseWindowCommand</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;string,System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;&gt;()</signature>
                        <name>get_Driver_For_History_Dict</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;()</signature>
                        <name>get_Driver_For_History_List</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ExportHistoryCommand</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Full</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>get_Main_Window</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>get_driver_index_line</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_latest_update_history</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_latest_update_history_list</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_update_history_dir</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_update_history_file_path</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;()</signature>
                        <name>get_update_history_files</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_dir</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;(string)</signature>
                        <name>parse_setupapi_log</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;(string)</signature>
                        <name>parse_setupapi_log_bk_20240430</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>read_data</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>read_log</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>read_log_list</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>remove_driver</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>remove_driver_list</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history, string, bool)</signature>
                        <name>save_to_log</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickDriverNameCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_CloseWindowCommand</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.SortedDictionary`2&lt;string,System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;&gt;)</signature>
                        <name>set_Driver_For_History_Dict</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;)</signature>
                        <name>set_Driver_For_History_List</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ExportHistoryCommand</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Full</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.MainWindow)</signature>
                        <name>set_Main_Window</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_can_rollback</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_can_rollback_list</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>set_can_rollback_worker_do_work</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>set_can_rollback_worker_do_work_list</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;, System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;, DriverEasyWPF.Models.driver_for_history, string)</signature>
                        <name>set_previous_and_current_driver</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_rolled_back</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_rolled_back_error</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_rolled_back_list</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_rolled_back_list_log</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>sort_history</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>sort_history_data</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>sort_history_list</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickDriverNameCommand&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;CloseWindowCommand&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ExportHistoryCommand&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATETIME_FORMATE_PATTERN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATETIME_FORMATE_PATTERN_YMD</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATE_FORMATE_PATTERN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATE_FORMATE_PATTERN_YMD</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXPORT_UPDATE_HISTORY_HEADER</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_SHOW_NUMBER</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UPDATE_HISTORY_DIR</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UPDATE_HISTORY_FILE_PREFIX</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UPDATE_HISTORY_FILE_SUFFIX</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;string,System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;&gt;</signature>
                        <name>driver_for_history_dict</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;</signature>
                        <name>driver_for_history_list</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_full</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.MainWindow</signature>
                        <name>main_window</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickDriverNameCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>CloseWindowCommand</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.SortedDictionary`2&lt;string,System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;&gt;()</signature>
                        <name>Driver_For_History_Dict</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;()</signature>
                        <name>Driver_For_History_List</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ExportHistoryCommand</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Full</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.MainWindow()</signature>
                        <name>Main_Window</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(System.IO.FileInfo)</signature>
                        <name>&lt;get_update_history_files&gt;b__42_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(System.IO.FileInfo)</signature>
                        <name>&lt;read_data&gt;b__67_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;)</signature>
                        <name>&lt;read_log&gt;b__50_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;)</signature>
                        <name>&lt;read_log&gt;b__50_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;sort_history&gt;b__49_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;sort_history_data&gt;b__60_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;sort_history_list&gt;b__59_0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.IO.FileInfo,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__42_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.Models.driver_for_history,string&gt;</signature>
                        <name>&lt;&gt;9__49_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;,int32&gt;</signature>
                        <name>&lt;&gt;9__50_0</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.ObjectModel.ObservableCollection`1&lt;DriverEasyWPF.Models.driver_for_history&gt;,int32&gt;</signature>
                        <name>&lt;&gt;9__50_1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.Models.driver_for_history,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__59_0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.Models.driver_for_history,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__60_0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.IO.FileInfo,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__67_0</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass52_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;set_rolled_back&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass53_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;remove_driver&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>location_of_reg</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass63_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;set_rolled_back_list&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass64_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;set_rolled_back_error&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass65_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;remove_driver_list&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;remove_driver_list&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>location_of_reg</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass66_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Xml.Linq.XElement)</signature>
                        <name>&lt;save_to_log&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.Linq.XElement)</signature>
                        <name>&lt;save_to_log&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass68_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;set_rolled_back_list_log&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>device_instance_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>updated_date</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass70_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;parse_setupapi_log_bk_20240430&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass70_1</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;parse_setupapi_log_bk_20240430&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass70_2</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;parse_setupapi_log_bk_20240430&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass72_0</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;parse_setupapi_log&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass72_1</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;parse_setupapi_log&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.ViewModels.update_driver_history_view_model/&lt;&gt;c__DisplayClass72_2</name>
                <newname>DriverEasyWPF.ViewModels.update_driver_history_view_model/n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>&lt;parse_setupapi_log&gt;b__2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Models.driver_for_history</signature>
                        <name>driver</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.AboutWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.AboutWindow</signature>
                        <name>about_page</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_eula</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_ger_pro</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_how_to_uninstall</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_privacy_policy</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_renew_now</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_to_7zip_website</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_activate_pro_now</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_speed_limited_common</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_start_7_day_trial</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txtSpeedLimited</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.AllVersionDriverWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMask</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_this_device</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>list_version_drivers</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_huge_database</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.BackupProgressWindow</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriver&gt;&gt;, string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.SizeChangedInfo)</signature>
                        <name>OnRenderSizeChanged</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>backupViewModel_BackupCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_cancel_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.BackupProgressViewModel</signature>
                        <name>backupViewModel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.BackupProgressWindow</signature>
                        <name>backup_progress_page</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_cancel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_open_save_folder</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_done</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_error</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>lblConpletePrompt</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>lblPrompt</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.ButtonStyle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.ButtonStyle</signature>
                        <name>NormalButtonStyle</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.ButtonStyle</signature>
                        <name>NotNormalButtonStyle</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.CMessageBoxWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>CloseMessageBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>CloseWindowButton_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDownAtTitlee</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SendInfo</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_cancel_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_feedback_help_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_help_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_help_activate_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_help_download_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_no_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_ok_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_restart_later_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_restart_now_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_retry_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_upgrade_to_pro_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_yes_Click</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>get_ClickSendInfoCommand</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage()</signature>
                        <name>get_Cur_Image_Type</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ImagePath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Error_Image</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_MessageBox_Text_Bold</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Cancel_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Continue_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Feedback_Help_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Help_Activate_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Help_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_No_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Ok_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Restart_Later_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Restart_Now_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Send_Btn</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Is_Show_Yes_Btn</name>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBoxText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBoxTextManual</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBoxTextSecond</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBoxTextThird</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBoxTitle</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageBoxTitleDefault</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_cancel_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_continue_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_feedback_help_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_help_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_help_activate_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_help_download_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_no_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_ok_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_restart_later_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_restart_now_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_retry_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_send_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_upgrade_to_pro_Visibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_btn_yes_Visibility</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_name_for_ga</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_tbHintBottomVisibility</name>
                    </method>
                    <method>
                        <signature>System.Windows.Visibility()</signature>
                        <name>get_tbHintVisibility</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>send_ga_exception</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Commands.DelegateCommand)</signature>
                        <name>set_ClickSendInfoCommand</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Utils.CMessageBoxImage)</signature>
                        <name>set_Cur_Image_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ImagePath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Error_Image</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_MessageBox_Text_Bold</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Cancel_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Continue_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Feedback_Help_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Help_Activate_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Help_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_No_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Ok_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Restart_Later_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Restart_Now_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Send_Btn</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Is_Show_Yes_Btn</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBoxText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBoxTextManual</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBoxTextSecond</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBoxTextThird</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBoxTitle</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MessageBoxTitleDefault</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_cancel_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_continue_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_feedback_help_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_help_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_help_activate_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_help_download_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_no_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_ok_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_restart_later_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_restart_now_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_retry_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_send_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_upgrade_to_pro_Visibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_btn_yes_Visibility</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>set_messagebox_title</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>set_messagebox_title_default</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_name_for_ga</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_tbHintBottomVisibility</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Visibility)</signature>
                        <name>set_tbHintVisibility</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Commands.DelegateCommand</signature>
                        <name>&lt;ClickSendInfoCommand&gt;k__BackingField</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ImagePath&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MessageBoxTextManual&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MessageBoxTextThird&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MessageBoxTitle&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MessageBoxTitleDefault&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_cancel_Visibility&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_continue_Visibility&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_feedback_help_Visibility&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_help_Visibility&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_help_activate_Visibility&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_help_download_Visibility&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_no_Visibility&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_ok_Visibility&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_restart_later_Visibility&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_restart_now_Visibility&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_retry_Visibility&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_send_Visibility&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_upgrade_to_pro_Visibility&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;btn_yes_Visibility&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;tbHintBottomVisibility&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Visibility</signature>
                        <name>&lt;tbHintVisibility&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CMESSAGEBOX</name>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Image</signature>
                        <name>Continueimage</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxResult</signature>
                        <name>Result</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>border_need_restart</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_cancel</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_continue</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_feedback_help</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_help</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_help_activate</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_help_download</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_no</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_ok</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_restart_later</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_restart_now</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_retry</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_send</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_upgrade_to_pro</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_yes</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage</signature>
                        <name>cur_image_type</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>girdManual</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_error_image</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_messagebox_text_bold</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_cancel_btn</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_continue_btn</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_feedback_help_btn</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_help_activate_btn</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_help_btn</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_no_btn</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_ok_btn</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_restart_later_btn</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_restart_now_btn</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_send_btn</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_show_yes_btn</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>item_control_need_restart</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>messageBoxText</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>messageBoxTextSecond</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Style</signature>
                        <name>normalButtonStyle</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Style</signature>
                        <name>notNormalButtonStyle</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scrollBar</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>svg_img</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbHint</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbHint_bottom</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbManual</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbText</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_continue</name>
                        <newname>a0</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Commands.DelegateCommand()</signature>
                        <name>ClickSendInfoCommand</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Utils.CMessageBoxImage()</signature>
                        <name>Cur_Image_Type</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ImagePath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Error_Image</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_MessageBox_Text_Bold</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Cancel_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Continue_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Feedback_Help_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Help_Activate_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Help_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_No_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Ok_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Restart_Later_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Restart_Now_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Send_Btn</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Is_Show_Yes_Btn</name>
                    </property>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBoxText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBoxTextManual</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBoxTextSecond</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBoxTextThird</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBoxTitle</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageBoxTitleDefault</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_cancel_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_continue_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_feedback_help_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_help_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_help_activate_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_help_download_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_no_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_ok_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_restart_later_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_restart_now_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_retry_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_send_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_upgrade_to_pro_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>btn_yes_Visibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>tbHintBottomVisibility</name>
                    </property>
                    <property>
                        <signature>System.Windows.Visibility()</signature>
                        <name>tbHintVisibility</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.CertificationWindow</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.Models.CertifiedType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.CertifiedType)</signature>
                        <name>set_name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_learn_more</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_learn_more_certification_page</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgHasProblemStatus</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbContent</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbHeader</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.CertifyLicenseResultWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_no_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_ok_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_data</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>link_just_url_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_no</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_yes</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_done</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CertifyLicenseResultWindow</signature>
                        <name>offline_scan_result_page</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_content1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_content2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_title</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.CreatingRestorePointWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>restorePointHandler_CreateRestorePointCompleted</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Language)</signature>
                        <name>set_Language</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.CreatingRestorePointWindow</signature>
                        <name>creating_restore_point_page</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.Language()</signature>
                        <name>Language</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.DialogWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseWindowDecorator</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisableControl</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnableControl</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FitDialogWindowHeight</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FitDialogWindowLeft</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>GetLicense_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenRegisterSite2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.Models.DialogWindowType)</signature>
                        <name>SetLicenseTextBoxFocus</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>WindowGA_Closing</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnGoRegister_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnGoRegister_Click_1</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnRegister_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>dialogWindow_Activated</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FailActivateCount</name>
                    </method>
                    <method>
                        <signature>System.Text.StringBuilder(Easeware.Driver.Core.Register.PartnerConfig)</signature>
                        <name>regGetBuyURL</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FailActivateCount</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DialogWindowViewModel)</signature>
                        <name>set_data_context</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_name_by_page_type</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>txtLicense_KeyDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_failActivateCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_activate</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_buy_now</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_continue_create_restore_point_guide</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_continue_manually_install</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_renew</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_renew_now</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_start_trial</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_upgrade_to_pro_activate_page</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_upgrade_to_pro_free_vs_pro_page_new</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_upgrade_to_pro_free_vs_pro_page_new2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr_for_activate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_do_not_remind</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMaskScan2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_create_restore_point</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_install</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_activate_pro_now</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_activate_pro_now2</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_buy_pro_now</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_enter_new_license</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_manually_install_driver</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_retrieve_key</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_start_7_day_trial</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_start_7_day_trial_register</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</signature>
                        <name>raido_btn_auto_create_restore_point</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</signature>
                        <name>raido_btn_auto_install_driver</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</signature>
                        <name>raido_btn_manually_create_restore_point</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</signature>
                        <name>raido_btn_manually_install_driver</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbWantInstallMyself</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.TranslateTransform</signature>
                        <name>tt1</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.TranslateTransform</signature>
                        <name>tt3</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtLicense</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_pro_requird</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>FailActivateCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.DriverDetailsWindow</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriversViewModel, DriverEasyWPF.MainWindow)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Tools.Common.ToolsDriver)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_uninstall</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DriverDetailsWindow</signature>
                        <name>driver_details_page</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.DriverInfo</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnClose_Click&gt;b__3_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnClose_Click&gt;b__3_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Close</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>RightClickCopyCmdCanExecute</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>RightClickCopyCmdExecuted</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Controls.Button, System.Windows.Controls.Button, System.Windows.Controls.StackPanel)</signature>
                        <name>ShowHideMenu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SwitchViewBoxVisibility</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_back_to_driver_info_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_show_device_info_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>tabDeviceInfo_SelectionChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>btn_copy_compatible_ids</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>btn_copy_hardware_ids</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_update_one</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_view_all_version_drivers</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMask</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMask2</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>compatibleScroll</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DriverInfo</signature>
                        <name>driver_info_page</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>hidScroll</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstComIds</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstHids</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabControl</signature>
                        <name>tabDeviceInfo</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_compatible_copied</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_hardware_copied</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.DriverInfoSimple</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnClose_Click&gt;b__4_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnClose_Click&gt;b__4_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Close</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>RightClickCopyCmdCanExecute</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>RightClickCopyCmdExecuted</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Controls.Button, System.Windows.Controls.Button, System.Windows.Controls.StackPanel)</signature>
                        <name>ShowHideMenu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SwitchViewBoxVisibility</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_back_to_driver_info_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_restore_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_show_device_info_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_restore</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DriverInfoSimple</signature>
                        <name>driver_info_page</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.DriverInfoUpdateHistory</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.Models.driver_for_history)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnClose_Click&gt;b__2_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;btnClose_Click&gt;b__2_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Close</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.CanExecuteRoutedEventArgs)</signature>
                        <name>RightClickCopyCmdCanExecute</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>RightClickCopyCmdExecuted</name>
                    </method>
                    <method>
                        <signature>void(string, System.Windows.Controls.Button, System.Windows.Controls.Button, System.Windows.Controls.StackPanel)</signature>
                        <name>ShowHideMenu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SwitchViewBoxVisibility</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_back_to_driver_info_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_restore_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_show_device_info_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>btn_copy_compatible_ids</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>btn_copy_hardware_ids</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_rollback</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_view_all_version_drivers</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMask</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMask2</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>compatibleScroll</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.DriverInfoUpdateHistory</signature>
                        <name>driver_info_page</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>hidScroll</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstComIds</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstHids</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabControl</signature>
                        <name>tabDeviceInfo</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_compatible_copied</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_hardware_copied</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.FeedbackWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>TextBox_KeyDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Primitives.Popup</signature>
                        <name>MorePopup</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>PopupGrid</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>bd_attach</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_add_attachments</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_delete_attachments</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_delete_attachments_new</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_show_attachments</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_submit_feedback</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_system_info</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMaskScan</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.FeedbackWindow</signature>
                        <name>feedback_page</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>hiddenTb</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_logo</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_support</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_add_attachments</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_open_system_info</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_open_system_info_new</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>summary_textbox</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>tbBody</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tb_email_title</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>your_email_textbox</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.GuideBookWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_buy_guide_book</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_get_free_guide_book</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.GuideBookWindow</signature>
                        <name>guide_book_page</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.OfflineScanResult</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, bool, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnOk_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>init_data</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>link_just_url_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Documents.Run</signature>
                        <name>Exception</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_message</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_promptInfo</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_savePath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_successed</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_url</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_go_to_file</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_ok_offline_scan_result</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_open_folder_offline_scan</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_done</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_just_url</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.OfflineScanResult</signature>
                        <name>offline_scan_result_page</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txtError</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txtSuccess</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_content</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_content_url</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Documents.Run</signature>
                        <name>txt_just_content</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_just_url</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_title</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.MenuPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.ScanPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_scan_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_update_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_scan</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgHasProblemStatus</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgStatus</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>lblLastScan</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>lblResult</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>lblTime</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_activate_pro_now</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbHasProblem</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.ScanningPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_stop_scanning_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.LinearGradientBrush</signature>
                        <name>GradientBrush</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>Mask</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_stop_scanning</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>clip_grid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RoundedCornersPolygon</signature>
                        <name>hexagon</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.RoundedCornersPolygon</signature>
                        <name>hexagon_clip</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>lblScanning</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.PieTick</signature>
                        <name>pt1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.PieTick</signature>
                        <name>pt2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>rt</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>scanningGrid</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.System_Information.CpuPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_cpu</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.System_Information.GraphicPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_graphics</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.System_Information.MemoryPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>Mask</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_memory</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.System_Information.MotherboardPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_mainboard</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.System_Information.OverviewPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>Backupscroll</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_overview</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.System_Information.SpdPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>Mask</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_memory</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.Tools.DriverBackupPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectItemControlWithScrollView</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.TreeView</signature>
                        <name>BackupTreeView</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_browse_path_backup_restore2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_start_backup</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgStatus</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_change_backup_settings</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_backup</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txt_backupPath</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.Tools.DriverRestorePage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectItemControlWithScrollView</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DragEventArgs)</signature>
                        <name>FileShowTextBox_PreviewDragEnter</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.TreeView</signature>
                        <name>RestoreTreeView</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>Restorescroll</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_browse_restore</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_continue_restore</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_image_browse_restore</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_previous_restore</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgStatus</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>lblRestore</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.Tools.DriverUninstallPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectItemControlWithScrollView</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.TreeView</signature>
                        <name>UnInstallTreeView</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>UnInstallscroll</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_uninstall</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgStatus</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.Tools.OfflineScanPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>DownloadPage</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>FirstPage</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>ScanPage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>UploadPage</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_continue_offline_scan</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_image_browse_restore</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_image_download_drivers</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_learn_more_offline_scan</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_offline_scan</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_previous_offline_scan</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_update_all</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_update_all_number</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_offline</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_offline_scan</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstdownload</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</signature>
                        <name>raido_btn_offline_scan</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.OfflineScanRadioButton</signature>
                        <name>raido_btn_upload_offline_scan_result</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.Tools.UpdateHistoryPage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>ItemTemplateGrid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_update_history</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>imgStatus</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstCompleted</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.UpdatePage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectItemControlWithScrollView</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Page_Loaded</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_completed_header_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_completed_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_completed_header_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_missing_header_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_missing_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_missing_header_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_outdated_header_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_outdated_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_outdated_header_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_unplugged_header_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_unplugged_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_unplugged_header_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_up_to_date_header_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_up_to_date_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>btn_up_to_date_header_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>checkbox_missing_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>checkbox_outdated_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>checkbox_unplugged_header_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>do_with_click_up_to_date_header</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>DRIVER_ITEM_BOTTOM_HEIGHT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>DRIVER_ITEM_HEIGHT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>DownloadGrid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</signature>
                        <name>btn_completed_header</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</signature>
                        <name>btn_missing_header</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</signature>
                        <name>btn_outdated_header</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</signature>
                        <name>btn_unplugged_header</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonHeaderTitle</signature>
                        <name>btn_up_to_date_header</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_update_all</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_update_all_number</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>checkbox_missing</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>checkbox_outdated</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>checkbox_unplugged</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_scroll</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.UserControl</signature>
                        <name>htDownloadall</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_up_completed</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_up_missing</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_up_outdated</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_up_unplugged</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_up_uptodate</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>list_data</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>previousVerticalOffset</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_top</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_completed</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_missing</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_outdated</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_unplugged</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_up_to_date</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>update_list_header_button_default_height</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.Pages.UpdatePage/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;btn_missing_header_Click&gt;b__7_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;btn_outdated_header_Click&gt;b__8_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;btn_unplugged_header_Click&gt;b__9_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(DriverEasyWPF.ViewModels.DriverViewModel)</signature>
                        <name>&lt;do_with_click_up_to_date_header&gt;b__11_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.Pages.UpdatePage/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__8_0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;DriverEasyWPF.ViewModels.DriverViewModel,bool&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.RollbackReasonWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_no_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_no</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_yes</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.SettingsWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ConnectItemControlWithScrollView</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpadeUpdateAnimator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>Window_PreviewKeyDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_toggle_show_password_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>close_settings</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.ScrollChangedEventArgs)</signature>
                        <name>scroll_ScrollChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.ScrollChangedEventArgs)</signature>
                        <name>scroll_bar_ScrollChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseWheelEventArgs)</signature>
                        <name>scroll_content_PreviewMouseWheel</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.SizeChangedEventArgs)</signature>
                        <name>scroll_content_SizeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ScrollViewer, float64)</signature>
                        <name>scroll_offset_animation</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.ScrollChangedEventArgs)</signature>
                        <name>set_selected_item_by_scrollbar</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_selected_item_by_scrolling</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>set_selected_item_by_scrolling_old</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>settings_general_page_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>settings_hidden_devcie_page_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>settings_internet_page_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>settings_schedule_page_MouseDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>settings_system_restore_page_MouseDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close_common</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_open_system_restore</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_reset_proxy</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_save_settings_common</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_schedule_scan</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_show_selected_hidden_devices</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_test_proxy</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_toggle_show_password</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_auto_create_restore_point</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_help_improve</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_ignore</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_scan_on_launch</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_scan_on_start</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_schedule</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.CheckBoxGA</signature>
                        <name>check_box_skeep_permission</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>clipMask</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Expander</signature>
                        <name>epd_improve</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_gernel</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_hidden</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_internet</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_restore</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_scheduled</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_privacy_policy</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_restore_point_learn_more</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lst_ignore2</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.PasswordBox</signature>
                        <name>psdBox</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.RadioButtonGA</signature>
                        <name>raido_btn_use_default_proxy</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.RadioButtonGA</signature>
                        <name>raido_btn_use_proxy</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll_bar</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll_content</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll_hidden</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.TabItemGA</signature>
                        <name>settings_general_page</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.TabItemGA</signature>
                        <name>settings_hidden_devcie_page</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.TabItemGA</signature>
                        <name>settings_internet_page</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow</signature>
                        <name>settings_page</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.TabItemGA</signature>
                        <name>settings_schedule_page</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.TabItemGA</signature>
                        <name>settings_system_restore_page</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_content</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_gernel</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_hidden</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_internet</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_restore</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_scheduled</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtBox</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_height</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_height1</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_height2</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_height3</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_height4</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_height5</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txt_proxy_address</name>
                        <newname>u</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.SettingsWindow/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Controls.Primitives.ScrollBar)</signature>
                        <name>&lt;set_selected_item_by_scrolling&gt;b__15_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Controls.Primitives.ScrollBar)</signature>
                        <name>&lt;set_selected_item_by_scrolling_old&gt;b__16_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.Views.SettingsWindow/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Windows.Controls.Primitives.ScrollBar,bool&gt;</signature>
                        <name>&lt;&gt;9__15_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Windows.Controls.Primitives.ScrollBar,bool&gt;</signature>
                        <name>&lt;&gt;9__16_0</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.ShareWindow</name>
                <methodlist>
                    <method>
                        <signature>void(bool, DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_share_facebook</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_share_gift_image</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_share_twitter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_open_de_facebook</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.ShareWindowViewModel</signature>
                        <name>shareWindowViewModel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.ShareWindow</signature>
                        <name>share_page</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.SummaryUpdateResultWindow</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DownloadAllViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Btn_help_download_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>ErrorTextMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Windows.Controls.TextBlock(System.Windows.DependencyObject)</signature>
                        <name>FindTextBlockRecursively</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btn_send_report_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>ErrorDownloadData</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt;</signature>
                        <name>ErrorInstallData</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IsNeedRestartCount</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>SPRestart</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_cancel_summary</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_help_download</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_send_report</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>download_error_body</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Expander</signature>
                        <name>epd_download_error</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Expander</signature>
                        <name>epd_install_error</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>install_error_body</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Language</signature>
                        <name>language</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>list_download_error</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>list_install_error</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll_bar_download</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll_bar_install</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sp_download_and_install</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sterrorDownload</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.StackPanel</signature>
                        <name>sterrorInstall</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txtNeedRestart</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_download_error</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_install_error</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>txt_send_report</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SummaryUpdateResultWindow</signature>
                        <name>update_auto_data_page</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.SystemUpdateWindow</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_downloadCompleted</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_downloadCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>systemWindowViewModel_DownloadCompletedHandler</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;downloadCompleted&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close_common</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.FocusButton</signature>
                        <name>btn_update_now</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.SystemUpdateWindowViewModel</signature>
                        <name>systemWindowViewModel</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.SystemUpdateWindow</signature>
                        <name>system_update_page</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>downloadCompleted</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.TrialLicenceWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>WindowGA_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btnStartSubscription</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>tbHeader</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.UpdateOne</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DriverViewModel, DriverEasyWPF.MainWindow, DriverEasyWPF.ViewModels.MainWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;.ctor&gt;b__8_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseUpdateOne</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>UpdateOne_UpdateOneCompleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Window_Loaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DoNotShowWindow</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DoNotShowWindow</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DoNotShowWindow&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>DownloadSpeed</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ProgressBar</signature>
                        <name>UpdateProgress</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>bd_step_1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>bd_step_2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>bd_step_3</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_upgrade_to_pro_one</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.DriverViewModel</signature>
                        <name>driverModel</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_download</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid_root</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>SharpVectors.Converters.SvgViewbox</signature>
                        <name>img_logo</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>installSucceed</name>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scrollBar</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.TranslateTransform</signature>
                        <name>tt2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.UpdateOneModel</signature>
                        <name>updateOneModel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.UpdateOne</signature>
                        <name>update_one_page</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>DoNotShowWindow</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.WaitingWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetContent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>DriverEasyWPF.ViewModels.WaitingWindowViewModel()</signature>
                        <name>get_waitingViewModel</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.WaitingWindowViewModel)</signature>
                        <name>set_waitingViewModel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>DriverEasyWPF.ViewModels.WaitingWindowViewModel</signature>
                        <name>&lt;waitingViewModel&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>SpinnerRotate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>SpinnerRotate1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Image</signature>
                        <name>loading</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Image</signature>
                        <name>loading1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>DriverEasyWPF.ViewModels.WaitingWindowViewModel()</signature>
                        <name>waitingViewModel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.activate_window</name>
                <methodlist>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DialogWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>activate_window_Activated</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>txtLicense_KeyDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_lost_my_key</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.activate_window</signature>
                        <name>new_activate_window</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtLicense</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.single_activate_window</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(DriverEasyWPF.ViewModels.DialogWindowViewModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisableControl</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnableControl</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetLicenseTextBoxFocus</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>activate_window_Activated</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>btnClose_Click</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FailActivateCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FailActivateCount</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>txtLicense_KeyDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_failActivateCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.BusyDecorator</signature>
                        <name>busyr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.HyperlinkGA</signature>
                        <name>link_lost_my_key</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.single_activate_window</signature>
                        <name>new_activate_window</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtLicense</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>FailActivateCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>DriverEasyWPF.Views.update_driver_history_window</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Btn_close_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>ItemTemplateGrid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_close</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.GoogleAnalytics.ButtonGA</signature>
                        <name>btn_export_update_history</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>lstCompleted</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Utils.Controllers.EasewareScrollViewer</signature>
                        <name>scroll</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>DriverEasyWPF.Views.update_driver_history_window</signature>
                        <name>update_driver_history_page</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>XamlGeneratedNamespace.GeneratedInternalTypeHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.EventInfo, object, System.Delegate)</signature>
                        <name>AddEventHandler</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, object, string)</signature>
                        <name>CreateDelegate</name>
                    </method>
                    <method>
                        <signature>object(System.Type, System.Globalization.CultureInfo)</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>object(System.Reflection.PropertyInfo, object, System.Globalization.CultureInfo)</signature>
                        <name>GetPropertyValue</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.PropertyInfo, object, object, System.Globalization.CultureInfo)</signature>
                        <name>SetPropertyValue</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>Easeware.CheckScheduledScan.exe</name>
            <type>
                <name>Easeware.CheckScheduledScan.Program</name>
                <methodlist>
                    <method>
                        <signature>TaskScheduler.Task(string, string, TaskScheduler.ScheduledTasks)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CreateScheduledScan</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteScheduledScan</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>EditScheduledScan</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>EditScheduledScan</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Execu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Main</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>get_task_info</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.CTask</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.CTaskScheduler</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.CoTaskMem</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(native int)</signature>
                        <name>LPWStrToString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Daily</name>
                <newname>l</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DaysInterval</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.DailyTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_DaysInterval</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_DaysInterval</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>DaysInterval</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.DaysOfTheWeek</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Friday</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Monday</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Saturday</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Sunday</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Thursday</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Tuesday</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.DaysOfTheWeek</signature>
                        <name>Wednesday</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.HResult</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_ACCOUNT_DBASE_CORRUPT</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_ACCOUNT_INFORMATION_NOT_SET</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_ACCOUNT_NAME_NOT_FOUND</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_CANNOT_OPEN_TASK</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_INVALID_TASK</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_NO_SECURITY_SERVICES</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_SERVICE_NOT_INSTALLED</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_SERVICE_NOT_LOCALSYSTEM</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_SERVICE_NOT_RUNNING</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_TASK_NOT_READY</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_TASK_NOT_RUNNING</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_TRIGGER_NOT_FOUND</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_UNKNOWN_OBJECT_VERSION</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_E_UNSUPPORTED_ACCOUNT_OPTION</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_EVENT_TRIGGER</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_DISABLED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_HAS_NOT_RUN</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_NOT_SCHEDULED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_NO_MORE_RUNS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_NO_VALID_TRIGGERS</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_READY</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_RUNNING</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SCHED_S_TASK_TERMINATED</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.IEnumWorkItems</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.IEnumWorkItems&amp;)</signature>
                        <name>Clone</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int32, native int&amp;, unsigned int32&amp;)</signature>
                        <name>Next</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Skip</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.IProvideTaskPage</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, bool, native int&amp;)</signature>
                        <name>GetPage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.ITask</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16&amp;, TaskScheduler.ITaskTrigger&amp;)</signature>
                        <name>CreateTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>DeleteTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>EditWorkItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetAccountInformation</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetApplicationName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetCreator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;)</signature>
                        <name>GetErrorRetryCount</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;)</signature>
                        <name>GetErrorRetryInterval</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetExitCode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetFlags</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;, unsigned int16&amp;)</signature>
                        <name>GetIdleWait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetMaxRunTime</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.SystemTime&amp;)</signature>
                        <name>GetMostRecentRunTime</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.SystemTime&amp;)</signature>
                        <name>GetNextRunTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetParameters</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetPriority</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.SystemTime&amp;, TaskScheduler.SystemTime&amp;, unsigned int16&amp;, native int&amp;)</signature>
                        <name>GetRunTimes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32&amp;)</signature>
                        <name>GetStatus</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetTaskFlags</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, TaskScheduler.ITaskTrigger&amp;)</signature>
                        <name>GetTrigger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;)</signature>
                        <name>GetTriggerCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, native int&amp;)</signature>
                        <name>GetTriggerString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16&amp;, native int&amp;)</signature>
                        <name>GetWorkItemData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetWorkingDirectory</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Run</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, native int)</signature>
                        <name>SetAccountInformation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetApplicationName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetCreator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>SetErrorRetryCount</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>SetErrorRetryInterval</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16)</signature>
                        <name>SetIdleWait</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetMaxRunTime</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetParameters</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetPriority</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetTaskFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int8[])</signature>
                        <name>SetWorkItemData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetWorkingDirectory</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Terminate</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.ITaskScheduler</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Guid&amp;, object&amp;)</signature>
                        <name>Activate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, TaskScheduler.ITask)</signature>
                        <name>AddWorkItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Delete</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.IEnumWorkItems&amp;)</signature>
                        <name>Enum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetTargetComputer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Guid&amp;)</signature>
                        <name>IsOfType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Guid&amp;, System.Guid&amp;, object&amp;)</signature>
                        <name>NewWorkItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetTargetComputer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.ITaskTrigger</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.TaskTrigger&amp;)</signature>
                        <name>GetTrigger</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetTriggerString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.TaskTrigger&amp;)</signature>
                        <name>SetTrigger</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.MonthlyDOW</name>
                <newname>o</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DaysOfTheWeek</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Months</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>WhichWeek</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.MonthlyDOWTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, TaskScheduler.DaysOfTheWeek, TaskScheduler.WhichWeek)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, TaskScheduler.DaysOfTheWeek, TaskScheduler.WhichWeek, TaskScheduler.MonthsOfTheYear)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.MonthsOfTheYear()</signature>
                        <name>get_Months</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.DaysOfTheWeek()</signature>
                        <name>get_WeekDays</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_WhichWeeks</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.MonthsOfTheYear)</signature>
                        <name>set_Months</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.DaysOfTheWeek)</signature>
                        <name>set_WeekDays</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_WhichWeeks</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>TaskScheduler.MonthsOfTheYear()</signature>
                        <name>Months</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.DaysOfTheWeek()</signature>
                        <name>WeekDays</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>WhichWeeks</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.MonthlyDate</name>
                <newname>n</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Days</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Months</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.MonthlyTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, int32[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, int32[], TaskScheduler.MonthsOfTheYear)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(int32[])</signature>
                        <name>IndicesToMask</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32[](int32)</signature>
                        <name>MaskToIndices</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_Days</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.MonthsOfTheYear()</signature>
                        <name>get_Months</name>
                    </method>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>set_Days</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.MonthsOfTheYear)</signature>
                        <name>set_Months</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32[]()</signature>
                        <name>Days</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.MonthsOfTheYear()</signature>
                        <name>Months</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.MonthsOfTheYear</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>April</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>August</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>December</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>February</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>January</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>July</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>June</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>March</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>May</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>November</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>October</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthsOfTheYear</signature>
                        <name>September</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.OnIdleTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.OnLogonTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.OnSystemStartTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.PropSheetFlags</name>
                <newname>u</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_DEFAULT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_HASHELP</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_HEADER</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_MODELESS</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_NOAPPLYNOW</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_PROPSHEETPAGE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_PROPTITLE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_RTLREADING</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_STRETCHWATERMARK</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USECALLBACK</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEHBMHEADER</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEHBMWATERMARK</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEHICON</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEHPLWATERMARK</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEICONID</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEPAGELANG</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_USEPSTARTPAGE</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_WATERMARK</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_WIZARD</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_WIZARD97</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_WIZARDCONTEXTHELP</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.PropSheetFlags</signature>
                        <name>PSH_WIZARDHASFINISH</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.PropSheetHeader32</name>
                <newname>s</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFlags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hIcon</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hInstance</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hbmHeader</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hbmWatermark</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hplWatermark</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwndParent</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nPages</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nStartPage</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pfnCallback</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>phpage</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszCaption</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.PropSheetHeader64</name>
                <newname>t</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFlags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hIcon</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hInstance</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hbmHeader</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hbmWatermark</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hplWatermark</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwndParent</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nPages</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nStartPage</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pfnCallback</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>phpage</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszCaption</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.PropertySheetDisplay</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(TaskScheduler.PropSheetHeader32&amp;)</signature>
                        <name>PropertySheet</name>
                    </method>
                    <method>
                        <signature>int32(TaskScheduler.PropSheetHeader64&amp;)</signature>
                        <name>PropertySheet64</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.RunOnceTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.ScheduledTasks</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.Task(string)</signature>
                        <name>CreateTask</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteTask</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>GetTaskNames</name>
                    </method>
                    <method>
                        <signature>string[](string[], unsigned int32)</signature>
                        <name>GrowStringArray</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskScheduler.Task(string)</signature>
                        <name>OpenTask</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>CTaskGuid</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ITaskGuid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.ITaskScheduler</signature>
                        <name>its</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Scheduler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetComputer</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.TaskList()</signature>
                        <name>get_Tasks</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetComputer</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.TaskList</signature>
                        <name>tasks</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>TargetComputer</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.TaskList()</signature>
                        <name>Tasks</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.StartableTrigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16)</signature>
                        <name>SetStartTime</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_StartHour</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_StartMinute</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_StartHour</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_StartMinute</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>StartHour</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>StartMinute</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.SystemTime</name>
                <newname>r</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Day</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DayOfWeek</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Hour</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Milliseconds</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Minute</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Month</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Second</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Year</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Task</name>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ITask, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DisplayForEdit</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>DisplayPropertySheet</name>
                    </method>
                    <method>
                        <signature>bool(TaskScheduler.Task/PropPages)</signature>
                        <name>DisplayPropertySheet</name>
                    </method>
                    <method>
                        <signature>bool(TaskScheduler.Task/PropPages)</signature>
                        <name>DisplayPropertySheet64</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetHiddenFileAttr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(System.DateTime)</signature>
                        <name>NextRunTimeAfter</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Run</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(string, System.Security.SecureString)</signature>
                        <name>SetAccountInformation</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>SetAccountInformation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetHiddenFileAttr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Terminate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AccountName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_ErrorRetryCount</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_ErrorRetryInterval</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ExitCode</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.TaskFlags()</signature>
                        <name>get_Flags</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FlagsEx</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Hidden</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_IdleWaitDeadlineMinutes</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_IdleWaitMinutes</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_MaxRunTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MaxRunTimeLimited</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_MostRecentRunTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_NextRunTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Parameters</name>
                    </method>
                    <method>
                        <signature>System.Diagnostics.ProcessPriorityClass()</signature>
                        <name>get_Priority</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.TaskStatus()</signature>
                        <name>get_Status</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tag</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.TriggerList()</signature>
                        <name>get_Triggers</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingDirectory</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ApplicationName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_ErrorRetryCount</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_ErrorRetryInterval</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.TaskFlags)</signature>
                        <name>set_Flags</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FlagsEx</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Hidden</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_IdleWaitDeadlineMinutes</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_IdleWaitMinutes</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan)</signature>
                        <name>set_MaxRunTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MaxRunTimeLimited</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Parameters</name>
                    </method>
                    <method>
                        <signature>void(System.Diagnostics.ProcessPriorityClass)</signature>
                        <name>set_Priority</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Tag</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.ITask</signature>
                        <name>iTask</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerList</signature>
                        <name>triggers</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AccountName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ApplicationName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Comment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Creator</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>ErrorRetryCount</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>ErrorRetryInterval</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ExitCode</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.TaskFlags()</signature>
                        <name>Flags</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FlagsEx</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Hidden</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>IdleWaitDeadlineMinutes</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>IdleWaitMinutes</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>MaxRunTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MaxRunTimeLimited</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>MostRecentRunTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>NextRunTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Parameters</name>
                    </property>
                    <property>
                        <signature>System.Diagnostics.ProcessPriorityClass()</signature>
                        <name>Priority</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.TaskStatus()</signature>
                        <name>Status</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Tag</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.TriggerList()</signature>
                        <name>Triggers</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Task/PropPages</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.Task/PropPages</signature>
                        <name>Schedule</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.Task/PropPages</signature>
                        <name>Settings</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.Task/PropPages</signature>
                        <name>Task</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TaskFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>DeleteWhenDone</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>Disabled</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>DontStartIfOnBatteries</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>Hidden</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>Interactive</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>KillIfGoingOnBatteries</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>KillOnIdleEnd</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>RestartOnIdleResume</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>RunIfConnectedToInternet</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>RunOnlyIfDocked</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>RunOnlyIfLoggedOn</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>StartOnlyIfIdle</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskFlags</signature>
                        <name>SystemRequired</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TaskList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Delete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.Task(string)</signature>
                        <name>NewTask</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.Task(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetComputer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetComputer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>nameComputer</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.ScheduledTasks</signature>
                        <name>st</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>TaskScheduler.Task(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>TargetComputer</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TaskList/Enumerator</name>
                <newname>TaskScheduler.TaskList/a</newname>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ScheduledTasks)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>curIndex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.Task</signature>
                        <name>curTask</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>nameTask</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.ScheduledTasks</signature>
                        <name>outer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TaskStatus</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>Disabled</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>NeverRun</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>NoMoreRuns</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>NoTriggerTime</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>NoTriggers</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>NotScheduled</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>Ready</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>Running</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskStatus</signature>
                        <name>Terminated</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TaskTrigger</name>
                <newname>q</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>BeginDay</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>BeginMonth</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>BeginYear</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerTypeData</signature>
                        <name>Data</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>EndDay</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>EndMonth</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>EndYear</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Flags</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MinutesDuration</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MinutesInterval</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>RandomMinutesInterval</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Reserved1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Reserved2</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>StartHour</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>StartMinute</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>TriggerSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>Type</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TaskTriggerType</name>
                <newname>k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>EVENT_TRIGGER_AT_LOGON</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>EVENT_TRIGGER_AT_SYSTEMSTART</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>EVENT_TRIGGER_ON_IDLE</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>TIME_TRIGGER_DAILY</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>TIME_TRIGGER_MONTHLYDATE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>TIME_TRIGGER_MONTHLYDOW</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>TIME_TRIGGER_ONCE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTriggerType</signature>
                        <name>TIME_TRIGGER_WEEKLY</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Trigger</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>Bind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.Trigger)</signature>
                        <name>Bind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.Trigger(TaskScheduler.ITaskTrigger)</signature>
                        <name>CreateTrigger</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SyncTrigger</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unbind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_BeginDate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Bound</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Disabled</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DurationMinutes</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_EndDate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasEndDate</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IntervalMinutes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_KillAtDurationEnd</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_BeginDate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Disabled</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DurationMinutes</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_EndDate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasEndDate</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IntervalMinutes</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_KillAtDurationEnd</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.ITaskTrigger</signature>
                        <name>iTaskTrigger</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TaskTrigger</signature>
                        <name>taskTrigger</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>BeginDate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Bound</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Disabled</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DurationMinutes</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>EndDate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasEndDate</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>IntervalMinutes</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>KillAtDurationEnd</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Trigger/TaskTriggerFlags</name>
                <newname>TaskScheduler.Trigger/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.Trigger/TaskTriggerFlags</signature>
                        <name>Disabled</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.Trigger/TaskTriggerFlags</signature>
                        <name>HasEndDate</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.Trigger/TaskTriggerFlags</signature>
                        <name>KillAtDurationEnd</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TriggerList</name>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ITask)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(TaskScheduler.Trigger)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(TaskScheduler.Trigger)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(System.Array, int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(TaskScheduler.Trigger)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.Trigger)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.Collections.IList.Add</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>System.Collections.IList.Contains</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>System.Collections.IList.IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Collections.IList.Insert</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>System.Collections.IList.Remove</name>
                    </method>
                    <method>
                        <signature>object(int32)</signature>
                        <name>System.Collections.IList.get_Item</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Collections.IList.set_Item</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFixedSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSynchronized</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.Trigger(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_SyncRoot</name>
                    </method>
                    <method>
                        <signature>void(int32, TaskScheduler.Trigger)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.ITask</signature>
                        <name>iTask</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>oTriggers</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFixedSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadOnly</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSynchronized</name>
                    </property>
                    <property>
                        <signature>TaskScheduler.Trigger(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>SyncRoot</name>
                    </property>
                    <property>
                        <signature>object(int32)</signature>
                        <name>System.Collections.IList.Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TriggerList/Enumerator</name>
                <newname>TaskScheduler.TriggerList/a</newname>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.TriggerList)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Current</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentIndex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerList</signature>
                        <name>outer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TriggerType</name>
                <newname>ae</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>OnIdle</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>OnLogon</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>OnSystemStart</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>RunDaily</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>RunMonthly</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>RunMonthlyDOW</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>RunOnce</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.TriggerType</signature>
                        <name>RunWeekly</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.TriggerTypeData</name>
                <newname>p</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.Daily</signature>
                        <name>daily</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthlyDOW</signature>
                        <name>monthlyDOW</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.MonthlyDate</signature>
                        <name>monthlyDate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskScheduler.Weekly</signature>
                        <name>weekly</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.Weekly</name>
                <newname>m</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DaysOfTheWeek</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>WeeksInterval</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.WeeklyTrigger</name>
                <methodlist>
                    <method>
                        <signature>void(TaskScheduler.ITaskTrigger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, TaskScheduler.DaysOfTheWeek)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, int16, TaskScheduler.DaysOfTheWeek, int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskScheduler.DaysOfTheWeek()</signature>
                        <name>get_WeekDays</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_WeeksInterval</name>
                    </method>
                    <method>
                        <signature>void(TaskScheduler.DaysOfTheWeek)</signature>
                        <name>set_WeekDays</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_WeeksInterval</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>TaskScheduler.DaysOfTheWeek()</signature>
                        <name>WeekDays</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>WeeksInterval</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskScheduler.WhichWeek</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskScheduler.WhichWeek</signature>
                        <name>FirstWeek</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.WhichWeek</signature>
                        <name>FourthWeek</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.WhichWeek</signature>
                        <name>LastWeek</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.WhichWeek</signature>
                        <name>SecondWeek</name>
                    </field>
                    <field>
                        <signature>TaskScheduler.WhichWeek</signature>
                        <name>ThirdWeek</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>Easeware.ConfigLanguageFromSetup.exe</name>
            <type>
                <name>Easeware.ConfigLanguageFromSetup.Program</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SaveSettings</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Settings</signature>
                        <name>_settings</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>Easeware.Driver.Backup.dll</name>
            <type>
                <name>Easeware.Driver.Backup.BackupType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.BackupType</signature>
                        <name>Folder</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.BackupType</signature>
                        <name>ZipFile</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.CatalogFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetKeyInINF</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PlatformExtension</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PlatformExtension</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>NT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTAMD64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTIA64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTx86</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>PlatformExtensionList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_fileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_filePath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_platformExtension</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PlatformExtension</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.CatalogFileList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Backup.CatalogFile)</signature>
                        <name>Add</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.CatalogFileList(Easeware.Driver.Backup.InfFile)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FindInstalledCatalogFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;()</signature>
                        <name>ToDriverFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Backup.CatalogFile&gt;</signature>
                        <name>_catalogFileList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_installCatalogFileName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEmpty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.Category</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.Category(string)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Backup.Driver)</signature>
                        <name>ExistAbsoluteSameDriver</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Backup.Driver)</signature>
                        <name>ExistSameDriver</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetClassNativeName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidGuid</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Backup.WIN_GUID&amp;, System.Text.StringBuilder, int32, unsigned int32)</signature>
                        <name>SetupDiGetClassDescription</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Backup.WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_ClassIcon</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsProcessor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ClassFullName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ClassGuid</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ClassName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DisplayGuid</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.Driver&gt;</signature>
                        <name>DriverList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_PATH</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PrinterGuid</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProcessorGuid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SystemGuid</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>_classIcon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>isGuid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>isGuid2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Icon()</signature>
                        <name>ClassIcon</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsProcessor</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.DIF</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_ADDPROPERTYPAGE_ADVANCED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_ADDPROPERTYPAGE_BASIC</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_ALLOW_INSTALL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_ASSIGNRESOURCES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_CALCDISKSPACE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_DESTROYPRIVATEDATA</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_DESTROYWIZARDDATA</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_DETECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_DETECTCANCEL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_DETECTVERIFY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_ENABLECLASS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_FIRSTTIMESETUP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_FOUNDDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_INSTALLCLASSDRIVERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_INSTALLDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_INSTALLDEVICEFILES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_INSTALLINTERFACES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_INSTALLWIZARD</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_MOVEDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_FINISHINSTALL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_POSTANALYZE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_PREANALYZE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_PRESELECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_SELECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_POWERMESSAGEWAKE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_PROPERTIES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_PROPERTYCHANGE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_REGISTERDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_REGISTER_COINSTALLERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_REMOVE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_RESERVED1</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_SELECTBESTCOMPATDRV</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_SELECTCLASSDRIVERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_SELECTDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_TROUBLESHOOTER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_UNREMOVE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_UNUSED1</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_VALIDATECLASSDRIVERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.DIF</signature>
                        <name>DIF_VALIDATEDRIVER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.DeviceManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Backup.Category&gt;, Microsoft.Win32.RegistryKey)</signature>
                        <name>AppendDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon(string)</signature>
                        <name>GetClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Backup.Category&gt;()</signature>
                        <name>GetDeviceTree</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsFilterEnum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Rescan</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_PresentDeviceId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>EnumFilter</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>_presentDeviceId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>PresentDeviceId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.Driver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.RegistryKey)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Backup</name>
                    </method>
                    <method>
                        <signature>System.DateTime(string)</signature>
                        <name>ConvertToDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>CreateLog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateRestoreInfo</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateUninstallInfo</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(Easeware.Driver.Backup.InfFile)</signature>
                        <name>GetCopyFileList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(Easeware.Driver.Backup.InfFile)</signature>
                        <name>GetCopyFiles</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>GetCurInfHardwareIds</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey)</signature>
                        <name>GetDescription</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>GetDestPathList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(Easeware.Driver.Backup.InfFile)</signature>
                        <name>GetFileCollection</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;()</signature>
                        <name>GetIncludeFiles</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(Easeware.Driver.Backup.InfFile)</signature>
                        <name>GetLayoutFiles</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;, Easeware.Driver.Backup.InfFile)</signature>
                        <name>GetOtherSourceFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(Easeware.Driver.Backup.InfFile)</signature>
                        <name>GetPrinterDriverFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetSourceDiskInfos</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetWorkingDirectory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>MergeDictionary</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.Driver(string)</signature>
                        <name>Reload</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveQuotes</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>Restore</name>
                    </method>
                    <method>
                        <signature>bool(bool&amp;)</signature>
                        <name>Restore_MDT</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;(Easeware.Driver.Backup.InfFile)</signature>
                        <name>SearchDriverFiles</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>Uninstall</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Uninstall_MDT</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>WaiteRestore_Tick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>WaiteUninstall_Tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Backup.RestoreDriverFinishEventHandler)</signature>
                        <name>add_RestoreCompeleted</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Backup.UninstallCompeletedEventHandler)</signature>
                        <name>add_UninstallCompeleted</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BackupFrom</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;()</signature>
                        <name>get_FileCollection</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDisplay</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPrinter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSystem</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUnplug</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OldIsUnPlug</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Backup.RestoreDriverFinishEventHandler)</signature>
                        <name>remove_RestoreCompeleted</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Backup.UninstallCompeletedEventHandler)</signature>
                        <name>remove_UninstallCompeleted</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;)</signature>
                        <name>set_FileCollection</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OldIsUnPlug</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BackupFileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackupOS</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackupOsBit</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.Category</signature>
                        <name>Category</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Date</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Description</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DeviceHardwareId</name>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Process</signature>
                        <name>DriverRestore</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Process</signature>
                        <name>DriverUninstall</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.InfFile</signature>
                        <name>InfFileObj</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MatchingDeviceId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NewestVersion</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Provider</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.RestoreDriverFinishEventHandler</signature>
                        <name>RestoreCompeleted</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RestoreFileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RestoreResuleFileName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.UninstallCompeletedEventHandler</signature>
                        <name>UninstallCompeleted</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UninstallFileName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UninstallResuleFileName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_doneInfList</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;</signature>
                        <name>_fileList</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_oldIsUnPlug</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BackupFrom</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;()</signature>
                        <name>FileCollection</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDisplay</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPrinter</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSystem</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUnplug</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OldIsUnPlug</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>Easeware.Driver.Backup.RestoreDriverFinishEventHandler</signature>
                        <name>RestoreCompeleted</name>
                    </event>
                    <event>
                        <signature>Easeware.Driver.Backup.UninstallCompeletedEventHandler</signature>
                        <name>UninstallCompeleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Backup.DriverFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_path</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_sourceName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.Encryption.Encryption</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decrypt</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Encrypt</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.Encryption.GZipper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>Compress</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>Decompress</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.Encryption.Xor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>Reverse</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.FolderId</name>
                <newname>ah</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>CommonPrograms</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>CommonStartMenu</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>CommonStartup</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>CommonTemplates</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>Favorites</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>ProgramData</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>ProgramFiles</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>ProgramFilesCommon</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>PublicDesktop</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.FolderId</signature>
                        <name>PublicDocuments</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.HardwareList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.InstallSectionInfo(string)</signature>
                        <name>GetInstallSectionInfo</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.HardwareList()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.HardwareList</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Backup.InstallSectionInfo&gt;</signature>
                        <name>_values</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.InfFile</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Exists</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.InfFile/InstallFile&gt;(string)</signature>
                        <name>GetFileList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasDestinationDir</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>SaftAdd</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSourceName</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.DriverFile()</signature>
                        <name>ToDriverFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_CatalogFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;()</signature>
                        <name>get_CatalogFiles</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.InfFile/InstallFile&gt;&gt;()</signature>
                        <name>get_CopyFileListSection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_CopyFileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultDestDir</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_DestinationDirs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasDefaultDestDir</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_IncludeFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_LayoutFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_PrinterFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_SourceDisksFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.CatalogFileList</signature>
                        <name>CatalogList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InstallSection</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Path</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SourceName</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_catalogFileName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;</signature>
                        <name>_catalogFiles</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.InfFile/InstallFile&gt;&gt;</signature>
                        <name>_copyFileListSection</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_copyFileName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_defaultDir</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_destinationDirs</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_includeFileName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_layoutFileName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_printerFileName</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_sourceDisksFiles</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.InfReader</signature>
                        <name>infReader</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>CatalogFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.DriverFile&gt;()</signature>
                        <name>CatalogFiles</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Backup.InfFile/InstallFile&gt;&gt;()</signature>
                        <name>CopyFileListSection</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>CopyFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultDestDir</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>DestinationDirs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasDefaultDestDir</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>IncludeFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>LayoutFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>PrinterFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>SourceDisksFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.InfFile/DirConfig</name>
                <newname>Easeware.Driver.Backup.InfFile/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.InfFile/DirConfig(string)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToPath</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>DirId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SubDir</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.InfFile/InstallFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.InfFile/InstallFile(string)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DestinationFileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SourceFileName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.InfReader</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>GetHardwareIds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>GetModleHardwareIds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string[]&amp;)</signature>
                        <name>GetPrivateProfileSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(string, native int, unsigned int32, string)</signature>
                        <name>GetPrivateProfileSection</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string, System.Text.StringBuilder, int32, string)</signature>
                        <name>GetPrivateProfileString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSectionValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string)</signature>
                        <name>GetSourceDisksElements</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetStringVariantValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetValueEx</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsDeviceInf</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveQuotes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>SplitSectionValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int64(string, string, string, string)</signature>
                        <name>WritePrivateProfileString</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>WriteValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.InstallSectionInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>InfPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InstallSection</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RegKey</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.OemCopyStyle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_DELETESOURCE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_FORCE_IN_USE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_FORCE_NEWER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_FORCE_NOOVERWRITE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_IN_USE_NEEDS_REBOOT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_LANGUAGEAWARE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NEWER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NEWER_ONLY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NEWER_OR_SAME</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NOBROWSE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NODECOMP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NOOVERWRITE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NOPRUNE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_NOSKIP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_OEMINF_CATALOG_ONLY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_REPLACEONLY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_REPLACE_BOOT_FILE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_SOURCEPATH_ABSOLUTE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_SOURCE_ABSOLUTE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_SOURCE_SIS_MASTER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_COPY_WARNIFSKIP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemCopyStyle</signature>
                        <name>SP_FLAG_CABINETCONTINUATION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.OemSourceMediaType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.OemSourceMediaType</signature>
                        <name>SPOST_MAX</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemSourceMediaType</signature>
                        <name>SPOST_NONE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemSourceMediaType</signature>
                        <name>SPOST_PATH</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.OemSourceMediaType</signature>
                        <name>SPOST_URL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.OsVersion</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOsVersion</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Is64Bit</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.RegistryKeyHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetBinary</name>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetMultiString</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetString</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetStringDescriptionPart</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.RescanEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Backup.Category&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Backup.Category&gt;</signature>
                        <name>DeviceTree</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.RestoreDriverFinishEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Backup.RestoreUninstallResult)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.RestoreUninstallResult</signature>
                        <name>Result</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.RestoreDriverFinishEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Backup.RestoreDriverFinishEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Backup.RestoreDriverFinishEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.RestoreUninstallResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>IsDisplay</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsSucceed</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>NeedRestart</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.SPDRP</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_CAPABILITIES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_CLASS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_CLASSGUID</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_COMPATIBLEIDS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_CONFIGFLAGS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_CONFIGURATION</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_CONFIGURATIONVECTOR</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_DEVICEDESC</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_DRIVER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_FRIENDLYNAME</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_HARDWAREID</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_LOCATION_INFORMATION</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_LOWERFILTERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_MAXIMUM_PROPERTY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_MFG</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_NTDEVICEPATHS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_PHYSICAL_DEVICE_OBJECT_NAME</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_SERVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_UI_NUMBER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.SPDRP</signature>
                        <name>SPDRP_UPPERFILTERS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.SP_DEVINFO_DATA</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassGuid</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DevInst</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Reserved</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbSize</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.UninstallCompeletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Backup.RestoreUninstallResult)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.RestoreUninstallResult</signature>
                        <name>Result</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.UninstallCompeletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Backup.UninstallCompeletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Backup.UninstallCompeletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.UninstallOEMInf</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.UninstallOEMInf</signature>
                        <name>SUOI_FORCEDELETE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.UpdateDriverInstallFlag</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Backup.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_BITS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_FORCE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_NONINTERACTIVE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_READONLY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.Util</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.DirectoryInfo)</signature>
                        <name>EmptyFolder</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FindFile</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Text.StringBuilder, int32&amp;)</signature>
                        <name>GetColorDirectory</name>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Backup.FolderId)</signature>
                        <name>GetKnownFolderPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Text.StringBuilder, System.Text.StringBuilder, int32, System.Text.StringBuilder, int32, int32&amp;)</signature>
                        <name>GetPrintProcessorDirectory</name>
                    </method>
                    <method>
                        <signature>bool(System.Text.StringBuilder, System.Text.StringBuilder, int32, System.Text.StringBuilder, int32, int32&amp;)</signature>
                        <name>GetPrinterDriverDirectory</name>
                    </method>
                    <method>
                        <signature>int32(native int, Easeware.Driver.Backup.FolderId, native int, int32, System.Text.StringBuilder)</signature>
                        <name>SHGetFolderPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;()</signature>
                        <name>get_Dirids</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_WinDirFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_WinDirFiles</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;</signature>
                        <name>_dirids</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;()</signature>
                        <name>Dirids</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>WinDirFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.WIN_GUID</name>
                <methodlist>
                    <method>
                        <signature>Easeware.Driver.Backup.WIN_GUID(System.Guid)</signature>
                        <name>WinGuidFromGuid</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Data1</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data2</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data3</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Data4</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Backup.WinDDK</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, string, int32)</signature>
                        <name>CM_Locate_DevNodeA</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>CM_Reenumerate_DevNode</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>DnsFlushResolverCache</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetErrorMessage</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>HRESULT_FROM_SETUPAPI</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>HRESULT_FROM_WIN32</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int, native int, string, int32)</signature>
                        <name>InstallHinfSection</name>
                    </method>
                    <method>
                        <signature>bool(int32&amp;, int32)</signature>
                        <name>InternetGetConnectedState</name>
                    </method>
                    <method>
                        <signature>bool(string, string, Easeware.Driver.Backup.OemSourceMediaType, Easeware.Driver.Backup.OemCopyStyle, string, int32, native int, string)</signature>
                        <name>SetupCopyOEMInf</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int32, native int, Easeware.Driver.Backup.SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiCallClassInstaller</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>SetupDiDestroyDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, Easeware.Driver.Backup.SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiEnumDeviceInfo</name>
                    </method>
                    <method>
                        <signature>native int(native int, string, native int, int32)</signature>
                        <name>SetupDiGetClassDevs</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Backup.SP_DEVINFO_DATA&amp;, unsigned int32, unsigned int32&amp;, native int, unsigned int32, unsigned int32&amp;)</signature>
                        <name>SetupDiGetDeviceRegistryProperty</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Backup.WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>bool(string, Easeware.Driver.Backup.UninstallOEMInf, native int)</signature>
                        <name>SetupUninstallOEMInf</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>ShowScrollBar</name>
                    </method>
                    <method>
                        <signature>bool(native int, string, string, Easeware.Driver.Backup.UpdateDriverInstallFlag, bool&amp;)</signature>
                        <name>UpdateDriverForPlugAndPlayDevices</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>APPLICATION_ERROR_MASK</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUFFER_SIZE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CM_LOCATE_DEVNODE_NORMAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CM_REENUMERATE_NORMAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_SUCCESS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_ALLCLASSES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_DEFAULT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_DEVICEINTERFACE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PRESENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PROFILE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_NO_MORE_ITEMS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_NO_SUCH_DEVINST</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ERROR_SEVERITY_ERROR</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>FACILITY_SETUPAPI</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>FACILITY_WIN32</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>INVALID_HANDLE_VALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_PATH</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>Easeware.Driver.Core.dll</name>
            <type>
                <name>Easeware.Driver.Core.Computer.Audio</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.AudioAdapter&gt;</signature>
                        <name>Items</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.AudioAdapter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Manufacturer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPDeviceID</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.BIOS</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReleaseDate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ROMSize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Vendor</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_releaseDate</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ReleaseDate</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.Baseboard</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Product</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Product</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>OEM</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SerialNumber</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_mfg</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_product</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Product</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.CDROM</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Manufacturer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPDeviceID</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.CDROMGroup</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.CDROM&gt;</signature>
                        <name>Items</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.CPU</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string[])</signature>
                        <name>IsUnpluged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>AddressWidth</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CurrentClockSpeed</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DataWidth</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ExtClock</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GUID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>L2CacheSize</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>L2CacheSpeed</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>L3CacheSize</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>L3CacheSpeed</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MaxClockSpeed</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>NumberOfCores</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProcessorId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SocketDesignation</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.HardDisk</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Manufacturer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Model</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPDeviceID</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Size</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.HardDiskGroup</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.HardDisk&gt;</signature>
                        <name>Items</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.Machine</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ConvertSpecifyMfg</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetCompaqModelName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetGeneralModelName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetHPModelName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetIBMModelName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetItautecModelName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetLenovoModelName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetModelName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetPackardBellModelName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsInvalidManufacturer</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCustomComputer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Model</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CustomComputer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Family</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProductName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SKUNumber</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SerialNumber</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_mfg</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCustomComputer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Model</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.Memory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Capacity</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>DataWidth</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DeviceLocator</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>FormFactor</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Manufacturer</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MemoryType</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Speed</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>TotalWidth</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.MemoryArray</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.Memory&gt;)</signature>
                        <name>GetTotalSystemMemory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_TotalSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.Memory&gt;</signature>
                        <name>Items</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int64()</signature>
                        <name>TotalSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.Monitor</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetStringIf</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ParseName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ParseSerialNumber</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DisplaySize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ASCIIString</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HardwareId</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HorizontalSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MonitorName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MonitorSerialNumber</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>RawEDID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SerialNumber</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VerticalSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WeekManufacture</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>YearManufacture</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>DisplaySize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.MonitorGroup</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;string&gt;, Microsoft.Win32.RegistryKey, string)</signature>
                        <name>CreateMonitor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Computer.MonitorGroup()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.Monitor&gt;</signature>
                        <name>Items</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.MonitorGroup</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.Network</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetAdapterFromRegistry</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.NetworkAdapter&gt;</signature>
                        <name>Items</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.NetworkAdapter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Manufacturer</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPDeviceID</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.SystemManagement</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Computer.SystemManagement()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetRegistryStringForWin7</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlElement, System.Xml.XmlDocumentFragment)</signature>
                        <name>HardDeviceToXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsInvalid</name>
                    </method>
                    <method>
                        <signature>System.Xml.XmlDocument()</signature>
                        <name>ToXml</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Computer.BIOS()</signature>
                        <name>get_BIOS</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Computer.Baseboard()</signature>
                        <name>get_Baseboard</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Computer.Machine()</signature>
                        <name>get_Machine</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UploadHardwareInfo</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UploadHardwareInfo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.Audio</signature>
                        <name>Audio</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.CDROMGroup</signature>
                        <name>CDROM</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.CPU</signature>
                        <name>CPU</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.HardDiskGroup</signature>
                        <name>HardDisk</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.MemoryArray</signature>
                        <name>Memory</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.MonitorGroup</signature>
                        <name>MonitorGroup</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.Network</signature>
                        <name>Network</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.Video</signature>
                        <name>Video</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.Baseboard</signature>
                        <name>_baseboard</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.BIOS</signature>
                        <name>_bios</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.SystemManagement</signature>
                        <name>_instance</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Computer.Machine</signature>
                        <name>_machine</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_uploadHardwareInfo</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Easeware.Driver.Core.Computer.BIOS()</signature>
                        <name>BIOS</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Computer.Baseboard()</signature>
                        <name>Baseboard</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Computer.Machine()</signature>
                        <name>Machine</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UploadHardwareInfo</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.Video</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Computer.VideoAdapter&gt;</signature>
                        <name>Items</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Computer.VideoAdapter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>AdapterRAM</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BiosDate</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>DriverDate</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DriverVersion</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PNPDeviceID</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Crypto.GZipper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>Compress</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>Decompress</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Crypto.Xor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>Reverse</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.About</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetAgentString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProductPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProductType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsRunAsAdmin</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AppFullPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCompany</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCopyright</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyDescription</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyProduct</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyTitle</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingDirectory</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AppFullPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyCompany</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyCopyright</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyDescription</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyProduct</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyTitle</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingDirectory</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.Category</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Category(Microsoft.Win32.RegistryKey)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Category()</signature>
                        <name>CreateUnknown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Guid)</signature>
                        <name>GetClassDescription</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetClassNativeName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey)</signature>
                        <name>GetDriverClassGuid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsUnknown</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidGuid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Category/WIN_GUID&amp;, System.Text.StringBuilder, int32, unsigned int32)</signature>
                        <name>SetupDiGetClassDescription</name>
                    </method>
                    <method>
                        <signature>bool(System.Guid&amp;, native int, int32, int32&amp;)</signature>
                        <name>SetupDiGetClassDescription</name>
                    </method>
                    <method>
                        <signature>native int(Easeware.Driver.Core.Domain.Category/WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_ClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>get_Devices</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Guid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_class_native_name</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Category()</signature>
                        <name>get_unknown_category</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>set_Devices</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Guid</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_PATH</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UNKNOWN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UNKNOWN_FULLNAME</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UNKNOWN_GUID</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>_devices</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_fullName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_guid</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Icon()</signature>
                        <name>ClassIcon</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;()</signature>
                        <name>Devices</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Guid</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.Category/WIN_GUID</name>
                <newname>Easeware.Driver.Core.Domain.Category/a</newname>
                <methodlist>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Category/WIN_GUID(System.Guid)</signature>
                        <name>WinGuidFromGuid</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Data1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data3</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Data4</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.ClassSubkey</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Exists</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFullName</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CLASS_BRANCH</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.DIF</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_ADDPROPERTYPAGE_ADVANCED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_ADDPROPERTYPAGE_BASIC</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_ALLOW_INSTALL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_ASSIGNRESOURCES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_CALCDISKSPACE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_DESTROYPRIVATEDATA</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_DESTROYWIZARDDATA</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_DETECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_DETECTCANCEL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_DETECTVERIFY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_ENABLECLASS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_FIRSTTIMESETUP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_FOUNDDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_INSTALLCLASSDRIVERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_INSTALLDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_INSTALLDEVICEFILES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_INSTALLINTERFACES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_INSTALLWIZARD</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_MOVEDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_FINISHINSTALL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_POSTANALYZE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_PREANALYZE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_PRESELECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_NEWDEVICEWIZARD_SELECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_POWERMESSAGEWAKE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_PROPERTIES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_PROPERTYCHANGE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_REGISTERDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_REGISTER_COINSTALLERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_REMOVE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_RESERVED1</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_SELECTBESTCOMPATDRV</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_SELECTCLASSDRIVERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_SELECTDEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_TROUBLESHOOTER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_UNREMOVE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_UNUSED1</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_VALIDATECLASSDRIVERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DIF</signature>
                        <name>DIF_VALIDATEDRIVER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.Device</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOEMDriverInfHash</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetReadableName</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsCompatible</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsOEMDriver</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>SHA256File</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>can_rollback</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Can_Rollback</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Category()</signature>
                        <name>get_Category</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_CompatibleIds</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Desc</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Driver()</signature>
                        <name>get_Driver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverKey</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FriendlyName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HardwareId</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_HardwareIdArray</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFirstItem</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsIgnore</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPlug</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUnpluged</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocationInfomation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocationOfReg</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Mfg</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.NewDriver()</signature>
                        <name>get_NewDriver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OEMDriverInf</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParentIdPrefix</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Service</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_class_guid</name>
                    </method>
                    <method>
                        <signature>object(System.Collections.Generic.HashSet`1&lt;string&gt;, string, System.Management.ManagementBaseObject)</signature>
                        <name>get_property_by_name</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_rollback_node_strong_name_setupapi</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_rollback_node_strong_name_wmi</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Can_Rollback</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Category)</signature>
                        <name>set_Category</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_CompatibleIds</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Desc</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Driver)</signature>
                        <name>set_Driver</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriverKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FriendlyName</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_HardwareIdArray</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFirstItem</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsIgnore</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPlug</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocationInfomation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocationOfReg</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Mfg</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.NewDriver)</signature>
                        <name>set_NewDriver</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OEMDriverInf</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParentIdPrefix</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Service</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFirstItem&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_OEMDriverInf</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_can_rollback</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Category</signature>
                        <name>_category</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>_compatibleIds</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_desc</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Driver</signature>
                        <name>_driver</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_driverKey</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_friendlyName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>_hardwareId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isIgnore</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isPlug</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_locationInfomation</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_locationOfReg</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_mfg</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.NewDriver</signature>
                        <name>_newDriver</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_parentIdPrefix</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_service</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Can_Rollback</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Category()</signature>
                        <name>Category</name>
                    </property>
                    <property>
                        <signature>string[]()</signature>
                        <name>CompatibleIds</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Desc</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Driver()</signature>
                        <name>Driver</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverKey</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FriendlyName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HardwareId</name>
                    </property>
                    <property>
                        <signature>string[]()</signature>
                        <name>HardwareIdArray</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFirstItem</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsIgnore</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPlug</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUnpluged</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocationInfomation</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocationOfReg</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Mfg</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.NewDriver()</signature>
                        <name>NewDriver</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OEMDriverInf</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ParentIdPrefix</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Service</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.Driver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DateString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DateYMD</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Desc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfSection</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MatchingDeviceId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProviderName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DateString</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DateYMD</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Desc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfSection</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MatchingDeviceId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProviderName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_date</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_dateString</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_dateYMD</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_desc</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_infPath</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_infSection</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_matchingDeviceId</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_providerName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_version</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DateString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DateYMD</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Desc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfSection</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MatchingDeviceId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProviderName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.DriverFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateInfLocalPath</name>
                    </method>
                    <method>
                        <signature>void(System.IO.DirectoryInfo)</signature>
                        <name>CreateLocalFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateLocalPath</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>CreateLocalPath</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeleteLocalFile</name>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>FindFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ForUnplugDevice</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FormatDesc</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.DriverFile()</signature>
                        <name>LoadFromXMLFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenFolder</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RenameLocalFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveToXMLFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>TestSave</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlSelf</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateProgressFromLocal</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateProgressOneFromLocal</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateSuccess</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_AllDatabaseDriverCount</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_AllOsDriverCount</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_CompatibleDriverCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeviceDriversDesc</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_DoubleDownloadProgress</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DownloadCompleted</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadPath</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DownloadProgress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;()</signature>
                        <name>get_Drivers</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForUnknownDevice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FormatDeviceDesc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfFileLocalPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfStruLocation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompatibled</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInfstru</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLoadFromLocal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsManualGenerate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNoDriverInformation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUpdateSucceed</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalFilePath</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_LocalFileSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Location_Of_Reg</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.MatchedDevice&gt;()</signature>
                        <name>get_MathcedDevices</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MfgDownloadPath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowInCompleted</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowInHidden</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalFileSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UpdateState</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_local_directory</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_AllDatabaseDriverCount</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_AllOsDriverCount</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_CompatibleDriverCount</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeviceDriversDesc</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_DoubleDownloadProgress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadPath</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DownloadProgress</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadSize</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>set_Drivers</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForUnknownDevice</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FormatDeviceDesc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfFileLocalPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfStruLocation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCompatibled</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInfstru</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsManualGenerate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNoDriverInformation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUpdateSucceed</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalFilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Location_Of_Reg</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.MatchedDevice&gt;)</signature>
                        <name>set_MathcedDevices</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MfgDownloadPath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowInCompleted</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowInHidden</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_TotalFileSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UpdateState</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>XMLFileName</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_allDatabaseDriverCount</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_allOsDriverCount</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_compatibleDriverCount</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_deviceDriversDesc</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_doubleDownloadProgress</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_downloadPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_downloadProgress</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;</signature>
                        <name>_drivers</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_fileName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_fileSize</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_forUnknownDevice</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isUpdateSucceed</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_is_compatibled</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_is_manual_generate</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_is_no_driver_information</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanTime</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localFilePath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_location_of_reg</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.MatchedDevice&gt;</signature>
                        <name>_mathcedDevices</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_mfgDownloadPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>downloadSize</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>formatDeviceDesc</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>infFileLocalPath</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>infStruLocation</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInfstru</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>len</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showInCompleted</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showInHidden</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>totalFileSize</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>updateState</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>AllDatabaseDriverCount</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>AllOsDriverCount</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>CompatibleDriverCount</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeviceDriversDesc</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>DoubleDownloadProgress</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>DownloadCompleted</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadPath</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DownloadProgress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadSize</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;()</signature>
                        <name>Drivers</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ForUnknownDevice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FormatDeviceDesc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfFileLocalPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfStruLocation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCompatibled</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInfstru</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLoadFromLocal</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsManualGenerate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNoDriverInformation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUpdateSucceed</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalFilePath</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>LocalFileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Location_Of_Reg</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.MatchedDevice&gt;()</signature>
                        <name>MathcedDevices</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MfgDownloadPath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowInCompleted</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowInHidden</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalFileSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UpdateState</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.DriverType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverType</signature>
                        <name>SPDIT_CLASSDRIVER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverType</signature>
                        <name>SPDIT_COMPATDRIVER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverType</signature>
                        <name>SPDIT_NODRIVER</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.GoogleAnalytics</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>ActiontAnalytics</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string, string)</signature>
                        <name>DriversExceptionActiontAnalytics</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, int32, bool)</signature>
                        <name>EventAnalytics</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>ExceptionActiontAnalytics</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32)</signature>
                        <name>ExceptionAnalytics</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetBasicInformation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMachineGuid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetScreenResolution</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>NormalEventAnalytics</name>
                    </method>
                    <method>
                        <signature>void(string, string[], string[], string[], string[])</signature>
                        <name>NormalEventAnalyticsBatch</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>ScreenAnalytics</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>SendRequest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>SendRequestBatch</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, int64)</signature>
                        <name>TimmingtAnalytics</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>submitWorkerBatch_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>submitWorkerBatch_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>submitWorker_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>submitWorker_RunWorkerCompleted</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AppName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>AppVersion</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GOOGLE_ANALYTICS_BATCH_LIMIT_NUMBER</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProductName</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TrackingID</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>app_installer_id</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>client_id</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>completed_version</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eventAction</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eventCategory</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eventType</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eventlabel</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>eventvalue</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptionInfo</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptionState</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptionType</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>hittype</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>productAction</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>screenName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>screenResolution</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>scrrenType</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Settings</signature>
                        <name>setting</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timingCategory</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timingType</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timing_label</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timing_time</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>timing_variable</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>windowsGuid</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.InfStructure</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExeFileId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfFileLocalPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.StructureFile&gt;()</signature>
                        <name>get_StruFiles</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalFiles</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalFilesSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExeFileId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfFileLocalPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.StructureFile&gt;)</signature>
                        <name>set_StruFiles</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalFiles</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_TotalFilesSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_InfFileLocalPath</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_exeFileId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.StructureFile&gt;</signature>
                        <name>_struFiles</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_totalFiles</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_totalFilesSize</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ExeFileId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfFileLocalPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.StructureFile&gt;()</signature>
                        <name>StruFiles</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalFiles</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalFilesSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.MatchedDevice</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUnpluged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>HardwareId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NewDriverName</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUnpluged</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.NewDevice</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDescFromList</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DescString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DeviceCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_DeviceDriversDescList</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DisplayFileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DescString</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DeviceCount</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_DeviceDriversDescList</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_DisplayFileSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_descString</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_deviceCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_deviceDriversDescList</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_displayFileSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DescString</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DeviceCount</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>DeviceDriversDescList</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>DisplayFileSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.NewDriver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetDate</name>
                    </method>
                    <method>
                        <signature>string(System.Text.StringBuilder)</signature>
                        <name>append_info</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_AllDatabaseDriverCount</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_AllOsDriverCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassGuid</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_CompatibleDriverCount</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Date</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FromWindowUpdate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfFileLocalPath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InfStruLocation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompatibled</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInfStru</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsManualGenerate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNoDriverInformation</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_MatchedDevice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MatchedDeviceId</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MatchedDeviceNo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MfgFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Provider</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SignerInformation</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalFileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>make_unique_key</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_AllDatabaseDriverCount</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_AllOsDriverCount</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClassGuid</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_CompatibleDriverCount</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_Date</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FromWindowUpdate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfFileLocalPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InfStruLocation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCompatibled</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsInfStru</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsManualGenerate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNoDriverInformation</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_MatchedDevice</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MatchedDeviceId</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MatchedDeviceNo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MfgFilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Provider</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SignerInformation</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_TotalFileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_InfFileLocalPath</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_allDatabaseDriverCount</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_allOsDriverCount</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_classGuid</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_compatibleDriverCount</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_date</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_filePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_fileSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_fromWindowUpdate</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_infStruLocation</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_is_compatibled</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_is_manual_generate</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_is_no_driver_information</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>_matchedDevice</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_matchedDeviceId</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_matchedDeviceNo</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_mfgFilePath</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_provider</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_signerInformation</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_totalFileSize</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_version</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInfStru</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>AllDatabaseDriverCount</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>AllOsDriverCount</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ClassGuid</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>CompatibleDriverCount</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>Date</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FilePath</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FromWindowUpdate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfFileLocalPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InfStruLocation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCompatibled</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInfStru</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsManualGenerate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNoDriverInformation</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>MatchedDevice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MatchedDeviceId</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MatchedDeviceNo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MfgFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Provider</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SignerInformation</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalFileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.NoPerssionDriver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.NotificationObject</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RaisePropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo</name>
                <methodlist>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/IsWow64ProcessDelegate()</signature>
                        <name>GetIsWow64ProcessDelegate</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.OSVersionInfo/SYSTEM_INFO&amp;)</signature>
                        <name>GetNativeSystemInfo</name>
                    </method>
                    <method>
                        <signature>native int(native int, string)</signature>
                        <name>GetProcAddress</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32, int32, int32, int32&amp;)</signature>
                        <name>GetProductInfo</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.OSVersionInfo/SYSTEM_INFO&amp;)</signature>
                        <name>GetSystemInfo</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetSystemMetrics</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.OSVersionInfo/OSVERSIONINFOEX&amp;)</signature>
                        <name>GetVersionEx</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Is32BitProcessOn64BitProcessor</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsWindows10</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>native int(string)</signature>
                        <name>LoadLibrary</name>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>RegistryRead</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BuildVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Edition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MajorVersion</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinorVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture()</signature>
                        <name>get_OSBits</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture()</signature>
                        <name>get_ProcessorBits</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture()</signature>
                        <name>get_ProgramBits</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RevisionVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ServicePack</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VersionString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_BUSINESS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_BUSINESS_N</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_CLUSTER_SERVER</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_CLUSTER_SERVER_V</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_DATACENTER_SERVER</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_DATACENTER_SERVER_CORE</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_DATACENTER_SERVER_CORE_V</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_DATACENTER_SERVER_V</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_EMBEDDED</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_E</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_N</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_SERVER</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_SERVER_CORE</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_SERVER_CORE_V</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_SERVER_IA64</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ENTERPRISE_SERVER_V</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_BASIC</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_BASIC_E</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_BASIC_N</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_PREMIUM</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_PREMIUM_E</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_PREMIUM_N</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_PREMIUM_SERVER</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HOME_SERVER</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_HYPERV</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_PROFESSIONAL</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_PROFESSIONAL_E</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_PROFESSIONAL_N</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SB_SOLUTION_SERVER</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SB_SOLUTION_SERVER_EM</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SERVER_FOR_SB_SOLUTIONS</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SERVER_FOR_SMALLBUSINESS</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SERVER_FOR_SMALLBUSINESS_V</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SERVER_FOUNDATION</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SMALLBUSINESS_SERVER</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SMALLBUSINESS_SERVER_PREMIUM</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SOLUTION_EMBEDDEDSERVER</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STANDARD_SERVER</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STANDARD_SERVER_CORE</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STANDARD_SERVER_CORE_V</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STANDARD_SERVER_SOLUTIONS</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STANDARD_SERVER_V</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STARTER</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STARTER_E</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STARTER_N</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_ENTERPRISE_SERVER</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_EXPRESS_SERVER</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_EXPRESS_SERVER_CORE</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_STANDARD_SERVER</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_STANDARD_SERVER_CORE</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_WORKGROUP_SERVER</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_STORAGE_WORKGROUP_SERVER_CORE</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ULTIMATE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ULTIMATE_E</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_ULTIMATE_N</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_UNDEFINED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_WEB_SERVER</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PRODUCT_WEB_SERVER_CORE</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_NT_DOMAIN_CONTROLLER</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_NT_SERVER</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_NT_WORKSTATION</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_BLADE</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_DATACENTER</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_ENTERPRISE</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_PERSONAL</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_SINGLEUSERTS</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_SMALLBUSINESS</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER_SUITE_TERMINAL</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>s_Edition</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>s_Name</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BuildVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Edition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MajorVersion</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinorVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture()</signature>
                        <name>OSBits</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture()</signature>
                        <name>ProcessorBits</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture()</signature>
                        <name>ProgramBits</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RevisionVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ServicePack</name>
                    </property>
                    <property>
                        <signature>System.Version()</signature>
                        <name>Version</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VersionString</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo/IsWow64ProcessDelegate</name>
                <newname>Easeware.Driver.Core.Domain.OSVersionInfo/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, bool&amp;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>bool(bool&amp;, System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>bool(native int, bool&amp;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo/OSVERSIONINFOEX</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dwBuildNumber</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwMajorVersion</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwMinorVersion</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwOSVersionInfoSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwPlatformId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szCSDVersion</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>wProductType</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>wReserved</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>wServicePackMajor</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>wServicePackMinor</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>wSuiteMask</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture</signature>
                        <name>Bit32</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture</signature>
                        <name>Bit64</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture</signature>
                        <name>Itanium64</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/ProcessorArchitecture</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo/SYSTEM_INFO</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>dwActiveProcessorMask</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwAllocationGranularity</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwNumberOfProcessors</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwPageSize</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>dwProcessorLevel</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>dwProcessorRevision</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwProcessorType</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lpMaximumApplicationAddress</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lpMinimumApplicationAddress</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/_PROCESSOR_INFO_UNION</signature>
                        <name>uProcessorInfo</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture</signature>
                        <name>Bit32</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture</signature>
                        <name>Bit64</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OSVersionInfo/SoftwareArchitecture</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OSVersionInfo/_PROCESSOR_INFO_UNION</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwOemId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>wProcessorArchitecture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>wReserved</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OemCopyStyle</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_DELETESOURCE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_FORCE_IN_USE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_FORCE_NEWER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_FORCE_NOOVERWRITE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_IN_USE_NEEDS_REBOOT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_LANGUAGEAWARE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NEWER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NEWER_ONLY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NEWER_OR_SAME</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NOBROWSE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NODECOMP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NOOVERWRITE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NOPRUNE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_NOSKIP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_OEMINF_CATALOG_ONLY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_REPLACEONLY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_REPLACE_BOOT_FILE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_SOURCEPATH_ABSOLUTE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_SOURCE_ABSOLUTE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_SOURCE_SIS_MASTER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_COPY_WARNIFSKIP</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemCopyStyle</signature>
                        <name>SP_FLAG_CABINETCONTINUATION</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OemSourceMediaType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemSourceMediaType</signature>
                        <name>SPOST_MAX</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemSourceMediaType</signature>
                        <name>SPOST_NONE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemSourceMediaType</signature>
                        <name>SPOST_PATH</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OemSourceMediaType</signature>
                        <name>SPOST_URL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OsVersion</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Version)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Version, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetHelpVersion3</name>
                    </method>
                    <method>
                        <signature>System.Diagnostics.FileVersionInfo()</signature>
                        <name>GetKernel32FileVersionInfo</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetOSBit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOSVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOSVersionFromDll</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetOSVersionInfoFromDll</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOsName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOsVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetProductType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetServicePack</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetSuiteMask</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.OSVersionInfo/OSVERSIONINFOEX&amp;)</signature>
                        <name>GetVersionEx</name>
                    </method>
                    <method>
                        <signature>int16(Easeware.Driver.Core.Domain.OsVersion/OSVERSIONINFO&amp;)</signature>
                        <name>GetVersionEx</name>
                    </method>
                    <method>
                        <signature>System.Version(System.Diagnostics.FileVersionInfo)</signature>
                        <name>GetVersionFromInfo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Is64Bit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToCompletedString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>getOS</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Architecture</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SuiteMask</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.OsVersion()</signature>
                        <name>get_ThisCompletedMachine</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.OsVersion()</signature>
                        <name>get_ThisMachine</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_Version</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Architecture_32Bit</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Architecture_64Bit</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_archi</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_productType</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_suiteMask</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Version</signature>
                        <name>_version</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OsVersion</signature>
                        <name>thisCompletedMachine</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.OsVersion</signature>
                        <name>thisMachine</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Architecture</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SuiteMask</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.OsVersion()</signature>
                        <name>ThisCompletedMachine</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.OsVersion()</signature>
                        <name>ThisMachine</name>
                    </property>
                    <property>
                        <signature>System.Version()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.OsVersion/OSVERSIONINFO</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dwBuildNumber</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwMajorVersion</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwMinorVersion</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwOSVersionInfoSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwPlatformId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>szCSDVersion</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.PnPEntityDevice</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsNotUnplugged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsPluggin</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Avaibability</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Caption</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassGuid</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompatibleId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConfigManagerErrorCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConfigManagerUserConfig</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CreationClassName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeviceId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorCleared</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorDescription</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HardwareId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstallDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IsPresent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastErrorCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Manufacturer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Num</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PNPClass</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PNPDeviceId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PowerManagementCapabilities</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PowerManagementSupported</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Service</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Status</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StatusInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SystemCreationClassName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SystemName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Avaibability</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Caption</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClassGuid</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompatibleId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ConfigManagerErrorCode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ConfigManagerUserConfig</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CreationClassName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeviceId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorCleared</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorDescription</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HardwareId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InstallDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IsPresent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastErrorCode</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Manufacturer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Num</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PNPClass</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PNPDeviceId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PowerManagementCapabilities</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PowerManagementSupported</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Service</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Status</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StatusInfo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SystemCreationClassName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SystemName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>availability</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>caption</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>classGuid</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>compatibleId</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>configManagerErrorCode</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>configManagerUserConfig</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>creationClassName</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>deviceId</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>errorCleared</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>errorDescription</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>hardwareId</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>installDate</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>isPresent</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lastErrorCode</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>manufacturer</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>num</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pnpClass</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pnpDeviceId</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>powerManagementCapabilities</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>powerManagementSupported</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>service</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>status</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>statusInfo</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>systemCreationClassName</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>systemName</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Avaibability</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Caption</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ClassGuid</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CompatibleId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ConfigManagerErrorCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ConfigManagerUserConfig</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CreationClassName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeviceId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorCleared</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorDescription</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HardwareId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InstallDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>IsPresent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastErrorCode</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Manufacturer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Num</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PNPClass</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PNPDeviceId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PowerManagementCapabilities</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PowerManagementSupported</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Service</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Status</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StatusInfo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SystemCreationClassName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SystemName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.ROLLBACK_FLAG</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.ROLLBACK_FLAG</signature>
                        <name>NONE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.ROLLBACK_FLAG</signature>
                        <name>ROLLBACK_FLAG_NO_UI</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.SPDRP</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_CAPABILITIES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_CLASS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_CLASSGUID</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_COMPATIBLEIDS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_CONFIGFLAGS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_CONFIGURATION</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_CONFIGURATIONVECTOR</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_DEVICEDESC</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_DRIVER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_FRIENDLYNAME</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_HARDWAREID</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_LOCATION_INFORMATION</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_LOWERFILTERS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_MAXIMUM_PROPERTY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_MFG</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_NTDEVICEPATHS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_PHYSICAL_DEVICE_OBJECT_NAME</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_SERVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_UI_NUMBER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.SPDRP</signature>
                        <name>SPDRP_UPPERFILTERS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.SP_DEVINFO_DATA</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassGuid</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DevInst</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Reserved</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbSize</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Settings()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Settings(string, string)</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>string(string[], string)</signature>
                        <name>GetNodeText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Net.WebProxy()</signature>
                        <name>GetProxy</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetTestServer</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_SettingFileChanged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutoCreateStorePoint</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BackupToPath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CloseConfirm</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CloseToTray</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Driver_Easy_Version</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_GetDriverFromWindowsUpdate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAutoRunWhenStart</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAutoScanWhenLaunched</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsBackupAutoSelectAll</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFirstClickGift</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalLanguage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyPassword</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProxyPort</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyServer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProxyUser</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScheduleScan</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowRestoreNextTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowShareNextTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UploadHardwareInfo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseDefaultProxy</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_origianl_language</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_SettingFileChanged</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutoCreateStorePoint</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BackupToPath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CloseConfirm</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CloseToTray</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Driver_Easy_Version</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_GetDriverFromWindowsUpdate</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAutoRunWhenStart</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsAutoScanWhenLaunched</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsBackupAutoSelectAll</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFirstClickGift</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OriginalLanguage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyPassword</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProxyPort</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyServer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProxyUser</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ScheduleScan</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowRestoreNextTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowShareNextTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UploadHardwareInfo</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseDefaultProxy</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>SettingFileChanged</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_autoCreateStorePoint</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_closeConfirm</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_closeToTray</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_driver_easy_version</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_getDriverFormWindowsUpdate</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isAutoRunWhenStart</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isAutoScanWhenLaunched</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isBackupAutoSelectAll</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isFirstClickGift</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_language</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_original_language</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_proxyPassword</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_proxyPort</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_proxyServer</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_proxyUser</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_scheduleScan</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Settings</signature>
                        <name>_settings</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showRestoreNextTime</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showShareNextTime</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_uploadHardwareInfo</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_useDefaultProxy</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>backupToPath</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>defaultBackupDir</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AutoCreateStorePoint</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>BackupToPath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CloseConfirm</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CloseToTray</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Driver_Easy_Version</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>GetDriverFromWindowsUpdate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAutoRunWhenStart</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsAutoScanWhenLaunched</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsBackupAutoSelectAll</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFirstClickGift</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalLanguage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyPassword</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ProxyPort</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyServer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProxyUser</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ScheduleScan</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowRestoreNextTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowShareNextTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UploadHardwareInfo</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseDefaultProxy</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>SettingFileChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.StructureFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadPath</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalLocation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ServerLocation</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sha2Char</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadPath</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalLocation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ServerLocation</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Sha2Char</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_downloadPath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_fileSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localLocation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_serverLocation</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_sha2Char</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DownloadPath</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalLocation</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ServerLocation</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Sha2Char</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.UninstallOEMInf</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.UninstallOEMInf</signature>
                        <name>SUOI_FORCEDELETE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.UpdateDriverInstallFlag</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_BITS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_FORCE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_NONINTERACTIVE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.UpdateDriverInstallFlag</signature>
                        <name>INSTALLFLAG_READONLY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.WIN_GUID</name>
                <methodlist>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.WIN_GUID(System.Guid)</signature>
                        <name>WinGuidFromGuid</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Data1</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data2</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Data3</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Data4</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.WinDDK</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32, int32)</signature>
                        <name>CM_Get_DevNode_Status</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, string, int32)</signature>
                        <name>CM_Locate_DevNodeA</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>CM_Reenumerate_DevNode</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA, native int, Easeware.Driver.Core.Domain.ROLLBACK_FLAG, bool&amp;)</signature>
                        <name>DiRollbackDriver</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>DnsFlushResolverCache</name>
                    </method>
                    <method>
                        <signature>string(string, Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY)</signature>
                        <name>GetDeviceStringProperty</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDeviceStringProperty_old</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetErrorMessage</name>
                    </method>
                    <method>
                        <signature>System.Guid(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;, Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY)</signature>
                        <name>GetGuidProperty</name>
                    </method>
                    <method>
                        <signature>string(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;, Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY)</signature>
                        <name>GetStringProperty</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>HRESULT_FROM_SETUPAPI</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>HRESULT_FROM_WIN32</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int, native int, string, int32)</signature>
                        <name>InstallHinfSection</name>
                    </method>
                    <method>
                        <signature>bool(int32&amp;, int32)</signature>
                        <name>InternetGetConnectedState</name>
                    </method>
                    <method>
                        <signature>int32(string, bool&amp;)</signature>
                        <name>RollBackDriver</name>
                    </method>
                    <method>
                        <signature>bool(string, string, Easeware.Driver.Core.Domain.OemSourceMediaType, Easeware.Driver.Core.Domain.OemCopyStyle, string, int32, native int, string)</signature>
                        <name>SetupCopyOEMInf</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA, Easeware.Driver.Core.Domain.DriverType)</signature>
                        <name>SetupDiBuildDriverInfoList</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int32, native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiCallClassInstaller</name>
                    </method>
                    <method>
                        <signature>native int(native int, native int)</signature>
                        <name>SetupDiCreateDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>SetupDiDestroyDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiEnumDeviceInfo</name>
                    </method>
                    <method>
                        <signature>native int(native int, string, native int, int32)</signature>
                        <name>SetupDiGetClassDevs</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;, Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY&amp;, int32&amp;, System.Guid&amp;, int32, int32&amp;, int32)</signature>
                        <name>SetupDiGetDeviceProperty</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;, Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY&amp;, int32&amp;, native int, int32, int32&amp;, int32)</signature>
                        <name>SetupDiGetDeviceProperty</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;, unsigned int32, unsigned int32&amp;, native int, unsigned int32, unsigned int32&amp;)</signature>
                        <name>SetupDiGetDeviceRegistryProperty</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>bool(native int, string, native int, int32, Easeware.Driver.Core.Domain.SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiOpenDeviceInfo</name>
                    </method>
                    <method>
                        <signature>bool(string, Easeware.Driver.Core.Domain.UninstallOEMInf, native int)</signature>
                        <name>SetupUninstallOEMInf</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>ShowScrollBar</name>
                    </method>
                    <method>
                        <signature>bool(native int, string, string, Easeware.Driver.Core.Domain.UpdateDriverInstallFlag, bool&amp;)</signature>
                        <name>UpdateDriverForPlugAndPlayDevices</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_rollback_driver_node_strong_name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>APPLICATION_ERROR_MASK</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BUFFER_SIZE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CM_LOCATE_DEVNODE_NORMAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CM_REENUMERATE_NORMAL</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_SUCCESS</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY</signature>
                        <name>DEVPKEY_Device_ClassGuid</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY</signature>
                        <name>DEVPKEY_Device_Rollback_Node_Strong_Name</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_ALLCLASSES</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_DEFAULT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_DEVICEINTERFACE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PRESENT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DIGCF_PROFILE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_NO_MORE_ITEMS</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_NO_SUCH_DEVINST</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ERROR_SEVERITY_ERROR</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_SUCCESS_REBOOT_REQUIRED</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>FACILITY_SETUPAPI</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>FACILITY_WIN32</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>INVALID_HANDLE_VALUE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_PATH</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.WinDDK/DEVPROPKEY</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>fmtid</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pid</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Domain.ZipTool</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CompressDirectory</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>CompressFile</name>
                    </method>
                    <method>
                        <signature>void(string[], string)</signature>
                        <name>CompressFileList</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>Extract</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_7zPath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.AllVersionDriverList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>AddIgnoreList</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.DriverUpload.UserSelfDriverFile)</signature>
                        <name>AddIgnoreListForUserSelfDriver</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>ClassifyNewDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;)</signature>
                        <name>ClassifyUserSelfDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device(System.Xml.XmlNode)</signature>
                        <name>CreateDeviceFromXmlNode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateDownloadFolder</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.DriverFile(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>CreateDriverFileForNoDrivers</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.DriverFile(System.Xml.XmlNode)</signature>
                        <name>CreateDriverFileFromXmlNode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Driver(System.Xml.XmlNode)</signature>
                        <name>CreateDriverFromXmlNode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.NewDriver(System.Xml.XmlNode)</signature>
                        <name>CreateNewDriverFromXmlNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Debug_AddDownloadItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Debug_AddRarDownloadItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Debug_LogDownloadList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decrypt</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Encrypt</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetAllDriverCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetAllDriverCount_old</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetCorrectScanTime</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;(string)</signature>
                        <name>GetDeviceWithNewDriver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDownloadListFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDriverDownloadPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>GetIgnoreList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetLastScanInfo</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetUrlPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUserSelfDriverPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>InitDownloadData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;)</signature>
                        <name>InitUploadData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAllCompleted</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAllUptoDate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsEmpty</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsEmptyIgnoreList</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.NewDriver)</signature>
                        <name>IsIgnore</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsNeverScan</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>Merge</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;)</signature>
                        <name>MergeUploadData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ReadLocalDownloadListFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDownloadList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reload</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reload_old</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.NewDriver)</signature>
                        <name>RemoveIgnoredNewDriver</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>RemoveIgnoredNewDriver</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetShowInCompleted</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreIgnored</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SaveFileForNoDrivers</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveFile_old</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, Easeware.Driver.Core.Domain.DriverFile, bool)</signature>
                        <name>SaveToXML</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlNode, Easeware.Driver.Core.Domain.DriverFile, bool)</signature>
                        <name>SaveToXML</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, bool)</signature>
                        <name>SaveToXMLForNoDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlNode, string, bool)</signature>
                        <name>SaveToXMLForNoDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, Easeware.Driver.Core.DriverUpload.UserSelfDriverFile, bool)</signature>
                        <name>SaveToXMLForUserSelfDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, Easeware.Driver.Core.Domain.DriverFile, bool)</signature>
                        <name>SaveToXML_old</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>SummaryDriverCount</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanResult)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;)</signature>
                        <name>UpdateUserSelfDriver</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DownloadListChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_IgnoreListAdded</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_IgnoreListCleared</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>delete_all_version_drivers_file</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AllDriverCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_AllDriverFileList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_CurDriverFileList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSaveAfterScan</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewDriverCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoDriverCount</name>
                    </method>
                    <method>
                        <signature>int64[]()</signature>
                        <name>get_ScanReportArray</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnplugedDriverCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UpdateDriversCount</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>get_all_drivers_from_file</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>get_drivers_from_file</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_url_path_sha256</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>is_file_exists</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DownloadListChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_IgnoreListAdded</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_IgnoreListCleared</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>remove_all_other_driver_files</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>restore_selected_ignored_devices</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AllDriverCount</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSaveAfterScan</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewDriverCount</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NoDriverCount</name>
                    </method>
                    <method>
                        <signature>void(int64[])</signature>
                        <name>set_ScanReportArray</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UnplugedDriverCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSaveAfterScan&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64[]</signature>
                        <name>&lt;ScanReportArray&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DownloadListChanged</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DownloadListFile</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DriverDownloadPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListAdded</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListCleared</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NewestVersion</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserSelfDriverPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_allDriverCount</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>_allDriverFileList</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>_curDriverFileList</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>_ignoreList</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;</signature>
                        <name>_ignoreList_UserSelfDriver</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.AllVersionDriverList</signature>
                        <name>_instance</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanTime</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_newDriverCount</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_noDriverCount</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_unplugedDriverCount</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_version</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AllDriverCount</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>AllDriverFileList</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>CurDriverFileList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSaveAfterScan</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewDriverCount</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoDriverCount</name>
                    </property>
                    <property>
                        <signature>int64[]()</signature>
                        <name>ScanReportArray</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnplugedDriverCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UpdateDriversCount</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DownloadListChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListAdded</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListCleared</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.ColorProgressBar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Decrement</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Increment</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PerformStep</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PerformStepBack</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics)</signature>
                        <name>drawBorder</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BarColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BorderColor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Download.ColorProgressBar/FillStyles()</signature>
                        <name>get_FillStyle</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Maximum</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Minimum</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Step</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BarColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BorderColor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ColorProgressBar/FillStyles)</signature>
                        <name>set_FillStyle</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Maximum</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Minimum</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Step</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BarColor</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>_BorderColor</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.ColorProgressBar/FillStyles</signature>
                        <name>_FillStyle</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Maximum</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Minimum</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Step</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_Value</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BarColor</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BorderColor</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Download.ColorProgressBar/FillStyles()</signature>
                        <name>FillStyle</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Maximum</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Minimum</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Step</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.ColorProgressBar/FillStyles</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.ColorProgressBar/FillStyles</signature>
                        <name>Dashed</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.ColorProgressBar/FillStyles</signature>
                        <name>Solid</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.ColorProgressBarDesigner</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.IDictionary)</signature>
                        <name>PostFilterProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.CompletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedState)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedState, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Exception</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedState</signature>
                        <name>State</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.CompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Core.Download.CompletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.CompletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.CompletedState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedState</signature>
                        <name>Cancelled</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedState</signature>
                        <name>Completed</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedState</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadController</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.InfStructure(string, string, string)</signature>
                        <name>GetDownloadFileList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.InfStructure(string, System.IO.Stream, string)</signature>
                        <name>GetFileListFromInfStru</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.InfStructure()</signature>
                        <name>get_InfStru</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.InfStructure)</signature>
                        <name>set_InfStru</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.InfStructure</signature>
                        <name>_infStru</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelDownload</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.ComponentModel.BackgroundWorker, System.ComponentModel.DoWorkEventArgs, int32&amp;)</signature>
                        <name>Download</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleasesResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>SHA256File</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(Easeware.Driver.Core.Download.DownloadHelper/ExecutionFlag)</signature>
                        <name>SetThreadExecutionState</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartDownload</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedEventHandler)</signature>
                        <name>add_Completed</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ProgressChangedEventHandler)</signature>
                        <name>add_ProgressChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>downloadWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.ProgressChangedEventArgs)</signature>
                        <name>downloadWorker_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>downloadWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_CheckFileSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CheckIfSupportResume</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SpeedLimit</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.InfStructure, System.ComponentModel.BackgroundWorker, System.ComponentModel.DoWorkEventArgs, int32&amp;)</signature>
                        <name>newDownload</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedEventHandler)</signature>
                        <name>remove_Completed</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ProgressChangedEventHandler)</signature>
                        <name>remove_ProgressChanged</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_CheckFileSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CheckIfSupportResume</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SpeedLimit</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>timer_Tick</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedEventHandler</signature>
                        <name>Completed</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxRetryCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VariantSpeedLimit</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_InfFileLocalPath</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_InfStruLocation</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_canceled</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_checkFileSize</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_checkIfSupportResume</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_downloadPath</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadStack</signature>
                        <name>_downloadStack</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>_downloadWorker</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localFilePath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_speedLimit</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fileDamaged</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Net.HttpWebRequest</signature>
                        <name>httpWebRequest</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Net.HttpWebResponse</signature>
                        <name>httpWebResponse</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.IO.FileStream</signature>
                        <name>outFileStream</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>readStream</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>totalDownloadPos</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>CheckFileSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CheckIfSupportResume</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SpeedLimit</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>Easeware.Driver.Core.Download.CompletedEventHandler</signature>
                        <name>Completed</name>
                    </event>
                    <event>
                        <signature>Easeware.Driver.Core.Download.ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadHelper/ExecutionFlag</name>
                <newname>Easeware.Driver.Core.Download.DownloadHelper/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadHelper/ExecutionFlag</signature>
                        <name>Continus</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadHelper/ExecutionFlag</signature>
                        <name>Display</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadHelper/ExecutionFlag</signature>
                        <name>System</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>AddIgnoreList</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.DriverUpload.UserSelfDriverFile)</signature>
                        <name>AddIgnoreListForUserSelfDriver</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>ClassifyNewDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;)</signature>
                        <name>ClassifyUserSelfDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device(System.Xml.XmlNode)</signature>
                        <name>CreateDeviceFromXmlNode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateDownloadFolder</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.DriverFile(System.Xml.XmlNode)</signature>
                        <name>CreateDriverFileFromXmlNode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Driver(System.Xml.XmlNode)</signature>
                        <name>CreateDriverFromXmlNode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.NewDriver(System.Xml.XmlNode)</signature>
                        <name>CreateNewDriverFromXmlNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Debug_AddDownloadItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Debug_AddRarDownloadItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Debug_LogDownloadList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decrypt</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Encrypt</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetAllDriverCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetCorrectScanTime</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.Device&gt;(string)</signature>
                        <name>GetDeviceWithNewDriver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDownloadListFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetDriverDownloadPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>GetIgnoreList</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Download.DownloadList()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetLastScanInfo</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetUrlPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUserSelfDriverPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>InitDownloadData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;)</signature>
                        <name>InitUploadData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAllCompleted</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAllUptoDate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsEmpty</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsEmptyIgnoreList</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.NewDriver)</signature>
                        <name>IsIgnore</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsNeverScan</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;)</signature>
                        <name>Merge</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;)</signature>
                        <name>MergeUploadData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ReadLocalDownloadListFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RefreshDownloadList</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reload</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.NewDriver)</signature>
                        <name>RemoveIgnoredNewDriver</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>RemoveIgnoredNewDriver</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetShowInCompleted</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RestoreIgnored</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveFile</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, Easeware.Driver.Core.Domain.DriverFile, bool)</signature>
                        <name>SaveToXML</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, Easeware.Driver.Core.DriverUpload.UserSelfDriverFile, bool)</signature>
                        <name>SaveToXMLForUserSelfDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>SummaryDriverCount</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanResult)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;)</signature>
                        <name>UpdateUserSelfDriver</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DownloadListChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_IgnoreListAdded</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_IgnoreListCleared</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AllDriverCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>get_DriverFileList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSaveAfterScan</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastScanTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NewDriverCount</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NoDriverCount</name>
                    </method>
                    <method>
                        <signature>int64[]()</signature>
                        <name>get_ScanReportArray</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UnplugedDriverCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UpdateDriversCount</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;()</signature>
                        <name>get_UserSelfDriverFileList</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_url_path_sha256</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DownloadListChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_IgnoreListAdded</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_IgnoreListCleared</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>restore_selected_ignored_devices</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AllDriverCount</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSaveAfterScan</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastScanTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NewDriverCount</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NoDriverCount</name>
                    </method>
                    <method>
                        <signature>void(int64[])</signature>
                        <name>set_ScanReportArray</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UnplugedDriverCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSaveAfterScan&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64[]</signature>
                        <name>&lt;ScanReportArray&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DownloadListChanged</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DownloadListFile</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DriverDownloadPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListAdded</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListCleared</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NewestVersion</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserSelfDriverPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_allDriverCount</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>_driverFileList</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;</signature>
                        <name>_ignoreList</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;</signature>
                        <name>_ignoreList_UserSelfDriver</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadList</signature>
                        <name>_instance</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_lastScanTime</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_newDriverCount</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_noDriverCount</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_unplugedDriverCount</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;</signature>
                        <name>_userSelfDriverFileList</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_version</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AllDriverCount</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;()</signature>
                        <name>DriverFileList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSaveAfterScan</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastScanTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NewDriverCount</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>NoDriverCount</name>
                    </property>
                    <property>
                        <signature>int64[]()</signature>
                        <name>ScanReportArray</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UnplugedDriverCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UpdateDriversCount</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.DriverUpload.UserSelfDriverFile&gt;()</signature>
                        <name>UserSelfDriverFileList</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DownloadListChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListAdded</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>IgnoreListCleared</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadStack</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddItemWithDownloadPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CancelStackItem</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CanceledForStackItem</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ContainsDriverFileWithDownloadPath</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Download.DownloadStack()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemoveItemWithDownloadPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.DownloadStack</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Download.DownloadStackItem&gt;</signature>
                        <name>_stackItemList</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadStackItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Canceled</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalFilePath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Canceled</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalFilePath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_canceled</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localFilePath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Canceled</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalFilePath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.DownloadStatus</name>
                <methodlist>
                    <method>
                        <signature>void(int64, int64, int32, float64)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>DoubleProgress</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>DownloadSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RetryCount</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Speed</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.MyButton</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DoubleClick</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DoubleClick</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>clickTime</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isClicked</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DoubleClick</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.MyTextBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.ProgressChangedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int64, int64, int32, float64)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>DoubleProgress</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Progress</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RetryCount</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Speed</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>TotalDownloadPos</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Download.ProgressChangedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Download.ProgressChangedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.DriverUpload.UploadHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelUpload</name>
                    </method>
                    <method>
                        <signature>int64(System.Net.WebClient, string)</signature>
                        <name>GetRemoteFileLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetTestServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartUpload</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, System.ComponentModel.BackgroundWorker, System.ComponentModel.DoWorkEventArgs, int32&amp;)</signature>
                        <name>Upload</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>_uploadWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.ProgressChangedEventArgs)</signature>
                        <name>_uploadWorker_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>_uploadWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedEventHandler)</signature>
                        <name>add_Completed</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ProgressChangedEventHandler)</signature>
                        <name>add_ProgressChanged</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_CheckFileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UploadQueryString</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.CompletedEventHandler)</signature>
                        <name>remove_Completed</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Download.ProgressChangedEventHandler)</signature>
                        <name>remove_ProgressChanged</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_CheckFileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UploadQueryString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Download.CompletedEventHandler</signature>
                        <name>Completed</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxRetryCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Download.ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ServerURL</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>UploadByteCountByOnce</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_checkFileSize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localFilePath</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_uploadPath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_uploadQueryString</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>_uploadWorker</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>CheckFileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UploadQueryString</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>Easeware.Driver.Core.Download.CompletedEventHandler</signature>
                        <name>Completed</name>
                    </event>
                    <event>
                        <signature>Easeware.Driver.Core.Download.ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.DriverUpload.UploadHelper/UploadStatus</name>
                <newname>Easeware.Driver.Core.DriverUpload.UploadHelper/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>DownloadSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RetryCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Speed</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.DriverUpload.UserSelfDriver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllDriverFileIsExist</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Backup.Driver()</signature>
                        <name>get_BackUpDriver</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriverDate</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_MatchedDevice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MatchedDeviceIdFromServer</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MatchedOSVersion</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Valid</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Backup.Driver)</signature>
                        <name>set_BackUpDriver</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_MatchedDevice</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MatchedDeviceIdFromServer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MatchedOSVersion</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_allDriverFileIsComplete</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Backup.Driver</signature>
                        <name>_backupDriver</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>_matchedDevice</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_matchedDeviceIdFromServer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_matchedOSVersion</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_valid</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllDriverFileIsExist</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Backup.Driver()</signature>
                        <name>BackUpDriver</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriverDate</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>MatchedDevice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MatchedDeviceIdFromServer</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MatchedOSVersion</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Valid</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.DriverUpload.UserSelfDriverFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateLocalPath</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenFolder</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Save</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalFilePath</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_LocalFileSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UploadCompleted</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UploadPath</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UploadProgress</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.DriverUpload.UserSelfDriver()</signature>
                        <name>get_UserSelfDriver</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalFilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UploadPath</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UploadProgress</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.DriverUpload.UserSelfDriver)</signature>
                        <name>set_UserSelfDriver</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DriverInfoFileName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_fileSize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_localFilePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_uploadPath</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_uploadProgress</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.DriverUpload.UserSelfDriver</signature>
                        <name>_userSelfDriver</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>localFileName</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalFilePath</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>LocalFileSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UploadCompleted</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UploadPath</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UploadProgress</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.DriverUpload.UserSelfDriver()</signature>
                        <name>UserSelfDriver</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.ExtData.FilterHardwareID</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>d9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilteCount</name>
                        <newname>d8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID1</name>
                        <newname>d7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID10</name>
                        <newname>d6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID100</name>
                        <newname>d5</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID101</name>
                        <newname>d4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID102</name>
                        <newname>d3</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID103</name>
                        <newname>d2</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID104</name>
                        <newname>d1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID105</name>
                        <newname>d0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID106</name>
                        <newname>dz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID107</name>
                        <newname>dy</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID108</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID109</name>
                        <newname>dw</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID11</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID110</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID111</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID112</name>
                        <newname>ds</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID113</name>
                        <newname>dr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID114</name>
                        <newname>dq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID115</name>
                        <newname>dp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID116</name>
                        <newname>dn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID117</name>
                        <newname>dm</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID118</name>
                        <newname>dl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID119</name>
                        <newname>dk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID12</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID120</name>
                        <newname>di</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID121</name>
                        <newname>dh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID122</name>
                        <newname>dg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID123</name>
                        <newname>df</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID124</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID125</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID126</name>
                        <newname>dc</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID127</name>
                        <newname>db</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID128</name>
                        <newname>da</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID129</name>
                        <newname>c9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID13</name>
                        <newname>c8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID130</name>
                        <newname>c7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID131</name>
                        <newname>c6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID132</name>
                        <newname>c5</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID133</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID134</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID135</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID136</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID137</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID138</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID139</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID14</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID140</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID141</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID142</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID143</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID144</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID145</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID146</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID147</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID148</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID149</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID15</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID150</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID151</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID152</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID153</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID154</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID155</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID156</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID157</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID158</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID159</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID16</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID160</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID161</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID162</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID163</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID164</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID165</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID166</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID167</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID17</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID18</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID19</name>
                        <newname>b0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID2</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID20</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID21</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID22</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID23</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID24</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID25</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID26</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID27</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID28</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID29</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID3</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID30</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID31</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID32</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID33</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID34</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID35</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID36</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID37</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID38</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID39</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID4</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID40</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID41</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID42</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID43</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID44</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID45</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID46</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID47</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID48</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID49</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID5</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID50</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID51</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID52</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID53</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID54</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID55</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID56</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID57</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID58</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID59</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID6</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID60</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID61</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID62</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID63</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID64</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID65</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID66</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID67</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID68</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID69</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID7</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID70</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID71</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID72</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID73</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID74</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID75</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID76</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID77</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID78</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID79</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID8</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID80</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID81</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID82</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID83</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID84</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID85</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID86</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID87</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID88</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID89</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID9</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID90</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID91</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID92</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID93</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID94</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID95</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID96</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID97</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID98</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID99</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>ea</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.ExtData.HardwareIDFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Contain</name>
                    </method>
                    <method>
                        <signature>string[](string[], System.Text.StringBuilder, string)</signature>
                        <name>FilterIDs</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.ExtData.HardwareIDFilter()</signature>
                        <name>GetInstance</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.ExtData.HardwareIDFilter</signature>
                        <name>instance</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>rm</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.Feedback</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanUserFileForSubmit</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CompressUserFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUserFileForSubmit</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowAttachSysInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Email</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFromSendInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Feedback.RegistryInfoFile()</signature>
                        <name>get_RegistryInfoFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ScanFile</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Feedback.SetupApiLog()</signature>
                        <name>get_SetupApiLog</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Signature</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subject</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SysInfoFile</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Feedback.SysInfoFile()</signature>
                        <name>get_SystemInfoFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserFile</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Feedback.UserInfoFile()</signature>
                        <name>get_UserInfoFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingPath</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowAttachSysInfo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Email</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFromSendInfo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subject</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SysInfoFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserFile</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AllowAttachSysInfo&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Content&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Email&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFromSendInfo&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Language&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Subject&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SysInfoFile&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserFile&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>FILE_SIZE_300_KB</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.RegistryInfoFile</signature>
                        <name>registryInfoFile</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.SetupApiLog</signature>
                        <name>setupApiLog</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.SysInfoFile</signature>
                        <name>systemInfoFile</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userFileTmpZip</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.UserInfoFile</signature>
                        <name>userInfoFile</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowAttachSysInfo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Content</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Email</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFromSendInfo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Language</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Feedback.RegistryInfoFile()</signature>
                        <name>RegistryInfoFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ScanFile</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Feedback.SetupApiLog()</signature>
                        <name>SetupApiLog</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Signature</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Subject</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SysInfoFile</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Feedback.SysInfoFile()</signature>
                        <name>SystemInfoFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserFile</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Feedback.UserInfoFile()</signature>
                        <name>UserInfoFile</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.FormUpload</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetDefaultExtension</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetMimeType</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.Collections.Generic.Dictionary`2&lt;string,object&gt;, string)</signature>
                        <name>GetMultipartFormData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Net.HttpWebResponse(string, string, System.Collections.Generic.Dictionary`2&lt;string,object&gt;)</signature>
                        <name>MultipartFormDataPost</name>
                    </method>
                    <method>
                        <signature>System.Net.HttpWebResponse(string, string, string, unsigned int8[])</signature>
                        <name>PostForm</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.Encoding</signature>
                        <name>encoding</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.FormUpload/FileParameter</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContentType</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_File</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ContentType</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_File</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ContentType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;File&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ContentType</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>File</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.RegistryInfoFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearPackageFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Export</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>Package</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Exists</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportHKLMClassFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportHKLMEnumFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportZipFilePath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;()</signature>
                        <name>get_Files</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PackageFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;WorkingPath&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HKLM_CLASS_KEY</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HKLM_CLASS_REG_FILE_NAME</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HKLM_ENUM_KEY</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HKLM_ENUM_REG_FILE_NAME</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HKLM_class_file_path</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HKLM_enum_file_path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PackageFileName</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;</signature>
                        <name>logfiles</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zipfilePath</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Exists</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportHKLMClassFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportHKLMEnumFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportZipFilePath</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;()</signature>
                        <name>Files</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PackageFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.SetupApiLog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearPackageFile</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>Package</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Exists</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;()</signature>
                        <name>get_Files</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PackageFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string, string)</signature>
                        <name>get_pattern_files</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.IO.FileInfo&gt;(string, string)</signature>
                        <name>get_pattern_files_info</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;WorkingPath&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PackageFileName</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;</signature>
                        <name>logfiles</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Exists</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;System.IO.FileInfo&gt;()</signature>
                        <name>Files</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PackageFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.SetupApiLog/&lt;&gt;c</name>
                <newname>Easeware.Driver.Core.Feedback.SetupApiLog/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;get_pattern_files&gt;b__8_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(System.IO.FileInfo)</signature>
                        <name>&lt;get_pattern_files_info&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Feedback.SetupApiLog/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__8_0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.IO.FileInfo,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.SysInfoFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearExportFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>Export</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportTextFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportZipFilePath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUserCancelExport</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;WorkingPath&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExportFileTxt</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExportFileZip</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isCancelExport</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>txtfilePath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zipfilePath</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ExportTextFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportZipFilePath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUserCancelExport</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Feedback.UserInfoFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearExportFiles</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>Export</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteFileToTmpDir</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportRequestFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportResponseFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportUserInfoFilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExportZipFilePath</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUserCancelExport</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RequestFileContent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ResponseFileContent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserInfoFileContent</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WorkingPath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RequestFileContent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ResponseFileContent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserInfoFileContent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WorkingPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RequestFileContent&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ResponseFileContent&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserInfoFileContent&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;WorkingPath&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExportFileZip</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExportRequestXml</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExportResponseTxt</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExportUserInfoTxt</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isCancelExport</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>reponsefilePath</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>requestfilePath</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userinfofilePath</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>zipfilePath</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ExportRequestFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportResponseFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportUserInfoFilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExportZipFilePath</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUserCancelExport</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RequestFileContent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ResponseFileContent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>UserInfoFileContent</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>WorkingPath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CRYPTCATATTRIBUTE</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbStruct</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbValue</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwAttrTypeAndAction</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwReserved</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pbValue</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pwszReferenceTag</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CabFile</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.FileInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExtractFile</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CatalogFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetKeyInINF</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetKeyValueString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PlatformExtension</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PlatformExtension</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>NT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTAMD64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTIA64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTx86</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>PlatformExtensionList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_fileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_platformExtension</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PlatformExtension</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CatalogFileList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.CatalogFile)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.CatalogFile(int32)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsEmpty</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.CatalogFile&gt;</signature>
                        <name>_catalogFileList</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CatalogViewer</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>bool(native int&amp;, string, System.Text.StringBuilder, unsigned int32, unsigned int32)</signature>
                        <name>CryptAcquireContext</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CryptCATClose</name>
                    </method>
                    <method>
                        <signature>native int(native int, native int, native int)</signature>
                        <name>CryptCATEnumerateAttr</name>
                    </method>
                    <method>
                        <signature>native int(native int, native int)</signature>
                        <name>CryptCATEnumerateMember</name>
                    </method>
                    <method>
                        <signature>native int(string, unsigned int32, native int, unsigned int32, unsigned int32)</signature>
                        <name>CryptCATOpen</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32)</signature>
                        <name>CryptReleaseContext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetOsAttr</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CRYPT_DEFAULT_CONTAINER_OPTIONAL</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CRYPT_DELETEKEYSET</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CRYPT_MACHINE_KEYSET</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CRYPT_NEWKEYSET</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CRYPT_SILENT</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>CRYPT_VERIFYCONTEXT</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>INVALID_HANDLE_VALUE</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PROV_RSA_FULL</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>acquireContextSuccess</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>catalogFileFullPath</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hCatalog</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hProv</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CompletedEventArgsI</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.CompletedStateI, System.Exception, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.CompletedStateI, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Exception</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Errordate</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompletedStateI</signature>
                        <name>State</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CompletedStateI</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompletedStateI</signature>
                        <name>InstallSucceed</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompletedStateI</signature>
                        <name>InstallSucceedNotInf</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompletedStateI</signature>
                        <name>InstallSucceedOrRestart</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompletedStateI</signature>
                        <name>InstallSuccessful</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CompressedFile</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.FileInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.CompressedFile(string)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Decompress</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EmptyExtractDir</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExtractFile</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsCabFile</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsSupportType</name>
                    </method>
                    <method>
                        <signature>System.IO.DirectoryInfo()</signature>
                        <name>get_ExtractDir</name>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo()</signature>
                        <name>get_FileInfo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.DirectoryInfo</signature>
                        <name>extractDir</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.FileInfo</signature>
                        <name>file</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.IO.DirectoryInfo()</signature>
                        <name>ExtractDir</name>
                    </property>
                    <property>
                        <signature>System.IO.FileInfo()</signature>
                        <name>FileInfo</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.CompressedFileInstaller</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo()</signature>
                        <name>FindExeOrMsi</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo()</signature>
                        <name>FindSetup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;()</signature>
                        <name>FindcabBestMatchInf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo(System.IO.FileInfo[])</signature>
                        <name>GetTopOne</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Install</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompressedFile</signature>
                        <name>compressFile</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverFile</signature>
                        <name>driverFile</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.Device</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompatibleId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeviceDesc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HardwareId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstallSection</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompatibleId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeviceDesc</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HardwareId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InstallSection</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompatibleId&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DeviceDesc&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;HardwareId&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InstallSection&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Comment</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CompatibleId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DeviceDesc</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HardwareId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InstallSection</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.DriverPackage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;</signature>
                        <name>InfList</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.DriverPackageParser</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.DriverPackage(System.IO.DirectoryInfo)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.Inf(System.IO.FileInfo)</signature>
                        <name>ParseInf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.Inf, Easeware.Driver.Core.Install.InfReader)</signature>
                        <name>ParseMfgSection</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.Inf, Easeware.Driver.Core.Install.InfReader)</signature>
                        <name>ParseModelSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.Inf, Easeware.Driver.Core.Install.InfReader)</signature>
                        <name>ParseVersionSection</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.Inf)</signature>
                        <name>RemoveBlankOsVersion</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.ExecutableFileInstaller</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Install</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.Inf</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.CatalogFile(string)</signature>
                        <name>GetCatalogFileForArchi</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;System.Version&gt;(string)</signature>
                        <name>GetOsAttrInCatalog</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DriverDate</name>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_DriverVersion</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstallSectionName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDisplayDevice</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPrinterDevice</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.CatalogFile&gt;</signature>
                        <name>CatalogFileList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Class</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ClassGUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DriverVer</name>
                    </field>
                    <field>
                        <signature>System.IO.FileInfo</signature>
                        <name>FileInfo</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>MatchDevices</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.MatchInf</signature>
                        <name>MatchInf</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Model&gt;</signature>
                        <name>ModelList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Provider</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RawDriverDate</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RawDriverVersion</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Signature</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>DriverDate</name>
                    </property>
                    <property>
                        <signature>System.Version()</signature>
                        <name>DriverVersion</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>InstallSectionName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDisplayDevice</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPrinterDevice</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.InfFileInstaller</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;()</signature>
                        <name>FindBestMatchInf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Install</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.InfFinder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.DriverPackage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>FilterFileNotIntegrity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.Inf(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>FindBestMatchInf</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.MatchInf, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>RankCompatibleDriverCompatibleId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.MatchInf, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>RankCompatibleDriverHardwareId</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.MatchInf, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>RankDriverCompatibleId</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.MatchInf, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>RankDriverHardwareId</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SelectBestMatchInf</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SelectBestRankINF</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>SelectMatchDeviceId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>SelectMatchOSInCatalog</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>SelectMatchOsInInf</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SelectNewestDateINF</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SelectNewestVersionINF</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.TargetOsVersion&gt;(Easeware.Driver.Core.Install.Inf, Easeware.Driver.Core.Install.Model, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>SortMatchOS</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.TargetOsVersion&gt;(Easeware.Driver.Core.Install.Inf, Easeware.Driver.Core.Install.Model, Easeware.Driver.Core.Domain.OsVersion)</signature>
                        <name>SortMatchOSWithCatalog</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Version</signature>
                        <name>WIN7</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.DriverPackage</signature>
                        <name>_driverPack</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.MatchInf&gt;</signature>
                        <name>_matchInfs</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.InfReader</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Install.InstallFile&gt;, string)</signature>
                        <name>AddInstallFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ExistSection</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetActualInstallSectionName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetAllValueSameKey</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Install.InstallFile&gt;(string)</signature>
                        <name>GetFileListSectionFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.InstallFile&gt;(string, string)</signature>
                        <name>GetInstallSectionCopyFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, string, string, System.Text.StringBuilder, int32, string)</signature>
                        <name>GetPrivateProfileString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSectionValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.InstallFile, string)</signature>
                        <name>GetSourceDiskPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.InstallFile, string)</signature>
                        <name>GetSourceFilePath</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetStringVariantValue</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsDeviceInf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveComment</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveQuotes</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int64(string, string, string, string)</signature>
                        <name>WritePrivateProfileString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.InstallFile</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Exist</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetRelativePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DestinationFileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceFileName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DiskId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SourceDiskPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SubDir</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TagOrCabFile</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_destFileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_srcFileName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>DestinationFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceFileName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.Installer</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.Installer(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Install</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.DriverFile()</signature>
                        <name>get_DriverFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;()</signature>
                        <name>get_InfList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsExecutableFileInstaller</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPackageMultiINF</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;()</signature>
                        <name>get_MathcInfs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedRestart</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;)</signature>
                        <name>set_InfList</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsExecutableFileInstaller</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPackageMultiINF</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;)</signature>
                        <name>set_MathcInfs</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NeedRestart</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverFile</signature>
                        <name>_driverFile</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_needRestart</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;</signature>
                        <name>infList</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isExecutableFileInstaller</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPackageMultiINF</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;</signature>
                        <name>mathcInfs</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.DriverFile()</signature>
                        <name>DriverFile</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;()</signature>
                        <name>InfList</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsExecutableFileInstaller</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPackageMultiINF</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;()</signature>
                        <name>MathcInfs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedRestart</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.ManualInstaller</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo()</signature>
                        <name>FindExeOrMsi</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo()</signature>
                        <name>FindSetup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.IO.FileInfo(System.IO.FileInfo[])</signature>
                        <name>GetTopOne</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InstallInBackground</name>
                    </method>
                    <method>
                        <signature>void(System.IO.FileInfo)</signature>
                        <name>RunSetup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>startInstall</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>worker_DoWork</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Install.CompressedFile</signature>
                        <name>compressFile</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverFile</signature>
                        <name>driverFile</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInstallComplete</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.MatchInf</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.Inf)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Install.Inf</signature>
                        <name>Inf</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InstallSectionName</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Rank</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.Model</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Compact</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Install.TargetOsVersion(string)</signature>
                        <name>GetOsVersion</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.TargetOsVersion&gt;</signature>
                        <name>OsVersionList</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.ProgressChangedEventArgsI</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Progress</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.StartInstallDriver</name>
                <methodlist>
                    <method>
                        <signature>void(bool, Easeware.Driver.Core.Domain.DriverFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>InstallWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.ProgressChangedEventArgs)</signature>
                        <name>InstallWorker_ProgressChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>InstallWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>SHA256File</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.StartInstallDriver/CompletedEventHandler)</signature>
                        <name>add_Completed</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.StartInstallDriver/ProgressChangedEventHandler)</signature>
                        <name>add_ProgressChanged</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NeedRestart</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.StartInstallDriver/CompletedEventHandler)</signature>
                        <name>remove_Completed</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.StartInstallDriver/ProgressChangedEventHandler)</signature>
                        <name>remove_ProgressChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Install.StartInstallDriver/CompletedEventHandler</signature>
                        <name>Completed</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Inf&gt;</signature>
                        <name>Inflist</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.StartInstallDriver/ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.DriverFile</signature>
                        <name>driverfile</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isExecutableFileInstaller</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInfInstall</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isInstallSucceed</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isNotFindInfFile</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPackageMultiINF</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Install.Inf&gt;</signature>
                        <name>mathcInfs</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needRestart</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>NeedRestart</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>Easeware.Driver.Core.Install.StartInstallDriver/CompletedEventHandler</signature>
                        <name>Completed</name>
                    </event>
                    <event>
                        <signature>Easeware.Driver.Core.Install.StartInstallDriver/ProgressChangedEventHandler</signature>
                        <name>ProgressChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.StartInstallDriver/CompletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Core.Install.CompletedEventArgsI, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Install.CompletedEventArgsI)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.StartInstallDriver/ProgressChangedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Core.Install.ProgressChangedEventArgsI, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Install.ProgressChangedEventArgsI)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.TargetOsVersion</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.Model)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Device&gt;()</signature>
                        <name>CloneDeviceList</name>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>CombTargetOsVersion</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Install.Device)</signature>
                        <name>Contains</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetModelSectionName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsStandard</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Install.TargetOsVersion)</signature>
                        <name>Merge</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Architecture</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Architecture32</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Architecture64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BlankOsVersion</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DefaultArchitecture</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Install.Device&gt;</signature>
                        <name>DeviceList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OSMajorVersion</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OSMinorVersion</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Install.Model</signature>
                        <name>ParentModel</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProductType</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RawText</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SuiteMask</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEmpty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Install.ZipOrRar</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.FileInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ExtractFile</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.CertifyResult</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsVolumeLicense</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CertMessage</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_EndTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRenew</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.LicenseType()</signature>
                        <name>get_LicenseType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MessageType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Price</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_RemainingDay</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RenewPrice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RenewURL</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Valid</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>InvalidRemainingDay</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MillisecondPerDay</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_key</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_price</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_renewPrice</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,string&gt;</signature>
                        <name>_value</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CertMessage</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>EndTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRenew</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Key</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.LicenseType()</signature>
                        <name>LicenseType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MessageType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Price</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>RemainingDay</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RenewPrice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RenewURL</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Valid</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.License</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.License(string)</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>string(string[], string)</signature>
                        <name>GetNodeText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>MD5WithLicenseKey</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.CertifyResult)</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License/LicenseEventHandler)</signature>
                        <name>add_ValidityChanged</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CertMessage</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Empty</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_EndTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MCKey</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_RemainingDay</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.LicenseType()</signature>
                        <name>get_Type</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Valid</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_completed_version</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_license_version</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.License/LicenseEventHandler)</signature>
                        <name>remove_ValidityChanged</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CertMessage</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_EndTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Key</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_RemainingDay</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Register.LicenseType)</signature>
                        <name>set_Type</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Valid</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CorruptKey</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FREE_VERSION</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FileName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>InvalidRemainingDay</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PRO_VERSION</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License/LicenseEventHandler</signature>
                        <name>ValidityChanged</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_certMessage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_endTime</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_key</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.License</signature>
                        <name>_license</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_remainingDay</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.LicenseType</signature>
                        <name>_type</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_valid</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>CertMessage</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Empty</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>EndTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Key</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>MCKey</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>RemainingDay</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Register.LicenseType()</signature>
                        <name>Type</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Valid</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>Easeware.Driver.Core.Register.License/LicenseEventHandler</signature>
                        <name>ValidityChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.License/LicenseEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, System.EventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.LicenseType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Register.LicenseType</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.LicenseType</signature>
                        <name>Trial</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.LicenseType</signature>
                        <name>Volume</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.PartnerConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.PartnerConfig()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetQueryString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetQueryStringNew</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_installer_id</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_installer_id_old</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>is_chrome_offers_series</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>is_kb_series</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ConfigFileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InstallerID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OY</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PartnerID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PaymentPlatform</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RegistryKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SourceID</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.PartnerConfig</signature>
                        <name>_instance</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.RegisterManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.CertifyResult(string, string)</signature>
                        <name>Activate</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.CertifyResult(string, string, string)</signature>
                        <name>Certify</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.CertifyResult(string)</signature>
                        <name>Check</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMachineId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMachineName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.CertifyResult(string)</signature>
                        <name>ManualCheck</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_serial_number</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_windows_guid</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Register.jp_buy_config</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Register.jp_buy_config()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetQueryString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BuyUrlID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ConfigFileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Country</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Register.jp_buy_config</signature>
                        <name>_instance</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Restore.RestorePointer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>CheckCanCreateRestorePoint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>Exists</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsSysRestoreEnable</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>TodayHasExists</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>enable_system_protection</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>enable_vss_service</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>execute_power_shell_command</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>wmi_create_restore_point</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MaxRetryCount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VSS_SERVICE</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Restore.RestorePointer/&lt;&gt;c</name>
                <newname>Easeware.Driver.Core.Restore.RestorePointer/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Management.Automation.DataAddedEventArgs)</signature>
                        <name>&lt;execute_power_shell_command&gt;b__10_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Restore.RestorePointer/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler`1&lt;System.Management.Automation.DataAddedEventArgs&gt;</signature>
                        <name>&lt;&gt;9__10_0</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.DetectDeviceFinishEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(int32, System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;</signature>
                        <name>ClassList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DeviceCount</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.DetectDeviceFinishEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Core.Scan.DetectDeviceFinishEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.DetectDeviceFinishEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.DeviceManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(string)</signature>
                        <name>ConvertToDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(unsigned int8[])</signature>
                        <name>ConvertToDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>CreateDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Driver(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>CreateDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>GetDevicesFromEnum</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>GetEnumSubKey</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Category, Easeware.Driver.Core.Domain.Device, bool)</signature>
                        <name>HasSameDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Category, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.Device)</signature>
                        <name>SaveNewerDriver</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Category, Easeware.Driver.Core.Domain.Device, Easeware.Driver.Core.Domain.Device)</signature>
                        <name>SavePluginDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.DeviceManager/ScanResult()</signature>
                        <name>Scan</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.DeviceManager/ScanResult(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>Scan</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey)</signature>
                        <name>getOEMDriverInf</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_PresentDeviceId</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>send_local_driver_info_to_ga</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>_presentDeviceId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DeviceManager/ScanResult</signature>
                        <name>_result</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>PresentDeviceId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.DeviceManager/ScanResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;</signature>
                        <name>ClassList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DeviceCount</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.DriverManager</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, Easeware.Driver.Core.Scan.QueryNewDriverBuilder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;(Easeware.Driver.Core.Domain.Device, System.Xml.XmlDocument)</signature>
                        <name>CreateNewDriver</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;, System.Xml.XmlDocument)</signature>
                        <name>CreateNewDriver</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;(System.Xml.XmlDocument)</signature>
                        <name>CreateNewNetworkDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;(Easeware.Driver.Core.Domain.Device, System.Xml.XmlDocument)</signature>
                        <name>CreateUserDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;, System.Xml.XmlDocument)</signature>
                        <name>CreateUserDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>Debug_InsertTestDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement)</signature>
                        <name>Debug_InsertTestDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Debug_SaveResponseXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Scan.WUA/WUADriver&gt;)</signature>
                        <name>Debug_SaveWUAResultToXML</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>Exports</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>FilterRequestDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(string)</signature>
                        <name>GetDate</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetTestServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Scan.WUA/WUADriver&gt;, System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>MergeNewDriver</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.DriverManager/SearchResult(string)</signature>
                        <name>QueryNetworkNewDriver</name>
                    </method>
                    <method>
                        <signature>System.Xml.XmlDocument(string)</signature>
                        <name>QueryNewDriver</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.DriverManager/SearchResult(System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>Search</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.DriverManager/SearchResult(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>SearchForSingleDevice</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.NewDriver(System.Xml.XmlNode, bool)</signature>
                        <name>create_new_driver_by_xml_node</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.QueryNewDriverBuilder</signature>
                        <name>_queryBuilder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>serverUrl</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>xmlResponseContent</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.DriverManager/SearchResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Exception</signature>
                        <name>Exception</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExceptionCode</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExceptionRequestXml</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExceptionResponseXml</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>ExceptionTime</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;</signature>
                        <name>NewDriverList</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;</signature>
                        <name>UserSelfDriverList</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.PnPEntityManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(System.Management.ManagementObject, string)</signature>
                        <name>GetDateTimeValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>GetDevices</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.PnPEntityDevice(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>GetPnPEntityDevice</name>
                    </method>
                    <method>
                        <signature>string(System.Management.ManagementObject, string, string)</signature>
                        <name>GetStringArrayValue</name>
                    </method>
                    <method>
                        <signature>string(System.Management.ManagementObject, string)</signature>
                        <name>GetUInt16Value</name>
                    </method>
                    <method>
                        <signature>string(System.Management.ManagementObject, string)</signature>
                        <name>GetUInt32Value</name>
                    </method>
                    <method>
                        <signature>string(System.Management.ManagementObject, string)</signature>
                        <name>GetValue</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitDeviceList</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsNotUnplugged</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.PnPEntityDevice, Easeware.Driver.Core.Domain.PnPEntityDevice)</signature>
                        <name>IsSameStatus</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>IsTheDeviceNotUnplugged</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>IsTheDevicePlugin</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsTheDevicePlugin</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>get_pnpEntityAllDeviceDic</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>get_pnpEntityDeviceList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>get_pnpEntityDeviceNotUnpluggedDic</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>get_pnpEntityWorkingDeviceDic</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;)</signature>
                        <name>set_pnpEntityAllDeviceDic</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.PnPEntityDevice&gt;)</signature>
                        <name>set_pnpEntityDeviceList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;)</signature>
                        <name>set_pnpEntityDeviceNotUnpluggedDic</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;)</signature>
                        <name>set_pnpEntityWorkingDeviceDic</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;</signature>
                        <name>&lt;pnpEntityAllDeviceDic&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.PnPEntityDevice&gt;</signature>
                        <name>&lt;pnpEntityDeviceList&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;</signature>
                        <name>&lt;pnpEntityDeviceNotUnpluggedDic&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;</signature>
                        <name>&lt;pnpEntityWorkingDeviceDic&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DEVICE_IS_WORKING</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>NOT_UN_PLUGGED</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NO_FOUND</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>pnpEntityAllDeviceDic</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>pnpEntityDeviceList</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>pnpEntityDeviceNotUnpluggedDic</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.PnPEntityDevice&gt;()</signature>
                        <name>pnpEntityWorkingDeviceDic</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.QueryNewDriverBuilder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, System.Text.StringBuilder)</signature>
                        <name>Debug_SaveFilterIDCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Debug_SaveRequestXml</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;)</signature>
                        <name>SetClientDeviceTree</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string, string)</signature>
                        <name>SetClientVersion</name>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string, string, bool)</signature>
                        <name>SetClientVersion</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetUploadHardwareInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>ToXmlStringForAllVersionDrivers</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_clientVersion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.Device&gt;</signature>
                        <name>_deviceList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_licenseKey</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_machineId</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_productName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_productType</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_serialNumber</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_uploadHardwareInfo</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_uploadUserDriver</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.RegistryKeyHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateRestorePointFrequency</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetBinary</name>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetMultiString</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetString</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetStringDescriptionPart</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.ScanCompeletedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanResult)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanResult</signature>
                        <name>Result</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.ScanCompeletedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, Easeware.Driver.Core.Scan.ScanCompeletedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.ScanManager</name>
                <methodlist>
                    <method>
                        <signature>void(string, Easeware.Driver.Core.Scan.QueryNewDriverBuilder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.ScanResult(int64, Easeware.Driver.Core.Scan.DeviceManager/ScanResult, Easeware.Driver.Core.Scan.DriverManager/SearchResult)</signature>
                        <name>CreateScanResult</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.DetectDeviceFinishEventArgs)</signature>
                        <name>OnDetectedDeviceFinished</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveIgnoredNewDriver</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartScan</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopScanning</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>WUATimeout_Tick</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.DetectDeviceFinishEventHandler)</signature>
                        <name>add_DetectDeviceFinished</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanCompeletedEventHandler)</signature>
                        <name>add_ScanCompeleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>checkScanCompleted_Tick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>detectDeviceWorker_DoWork</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>detectDeviceWorker_RunWorkerCompleted</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsStopScanning</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScanWindowsUpdate</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.DetectDeviceFinishEventHandler)</signature>
                        <name>remove_DetectDeviceFinished</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanCompeletedEventHandler)</signature>
                        <name>remove_ScanCompeleted</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>scanNewDriverWorker_DoWork</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>scanNewDriverWorker_RunWorkerCompleted</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsStopScanning</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ScanWindowsUpdate</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>winUpdateWorker_DoWork</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>winUpdateWorker_RunWorkerCompleted</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CHECK_SCAN_COMPLETED_INTERVAL</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DetectDeviceFinishEventHandler</signature>
                        <name>DetectDeviceFinished</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanCompeletedEventHandler</signature>
                        <name>ScanCompeleted</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WUA_TIMEOUT</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>_WUATimeout</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DeviceManager/ScanResult</signature>
                        <name>_scanDeviceResult</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_scanNewDriverFinish</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DriverManager/SearchResult</signature>
                        <name>_scanNewDriverResult</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Stopwatch</signature>
                        <name>_scanTimer</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_scanWindowsUpdate</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_windowsUpdateFinish</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Scan.WUA/WUADriver&gt;</signature>
                        <name>_windowsUpdateResult</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Timer</signature>
                        <name>checkScanCompleted</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>detectDeviceWorker</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DeviceManager</signature>
                        <name>deviceMgr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.DriverManager</signature>
                        <name>driverMgr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isStopScanning</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>scanNewDriverWorker</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>winUpdateWorker</name>
                        <newname>o</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsStopScanning</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ScanWindowsUpdate</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>Easeware.Driver.Core.Scan.DetectDeviceFinishEventHandler</signature>
                        <name>DetectDeviceFinished</name>
                    </event>
                    <event>
                        <signature>Easeware.Driver.Core.Scan.ScanCompeletedEventHandler</signature>
                        <name>ScanCompeleted</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.ScanProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_Device</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>get_PreviousDevice</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_Device</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Domain.Device)</signature>
                        <name>set_PreviousDevice</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>device</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Domain.Device</signature>
                        <name>previousDevice</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>Device</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Domain.Device()</signature>
                        <name>PreviousDevice</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.ScanReport</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetUnplugedDriverNum</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DeviceTotal</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewDriverNum</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NoneDriverNum</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_ScanTime</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UpdateDriverNum</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DeviceTotal</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewDriverNum</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NoneDriverNum</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_ScanTime</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UpdateDriverNum</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>_deviceTotal</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_newDriverNum</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_noneDriverNum</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_scanTime</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_updateDriverNum</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>DeviceTotal</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewDriverNum</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NoneDriverNum</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>ScanTime</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UpdateDriverNum</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.ScanResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;()</signature>
                        <name>get_ClassList</name>
                    </method>
                    <method>
                        <signature>System.Exception()</signature>
                        <name>get_Exception</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExceptionRequestXml</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExceptionResponseXml</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ExceptionTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Exceptioncode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;()</signature>
                        <name>get_NewDriverList</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.ScanReport()</signature>
                        <name>get_Report</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;()</signature>
                        <name>get_UserSelfDriverList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;)</signature>
                        <name>set_ClassList</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>set_Exception</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExceptionRequestXml</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExceptionResponseXml</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ExceptionTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Exceptioncode</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>set_NewDriverList</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Scan.ScanReport)</signature>
                        <name>set_Report</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;)</signature>
                        <name>set_UserSelfDriverList</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;</signature>
                        <name>classList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Exception</signature>
                        <name>exception</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptionRequestXml</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptionResponseXml</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>exceptionTime</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>exceptioncode</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;</signature>
                        <name>newDriverList</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.ScanReport</signature>
                        <name>report</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;</signature>
                        <name>userSelfDriverList</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Domain.Category&gt;()</signature>
                        <name>ClassList</name>
                    </property>
                    <property>
                        <signature>System.Exception()</signature>
                        <name>Exception</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExceptionRequestXml</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ExceptionResponseXml</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ExceptionTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Exceptioncode</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;()</signature>
                        <name>NewDriverList</name>
                    </property>
                    <property>
                        <signature>Easeware.Driver.Core.Scan.ScanReport()</signature>
                        <name>Report</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.DriverUpload.UserSelfDriver&gt;()</signature>
                        <name>UserSelfDriverList</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.WUA</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckFilterHid</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Scan.WUA()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Scan.WUA/WUADriver&gt;()</signature>
                        <name>GetWUADriverList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Scan.WUA/WUADriver&gt;(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>GetWUADriverList</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScanTimeOut</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ScanTimeOut</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_ScanTimeOut</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Scan.WUA</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>fileterHid</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>ScanTimeOut</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Scan.WUA/WUADriver</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>Date</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DeviceName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FilePath</name>
                    </field>
                    <field>
                        <signature>System.Decimal</signature>
                        <name>FileSize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HardwareId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Provider</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.ServerConfig.ClientInfoBuilder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>SetProductInfo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToXmlString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_clientVersion</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_licenseKey</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_machineId</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_productName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_productType</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.CatalogFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetKeyInINF</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PlatformExtension</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PlatformExtension</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>NT</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTAMD64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTIA64</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NTx86</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>PlatformExtensionList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_fileName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_filePath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_platformExtension</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PlatformExtension</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.CatalogFileList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Easeware.Driver.Core.Tools.Common.CatalogFile)</signature>
                        <name>Add</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.CatalogFileList(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FindInstalledCatalogFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFilePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;()</signature>
                        <name>ToDriverFile</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Tools.Common.CatalogFile&gt;</signature>
                        <name>_catalogFileList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_installCatalogFileName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEmpty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.FolderId</name>
                <newname>aj</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>CommonPrograms</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>CommonStartMenu</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>CommonStartup</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>CommonTemplates</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>Favorites</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>ProgramData</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>ProgramFiles</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>ProgramFilesCommon</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>PublicDesktop</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.FolderId</signature>
                        <name>PublicDocuments</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.InfFile</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Exists</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.InfFile/InstallFile&gt;(string)</signature>
                        <name>GetFileList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasDestinationDir</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>SaftAdd</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetSourceName</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriverFile()</signature>
                        <name>ToDriverFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_CatalogFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;()</signature>
                        <name>get_CatalogFiles</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.InfFile/InstallFile&gt;&gt;()</signature>
                        <name>get_CopyFileListSection</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_CopyFileName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultDestDir</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_DestinationDirs</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasDefaultDestDir</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_IncludeFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_LayoutFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_PrinterFileName</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_SourceDisksFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.CatalogFileList</signature>
                        <name>CatalogList</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InstallSection</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Path</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SourceName</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_catalogFileName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;</signature>
                        <name>_catalogFiles</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.InfFile/InstallFile&gt;&gt;</signature>
                        <name>_copyFileListSection</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_copyFileName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_defaultDir</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_destinationDirs</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_includeFileName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_layoutFileName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_printerFileName</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_sourceDisksFiles</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.InfReader</signature>
                        <name>infReader</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>CatalogFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;()</signature>
                        <name>CatalogFiles</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.InfFile/InstallFile&gt;&gt;()</signature>
                        <name>CopyFileListSection</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>CopyFileName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DefaultDestDir</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>DestinationDirs</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasDefaultDestDir</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>IncludeFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>LayoutFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>PrinterFileName</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>SourceDisksFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.InfFile/DirConfig</name>
                <newname>Easeware.Driver.Core.Tools.Common.InfFile/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.InfFile/DirConfig(string)</signature>
                        <name>Create</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>fixedFileName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>DirId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SubDir</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.InfFile/InstallFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.InfFile/InstallFile(string)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DestinationFileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SourceFileName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.InfReader</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>GetHardwareIds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>GetModleHardwareIds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string[]&amp;)</signature>
                        <name>GetPrivateProfileSection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(string, native int, unsigned int32, string)</signature>
                        <name>GetPrivateProfileSection</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string, System.Text.StringBuilder, int32, string)</signature>
                        <name>GetPrivateProfileString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSectionValue</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(string)</signature>
                        <name>GetSourceDisksElements</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetStringVariantValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetStringVariantValue2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetValueEx</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsDeviceInf</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveComment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveQuotes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>SplitSectionValue</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int64(string, string, string, string)</signature>
                        <name>WritePrivateProfileString</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>WriteValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.InstallSectionInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>InfPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InstallSection</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RegKey</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.RegistryKeyHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetBinary</name>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetMultiString</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetString</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey, string)</signature>
                        <name>GetStringDescriptionPart</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.RescanEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;</signature>
                        <name>DeviceTree</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.ToolsCategory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsCategory(string)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Tools.Common.ToolsDriver)</signature>
                        <name>ExistAbsoluteSameDriver</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Tools.Common.ToolsDriver)</signature>
                        <name>ExistSameDriver</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetClassDescriptionFromGuid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetClassNativeName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidGuid</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.WIN_GUID&amp;, System.Text.StringBuilder, int32, unsigned int32)</signature>
                        <name>SetupDiGetClassDescription</name>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Domain.WIN_GUID&amp;, native int&amp;, native int&amp;)</signature>
                        <name>SetupDiLoadClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_ClassIcon</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsProcessor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ClassFullName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ClassGuid</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ClassName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DisplayGuid</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriver&gt;</signature>
                        <name>DriverList</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_PATH</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PrinterGuid</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProcessorGuid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SystemGuid</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>_classIcon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>isGuid</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>isGuid2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Icon()</signature>
                        <name>ClassIcon</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsProcessor</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.ToolsDeviceManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;, Microsoft.Win32.RegistryKey)</signature>
                        <name>AppendDevice</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon(string)</signature>
                        <name>GetClassIcon</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Tools.Common.ToolsCategory&gt;()</signature>
                        <name>GetDeviceTree</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsFilterEnum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Rescan</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>get_PresentDeviceId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>EnumFilter</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;</signature>
                        <name>_presentDeviceId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IList`1&lt;string&gt;()</signature>
                        <name>PresentDeviceId</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.ToolsDriver</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.RegistryKey)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlDocument, System.Xml.XmlElement, string, string)</signature>
                        <name>AddTextNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Backup</name>
                    </method>
                    <method>
                        <signature>void(string, System.ComponentModel.BackgroundWorker, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>Backup</name>
                    </method>
                    <method>
                        <signature>System.DateTime(string)</signature>
                        <name>ConvertToDate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;, string)</signature>
                        <name>CreateLog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>GetCopyFileList</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>GetCopyFiles</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>GetCurInfHardwareIds</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryKey)</signature>
                        <name>GetDescription</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>GetDestPathList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>GetFileCollection</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;()</signature>
                        <name>GetIncludeFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>GetLayoutFiles</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;, Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>GetOtherSourceFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>GetPrinterDriverFiles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>GetSourceDiskInfos</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>MergeDictionary</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriver(string)</signature>
                        <name>Reload</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>RemoveQuotes</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;(Easeware.Driver.Core.Tools.Common.InfFile)</signature>
                        <name>SearchDriverFiles</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>can_uninstall</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BackupFrom</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;()</signature>
                        <name>get_FileCollection</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDisplay</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPrinter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSystem</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUnplug</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OldIsUnPlug</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsDriver(string)</signature>
                        <name>get_tools_driver</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;)</signature>
                        <name>set_FileCollection</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OldIsUnPlug</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BackupFileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackupOS</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BackupOsBit</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsCategory</signature>
                        <name>Category</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Date</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Description</name>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>DeviceHardwareId</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.InfFile</signature>
                        <name>InfFileObj</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MatchingDeviceId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NewestVersion</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Provider</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_doneInfList</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;</signature>
                        <name>_fileList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_oldIsUnPlug</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BackupFrom</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;Easeware.Driver.Core.Tools.Common.ToolsDriverFile&gt;()</signature>
                        <name>FileCollection</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDisplay</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPrinter</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSystem</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUnplug</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OldIsUnPlug</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.ToolsDriverFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_path</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_sourceName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SourceName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Version</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.ToolsHardwareList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.InstallSectionInfo(string)</signature>
                        <name>GetInstallSectionInfo</name>
                    </method>
                    <method>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsHardwareList()</signature>
                        <name>GetInstance</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.Common.ToolsHardwareList</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,Easeware.Driver.Core.Tools.Common.InstallSectionInfo&gt;</signature>
                        <name>_values</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.Common.Util</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.DirectoryInfo)</signature>
                        <name>EmptyFolder</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FindFile</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Text.StringBuilder, int32&amp;)</signature>
                        <name>GetColorDirectory</name>
                    </method>
                    <method>
                        <signature>string(Easeware.Driver.Core.Tools.Common.FolderId)</signature>
                        <name>GetKnownFolderPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Text.StringBuilder, System.Text.StringBuilder, int32, System.Text.StringBuilder, int32, int32&amp;)</signature>
                        <name>GetPrintProcessorDirectory</name>
                    </method>
                    <method>
                        <signature>bool(System.Text.StringBuilder, System.Text.StringBuilder, int32, System.Text.StringBuilder, int32, int32&amp;)</signature>
                        <name>GetPrinterDriverDirectory</name>
                    </method>
                    <method>
                        <signature>int32(native int, Easeware.Driver.Core.Tools.Common.FolderId, native int, int32, System.Text.StringBuilder)</signature>
                        <name>SHGetFolderPath</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;()</signature>
                        <name>get_Dirids</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_WinDirFiles</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_WinDirFiles</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;</signature>
                        <name>_dirids</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;int32,string&gt;()</signature>
                        <name>Dirids</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>WinDirFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.OfflineScan</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,Easeware.Driver.Core.Domain.DriverFile&gt;(System.Collections.Generic.IList`1&lt;Easeware.Driver.Core.Domain.NewDriver&gt;)</signature>
                        <name>ClassifyNewDriver</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetNetworkXML</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetUrlPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ParseScanResultvalid</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.SetupDi</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32, int32)</signature>
                        <name>CM_Get_DevNode_Status</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnumServices</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Tools.SetupDi/DeviceInfo&amp;, System.Guid)</signature>
                        <name>GetClassDescriptionFromGuid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Tools.SetupDi/DeviceInfo&amp;, native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA)</signature>
                        <name>GetDeviceDescription</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA)</signature>
                        <name>GetDeviceInstanceId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Tools.SetupDi/DeviceInfo&amp;, native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA)</signature>
                        <name>GetDeviceName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(Easeware.Driver.Core.Tools.SetupDi/DeviceInfo&amp;, native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA&amp;)</signature>
                        <name>GetDeviceStatus</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>RegCloseKey</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>SetupDiDestroyDeviceInfoList</name>
                    </method>
                    <method>
                        <signature>bool(native int, int32, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiEnumDeviceInfo</name>
                    </method>
                    <method>
                        <signature>int32(System.Guid&amp;, System.Text.StringBuilder, int32, int32&amp;)</signature>
                        <name>SetupDiGetClassDescription</name>
                    </method>
                    <method>
                        <signature>native int(System.Guid&amp;, unsigned int32, native int, unsigned int32)</signature>
                        <name>SetupDiGetClassDevs</name>
                    </method>
                    <method>
                        <signature>int32(native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA&amp;, System.Text.StringBuilder, int32, int32&amp;)</signature>
                        <name>SetupDiGetDeviceInstanceId</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA&amp;, unsigned int32, unsigned int32&amp;, System.Text.StringBuilder, unsigned int32, unsigned int32&amp;)</signature>
                        <name>SetupDiGetDeviceRegistryProperty</name>
                    </method>
                    <method>
                        <signature>native int(native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA&amp;, unsigned int32, unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>SetupDiOpenDevRegKey</name>
                    </method>
                    <method>
                        <signature>bool(native int, Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA&amp;)</signature>
                        <name>SetupDiRemoveDevice</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AdvApi32ModuleName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CR_SUCCESS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DICS_FLAG_GLOBAL</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DIREG_DEV</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_ACCESS_DENIED</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_FILE_NOT_FOUND</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_MORE_DATA</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ERROR_SUCCESS</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>INVALID_HANDLE_VALUE</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>KEY_QUERY_VALUE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>KEY_READ</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Kernel32ModuleName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>NullGuid</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SPDRP_DEVICEDESC</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SetupApiModuleName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.StringCollection</signature>
                        <name>serviceslist</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_BIOS_TABLE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DEVICE_NOT_THERE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DISABLED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DISABLED_SERVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DRIVER_BLOCKED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DRIVER_FAILED_LOAD</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DRIVER_SERVICE_KEY_INVALID</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_DUPLICATE_DEVICE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_FAILED_ADD</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_FAILED_DRIVER_ENTRY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_FAILED_INSTALL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_FAILED_POST_START</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_FAILED_START</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_HALTED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_HARDWARE_DISABLED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_HELD_FOR_EJECT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_INVALID_DATA</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_IRQ_TRANSLATION_FAILED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_LEGACY_SERVICE_NO_DEVICES</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_NEED_RESTART</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_NORMAL_CONFLICT</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_NOT_CONFIGURED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_NO_SOFTCONFIG</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_OUT_OF_MEMORY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_PARTIAL_LOG_CONF</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_PHANTOM</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_REGISTRY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_REGISTRY_TOO_LARGE</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_REINSTALL</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_SETPROPERTIES_FAILED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_SYSTEM_SHUTDOWN</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_TRANSLATION_FAILED</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_UNSIGNED_DRIVER</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_WAITING_ON_DEPENDENCY</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>CM_PROB_WILL_BE_REMOVED</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.SetupDi/DIGCF</name>
                <newname>Easeware.Driver.Core.Tools.SetupDi/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DIGCF</signature>
                        <name>DIGCF_ALLCLASSES</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DIGCF</signature>
                        <name>DIGCF_DEFAULT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DIGCF</signature>
                        <name>DIGCF_DEVICEINTERFACE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DIGCF</signature>
                        <name>DIGCF_PRESENT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DIGCF</signature>
                        <name>DIGCF_PROFILE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.SetupDi/DN</name>
                <newname>Easeware.Driver.Core.Tools.SetupDi/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_APM_DRIVER</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_ARM_WAKEUP</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_BAD_PARTIAL</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_BOOT_LOG_PROB</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_DISABLEABLE</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_DRIVER_LOADED</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_ENUM_LOADED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_FILTERED</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_HARDWARE_ENUM</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_HAS_MASK</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_HAS_PROBLEM</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_LIAR</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_MANUAL</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_MF_CHILD</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_MF_PARENT</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_MOVED</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NEEDS_LOCKING</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NEED_TO_ENUM</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NOT_FIRST_TIME</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NOT_FIRST_TIMEE</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NO_SHOW_IN_DM</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NT_DRIVER</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_NT_ENUMERATOR</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_PRIVATE_PROBLEM</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_REBAL_CANDIDATE</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_REMOVABLE</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_ROOT_ENUMERATED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_SILENT_INSTALL</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_STARTED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_STOP_FREE_RES</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/DN</signature>
                        <name>DN_WILL_BE_REMOVED</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.SetupDi/DeviceInfo</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>deviceclass</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>disabled</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>friendlyname</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ghosted</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Tools.SetupDi/CM_PROB</signature>
                        <name>problem</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>service</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>status</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Tools.SetupDi/SP_DEVINFO_DATA</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ClassGuid</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DevInst</name>
                    </field>
                    <field>
                        <signature>native unsigned int</signature>
                        <name>Reserved</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbSize</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Util.Encryption</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>BaseEncrypt</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Decrypt</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Encrypt</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>XOR</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Util.URLManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DWONLOAD_EXE_DEBUG_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DWONLOAD_RAR_DEBUG_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GOOGLE_ANALYTICS_BATCH_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GOOGLE_ANALYTICS_URL</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UPLOAD_FILE_URL</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Util.Utility</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int64)</signature>
                        <name>ConvertToDiskSize</name>
                    </method>
                    <method>
                        <signature>string(System.DateTime, System.DateTime)</signature>
                        <name>DateDiff</name>
                    </method>
                    <method>
                        <signature>string[](System.DateTime, System.DateTime)</signature>
                        <name>DateDiffArray</name>
                    </method>
                    <method>
                        <signature>string(float64)</signature>
                        <name>FileSizeUnit</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan(System.DateTime, System.DateTime)</signature>
                        <name>GetDateDiff</name>
                    </method>
                    <method>
                        <signature>bool(string[], string[])</signature>
                        <name>IsStringArraySame</name>
                    </method>
                    <method>
                        <signature>void(native int, int32, int32)</signature>
                        <name>SetScrollBar</name>
                    </method>
                    <method>
                        <signature>bool(string[], string[])</signature>
                        <name>StringArrayComparison</name>
                    </method>
                    <method>
                        <signature>string(string[], string)</signature>
                        <name>StringArrayToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>StringToMD5</name>
                    </method>
                    <method>
                        <signature>string(string, string[], bool)</signature>
                        <name>array_to_string</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>export_registry</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>general_sha256_code</name>
                    </method>
                    <method>
                        <signature>string(string, Easeware.Driver.Core.Util.Utility/Sha26ParseType)</signature>
                        <name>general_sha256_code</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>get_cur_user_registry_key_items</name>
                    </method>
                    <method>
                        <signature>System.DateTime(int32)</signature>
                        <name>get_date_time_by_offset</name>
                    </method>
                    <method>
                        <signature>string(System.Exception)</signature>
                        <name>get_inner_excetion_message</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_unc_path</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>is_english</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>is_service_disabled</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>is_service_stopped</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>remove_last_break_line</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>remove_start_star</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>run_command</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Util.Utility/Sha26ParseType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Easeware.Driver.Core.Util.Utility/Sha26ParseType</signature>
                        <name>StreamType</name>
                    </field>
                    <field>
                        <signature>Easeware.Driver.Core.Util.Utility/Sha26ParseType</signature>
                        <name>StringType</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Easeware.Driver.Core.Util.Utility/SubWindow</name>
                <newname>Easeware.Driver.Core.Util.Utility/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>m_Horz</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_Show</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>1056</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>8863</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>6165</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>1544</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>37</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>437</statistic>
            <statistic>41.38 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>1590</statistic>
            <statistic>17.94 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>3861</statistic>
            <statistic>62.63 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>702</statistic>
            <statistic>7.92 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>239</statistic>
            <statistic>2.70 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>96</statistic>
            <statistic>1.08 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>64</statistic>
            <statistic>0.72 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>40</statistic>
            <statistic>0.45 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>34</statistic>
            <statistic>0.38 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>20</statistic>
            <statistic>0.23 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>